Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 
 CounterBox["Chapter"],
 ".\tFinite difference methods"
}], "Title",
 CounterAssignments->{{
   "Chapter", 2}},ExpressionUUID->"9eb284d7-167a-4196-a99a-b370caa4309a"],

Cell[CellGroupData[{

Cell["Mathematica \tPreliminaries", \
"Initialize",ExpressionUUID->"21d1a299-afc5-48ca-a62f-14ac80c89133"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}], "]"}], ">", "0"}], ",", 
    RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}]}], "]"}], ";"}]], "Code",
 
 CellLabel->
  "In[112]:=",ExpressionUUID->"a4fa0c75-4284-4d32-a9dd-b85c7838e9eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"NDSolve", "::", "\"\<mxsst\>\""}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"NDSolve", "::", "\"\<bdisc\>\""}], "]"}], ";"}]}], "Code",
 CellLabel->
  "In[113]:=",ExpressionUUID->"488d7c6b-8115-4624-9d37-18916d472bbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PrintingStartingPageNumber", "\[Rule]", "17"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"PageHeaders", "\[Rule]", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"TextData", "[", 
            RowBox[{"{", 
             RowBox[{"CounterBox", "[", "\"\<Page\>\"", "]"}], "}"}], "]"}], 
           ",", " ", 
           RowBox[{"FontFamily", "->", "\"\<Arial\>\""}], ",", 
           RowBox[{"FontSize", "->", "12"}]}], "]"}], ",", " ", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"TextData", "[", 
            RowBox[{"{", "\"\<Finite Difference Methods\>\"", "}"}], "]"}], 
           ",", " ", 
           RowBox[{"FontFamily", "->", "\"\<Arial\>\""}], ",", 
           RowBox[{"FontSize", "->", "12"}]}], "]"}], ",", "None"}], "}"}], 
       ",", " ", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"TextData", "[", 
            RowBox[{"CounterBox", "[", 
             RowBox[{"\"\<Section\>\"", ",", 
              RowBox[{"CounterFunction", "\[RuleDelayed]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Part", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<Introduction\>\"", ",", 
                    "\"\<Explicit Finite Difference Methods\>\"", ",", 
                    "\"\<Dimensionless variables\>\"", ",", 
                    "\"\<Initial condition and boundary conditions\>\"", ",", 
                    "\"\<Explicit Solution with Mathematica\>\"", ",", 
                    "\"\<Implicit Finite Difference Methods\>\"", ",", 
                    "\"\<Implicit Solution with Mathematica\>\"", ",", 
                    "\"\<Summary\>\"", ",", "\"\<Further Reading\>\""}], 
                    "}"}], ",", "#"}], "]"}], "&"}], ")"}]}]}], "]"}], "]"}], 
           ",", 
           RowBox[{"FontFamily", "->", "\"\<Arial\>\""}], ",", 
           RowBox[{"FontSize", "->", "12"}]}], "]"}], ",", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"TextData", "[", 
            RowBox[{"{", 
             RowBox[{"CounterBox", "[", "\"\<Page\>\"", "]"}], "}"}], "]"}], 
           ",", " ", 
           RowBox[{"FontFamily", "->", "\"\<Arial\>\""}], ",", 
           RowBox[{"FontSize", "->", "12"}]}], "]"}]}], "}"}]}], "}"}]}], ",",
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"PageFooters", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"None", ",", "None", ",", "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"None", ",", "None", ",", "None"}], "}"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PrintingOptions", "\[Rule]", " ", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<PrintingMargins\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"90", ",", "90"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"60", ",", "90"}], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<PaperSize\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"596", ",", "794"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<PageSize\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"596", ",", "794"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<PageHeaderMargins\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"60", ",", "60"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<PageFooterMargins\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"30", ",", "30"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<FirstPageFace\>\"", "\[Rule]", "Right"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<FirstPageHeader\>\"", "\[Rule]", "False"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<FirstPageFooter\>\"", "\[Rule]", "False"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<PrintRegistrationMarks\>\"", "\[Rule]", " ", "False"}]}], 
      "}"}]}]}], "]"}], ";"}]], "Code",
 CellLabel->"In[4]:=",ExpressionUUID->"9e83ee3e-b714-468d-be6d-0c67b979dd89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", "\[IndentingNewLine]", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "11", ",", 
       "Plain", ",", 
       RowBox[{"GrayLevel", "[", "0.2", "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"AbsoluteThickness", "[", ".5", "]"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", " ", "288"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "11", ",", 
       "Plain", ",", 
       RowBox[{"GrayLevel", "[", "0.2", "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"AbsoluteThickness", "[", ".5", "]"}]}], "]"}]}]}], "]"}], 
  ";"}]], "Code",
 CellLabel->
  "In[118]:=",ExpressionUUID->"6c5c9fbc-e52f-4a38-9710-8a6d00db103a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPlot", ",", "\[IndentingNewLine]", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "11", ",", 
       "Plain", ",", 
       RowBox[{"GrayLevel", "[", "0.2", "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"AbsoluteThickness", "[", ".5", "]"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"GridLines", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "288"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "11", ",", 
       "Plain", ",", 
       RowBox[{"GrayLevel", "[", "0.2", "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"AbsoluteThickness", "[", ".5", "]"}], "]"}]}]}], "]"}], 
  ";"}]], "Code",
 CellLabel->
  "In[119]:=",ExpressionUUID->"547bb571-dc76-46fe-bfb3-8d3c3ab0eba5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListLogPlot", ",", "\[IndentingNewLine]", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "11", ",", 
       "Plain", ",", 
       RowBox[{"GrayLevel", "[", "0.2", "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "11", ",", 
       "Plain", ",", 
       RowBox[{"GrayLevel", "[", "0.2", "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", 
       RowBox[{"AbsolutePointSize", "[", "4.5", "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Joined", "\[Rule]", "False"}]}], "]"}], ";"}]], "Code",
 CellLabel->
  "In[120]:=",ExpressionUUID->"ba3c8046-3fab-4dd0-8216-ab2608716af0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPlot3D", ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<k\>\"", ",", "\"\<j\>\"", ",", "\"\<  c\>\""}], "}"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"AxesEdge", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"AbsoluteThickness", "[", "1", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Boxed", "\[Rule]", " ", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{"BoxRatios", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", ".7"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"BoxStyle", "\[Rule]", 
     RowBox[{"AbsoluteDashing", "[", 
      RowBox[{"{", 
       RowBox[{"2.5", ",", "2.5"}], "}"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "288"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "11", ",", 
       "Plain", ",", 
       RowBox[{"GrayLevel", "[", "0.2", "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Lighting", "\[Rule]", " ", "Automatic"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Mesh", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ViewVertical", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", ".5"}], ",", "1"}], "}"}]}]}], "]"}], ";"}]], "Code",
 CellLabel->
  "In[121]:=",ExpressionUUID->"791225c6-27b4-4a4b-876a-17fe268b1d18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot3D", ",", "\[IndentingNewLine]", 
    RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotPoints", "\[Rule]", "40"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", "288"}], ",", "\[IndentingNewLine]", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", "11", ",", 
       "Plain", ",", 
       RowBox[{"GrayLevel", "[", "0.2", "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Mesh", "\[Rule]", " ", "False"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ViewPoint", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.360"}], ",", " ", "3.580", ",", " ", "2.000"}], 
      "}"}]}]}], "]"}], ";"}]], "Code",
 CellLabel->
  "In[122]:=",ExpressionUUID->"decf71f2-9c53-4385-baae-174d9c211caf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"ticks1", ",", "ticks2"}], "]"}], ";"}], "\[IndentingNewLine]", 
  "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "tick", " ", "function", " ", "for", " ", "labelled", " ", "axes", " ", 
    "or", " ", "frames"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ticks1", "[", 
     RowBox[{"min_", ",", "max_", ",", "steps_", ",", "divs_"}], "]"}], ":=", 
    
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"Which", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Chop", "[", "x", "]"}], "\[Equal]", "0"}], ",", "0", 
            ",", "\[IndentingNewLine]", 
            RowBox[{"0", "<", "x", "<", "2"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "2"}], "}"}], ",", 
              RowBox[{"NumberPadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<\>\"", ",", "\"\<0\>\""}], "}"}]}]}], "]"}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"x", "\[GreaterEqual]", "2"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "0"}], "}"}], ",", 
              RowBox[{"NumberPadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<\>\"", ",", "\"\<0\>\""}], "}"}]}]}], "]"}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"0", ">", "x", "\[GreaterEqual]", 
             RowBox[{"-", "2"}]}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "2"}], "}"}], ",", 
              RowBox[{"NumberPadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<0\>\"", ",", "\"\<0\>\""}], "}"}]}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"-", "2"}], ">", "x"}], ",", 
            RowBox[{"NumberForm", "[", 
             RowBox[{"x", ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "0"}], "}"}], ",", 
              RowBox[{"NumberPadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"\"\<\>\"", ",", "\"\<0\>\""}], "}"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.015", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "min", ",", "max", ",", "steps"}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "\"\<\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.0075", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "min", ",", "max", ",", 
          RowBox[{"steps", "/", "divs"}]}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"tick", " ", "function", " ", "for", " ", "non"}], "-", 
    RowBox[{"labelled", " ", "axes", " ", "or", " ", "frames"}]}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ticks2", "[", 
    RowBox[{"min_", ",", "max_", ",", "steps_", ",", "divs_"}], "]"}], ":=", 
   RowBox[{"Chop", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "\"\<\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.015", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "min", ",", "max", ",", "steps"}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "\"\<\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0.0075", ",", "0"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "min", ",", "max", ",", 
          RowBox[{"steps", "/", "divs"}]}], "}"}]}], "]"}]}], "]"}], "]"}]}], 
  ";"}]}], "Code",
 CellLabel->
  "In[123]:=",ExpressionUUID->"bb519e64-edd7-4080-8862-91c605d19045"],

Cell[BoxData[
 RowBox[{
  RowBox[{"options1", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1100"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<t\>\"", ",", "None", ",", "None"}], 
       "}"}]}], ",", 
     RowBox[{"RotateLabel", "\[Rule]", "False"}]}], "}"}]}], ";"}]], "Code",
 CellLabel->
  "In[126]:=",ExpressionUUID->"1e107777-4fde-4a71-927d-87b2735e377e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"options2", "=", 
   RowBox[{"{", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<n\>\"", ",", "\"\<t\>\"", ",", "None", ",", "None"}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"AbsolutePointSize", "[", "7", "]"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\[FivePointedStar]", ",", "\[FilledSmallCircle]", ",", 
        "\[FilledSmallSquare]", ",", "\[FilledDiamond]"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"RotateLabel", "\[Rule]", " ", "False"}]}], "}"}]}], 
  ";"}]], "Code",
 CellLabel->
  "In[127]:=",ExpressionUUID->"528a3b5c-0143-4a2a-a5a7-6d5d391e392a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Line", "=", "0"}], ";"}]], "Code",
 CellLabel->
  "In[128]:=",ExpressionUUID->"675c4bce-df36-47dc-bf64-71a30d0ccc27"],

Cell[RawData["\<\
Cell[TextData[{
 
 CounterBox[\"Chapter\"],
 \".\",
 
 CounterBox[\"Section\"],
 \" Introduction\"
}], \"SectionFirst\",
 CellTags->\"s3.1\"]\
\>"], "SectionFirst",
 CellTags->"s3.1"],

Cell[TextData[{
 "In the previous chapter methods of finding analytical solutions to PDEs \
were discussed. Many problems in electrochemistry are such that no analytical \
solution exists. In these cases numerical solutions are required. One method \
of numerical solution is to use the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " function ",
 ButtonBox["NDSolve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/NDSolve"],
 " although problems may arise due to the discontinuity in the boundary \
conditions that exist in electrochemical problems. This error message can be \
switched off prior to using ",
 StyleBox["NDSolve", "MB"],
 ". The problem is set up by entering the partial differential equation and \
the boundary conditions. The result is an interpolating function. For example \
for a potential step to the limiting current region the problem could be \
solves as demonstrated below:"
}], "Text",
 CellTags->"i:28",ExpressionUUID->"1ca14847-313f-47fd-ac54-56380f94d2c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"NDSolve", "::", "\"\<bdisc\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"c", ",", "result"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{}], "\n", 
 RowBox[{"result", "=", 
  RowBox[{"c", "/.", 
   RowBox[{"First", "[", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"c", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"x", ",", "0"}], "]"}], "\[Equal]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"x", ">", "0"}], ",", "1", ",", "0"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"c", "[", 
          RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
      "c", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", ".05"}], "}"}], ",", 
      RowBox[{"MaxSteps", "\[Rule]", " ", "200"}]}], "]"}], 
    "]"}]}]}]}], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"2a745a38-e76c-4e30-b8cf-143af66eb7a5"],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.05`"}], "}"}]}], "}"}], ",", 
    StyleBox["\<\"<>\"\>",
     ShowStringCharacters->False]}], "]"}],
  False,
  Editable->False,
  SelectWithContents->True]], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"5d6941b2-ae3e-4ea9-adee-388bd4a7b6b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"result", "[", 
    RowBox[{"x", ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", ".05"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"8c0a74b6-c3f9-4d5d-932f-12a2713728f5"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJxk3XdYT/0fx/GiyMi8pWRktZBCVvG1ZYRQRkQpZGVlFVIhqYRooB0iKaUU
JQlpoUFDe+9Be/jV/ev1eZ9u9z/3dT2uz3U63/M9z/M55zh1xusYbNTrxcfH
N0yIj6935/9lMkQ+SlpoLhxvvPzg5T4iC/n4/EIbbwUvVGqc+sZrsRMPfsOy
2e5kcxmv/7vybM/FT5hPKuntUWBQw1M2yzmq5B/A3CHqzKukCTW8usmxxzwX
hzIXexYwQtalmre5YHtIH/0I5salPu1//lTznit+nafk/565oaZLS5f3v7o8
1KD5I/OwkKmda1/D00sNne+5OIb5kvf9//UIGfnXqdfimXd91i63CUt80Ef/
K48+7/9dea9wloRw4l9eNkhlrJJ/0l/uEGyqpa6e8pev2B3mbND8/S//LdSU
de1B6l/u7j9jnOfi9L98w/bDu8ILM/7yjl6PXVKvZf7lPk/zsuumZf/l054M
su2jn/OXm3dM8RuulPuXZ2xc9VVCOO8vn/Fob8207L/9WqvZECX//L88Z72b
vIpZwV8+xzN8g7p64V9u05RxVEeq6C8vXNtsa9D8tyu7ifgbxxb/5bfrZ367
9qDk7+9xlVrtXYPSv3yx85GhnovL/v5+664r+A8v/8urV3irhRf+7SvufTwW
G1zxlz+ozr+Zeq3y7/1hKf+LQs2qv3yNw9jEumnVfy+nQqmuq4P/OvqdPnXL
HjV+dR4f3+7foftcWL/w742PL2YrpbN+4Y+1Ho4RXlvE+oUvrLtoeCypnPUL
H682Ov+gdRXrF86rmXt9qB31C+/7QEtlYCX1C/fXi994ovPzoF+485XUwa85
/cLXamhvGsrpF/7srZXKGE6/8AufRC52dC4f/cLfphfs6NqO6Be+dFGOb5ej
X/iHPntHc/uF21+Lr+gaj37h1bce9+gX/udOH35uv2z9A6r+dC0H/cJnTP3+
r6Nftn1CBXv0C/8n4M+/49EvfLlt+7+OfuF7x/fsF241sme/8ODf/18++oUb
/6dfePR/+mXb88//l4N+4SXdjn7hOG6jX9rPe/b7X0e//3X0+19Hv/919Ptf
R7//dfT713K6+/2vo98UvokBG/j1On1RiKrqbdYv/F5H+aWY8YmsX/iZSymj
Z7fnsH7hWk7uf7QGFbN+4Zb8fLuXTSln/cLXGf1ed8yjkvUL/9wvY/n5pirW
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
yR3UL/yXsvqmHZx+2fK9tB495vQLTy1JmJHI6Re+2kDZuITTL9s+Mt82/Ob0
C3/3xnF5C6dftpw9S5a2c/qFK034//U4+oX75CzT5/YL1xW+84bbL1zdtzaL
2y/7vDMuFnH7hX9v7Tn/Zt3aLzp06M2uft+o97/A+oXP/iQwYtXtN6xfuFhf
P+8m1TjWL3xycWxMeX4y6xde6dffpXlBBusXfjBZdoqZTQ7rFx77672O7Rzq
Fz56xdt+EXaFrF+2/gOdnQU8i1m/cEO/GZmH9lK/cAGnJeefZ5exfuFph7Jn
XxpB/cLniMnltQ6ifuGfm1Zfq0mqZP3C/WrUeh0+RP3CDwjteSqVU8X6hX/Z
YXNZZTb1C/eOKTGeYEj9wkNDAp+KulO/8Psi6Y0e76hf9nk3r9dQ/0H9wsfy
nbnSUEj9wt9KjpzqXk39wm0S8/oU11O/8IkZKuF5zdQv+76Knv7c2Ub9wgMF
h7TltlO/bH3mb0z/3EH9wk3eTZXYyOmXfS7VXzqunH7hZwK/H4jj9As/Pvr5
lwJOv/Bt+5f+e36OfuEJrbMymjj9wiWmORm2cfpl+4mv/NIOTr/wbPlXMtx+
4RdWHb7D7Zf5XIcIbr/wqsae/c42sReV1L7Vdf7sMvm3MesXnvYgPf3I9des
X3j/AfNzJqjGsn7hwYPWKIyfSv3CSxbn1TtvTWf9wi9o396f15/6hR+zf+m5
wjuP9QuflCtn1acX9QtvFhzw2XEY9Qv3HfD25YKMEtYvvN9okUd3tahf+KLN
r8zl3MpZv3DhccsH8XtXsH7hFRE2ESnG1C/85jWxVykTqV94yxtdGXEv6hdu
aXLln919qV948S1lpYAN1C98dMTm3weuUL/wA1cbD4s8o37hvG1Xh+tFU7/w
GSvNhDZlUL9w1QFz8+aVUL/wwaNHPUuvoX7ha5UbxUwbqF/488OzE6RaqF+4
gWCHyJk26pftJ8FpMkXt1C/bngUWtz90UL/w+HOSfddy+oU778q958TpF378
xoi3nzj9wnN36xjlcvpl++eqFwnVnH7h7nYhZxo5/bLtkxxs18rpF77ly4zY
dk6/8I9fBEs7OP3CHfaV7ef2C79X1bNfm8MfRZX8b3f9/kLxk2Yj1i/8/ac3
WyWdQ1m/8K3xz3xS9GJYv/CSE2sHDLmSxPqFN/cV9dtnkcb6heusOvpm5+Rs
1i987Tin+4clqV84b+w9n8qzBaxfeNaeMJGtlkWsX/jMd4p3922hfuE7alW1
Y/JKWb/wjps/dwjKU79woSv+UeuXUb/wtlnPz5ydTP3CpQfGR3inVbJ+4Vv6
1FXb76N+4fOitpy7m1LF+oUPXvnmk5QM9Qvfv09vnss+6hd+wdK94dUd6hfu
6P/+eVsQ9QvvZ/LA62oC9Qt/OOFNqkg29Qu345f7cLaM+oUnOfadPayO+oU/
CvWvlGykftnnulH5zKyF+oXfdfZ5c7+N+oW/faDnVN1O/cLN7W5PjumgfuGC
kZP51nD6hV9X3ydzh9MvfNsO0ztRnH7hK75/KMjm9AuXcxW7WcnpF56WfrCw
ntMvPDx+2qRWTr/wxQukkto5/cLzK7zudXD6hb/61LPfou31ohv473T2GyHw
WIT6hW8dMN6t5GMIPX/V7e5XbqQ/vf2Znr/q9ruv6qU/VSXS81fd/i685rJA
TCo9f9XtIV4LC0+qZNHzV90eK33T2uBZLj1/1e0yuTqn5Frz6fmrbp+eI/Nc
vz/1C6/ZHOijn15Mz191+8Dn/a9KHaJ+4VWep09siyyj56+6PfjL0btHc8vp
+atuP/XjfP/DCRX0/FW3D7oucOi5DfULT/xcJrxfmvqFq+4cOu+MG/ULb/Ru
OMD/p4qev8L3kjF98IwVnOevuj1zXci5SCPO81fdPt7ZfK+CB+f5q26ffezr
+xdvOc9fdfuNS9/3z0rmPH/V7ep6vRQ88jjPX3X7zJ+1DZcqOM9fdfvUX40i
Kr84z191u9bPMLPcRuqX7YenJN5+b6F+4QEbb5RHtnGev8L3LrT4mRCnX3h5
0sdnXzqoX/jS0c0VKzj9wu9slU+34/QLX3xLf+N7Tr/wyW0D5H9y+mXbYdQa
/3JOv3BL6b3W9Zx+WS/ZX3+3cPqF7+R9md7O6Rcu7tmz34Uqk8T01O529utq
L6lyjvULX+2mIubci/qFn+noleGVFM36hf8zQ2/dIl3qFz5Z9oGKpDj1C89M
3Hz9sXEm6xduE2O8R3oB9Qu/Z60XnmxO/cKd1pgITbhVyPqFfw75Epu0h/qF
p00KMjZpKWH9wo8kfhijupX6hV+e2PL0hQn1Cx9hl39j2Bnql63P4PGrDi+l
fuHLBl+/L1ZSyfqFD1IfturUQeoXnuFkMdw7kfqFf1Vb6WQ+gfqFt04LUzuw
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
C2/4Ov3o8PXULzzXcKyCX3Yl6xd+ebrk6Y0a1C9cXXO+i3kQ9Qu/ONgq5V5v
6hf+SmLCqaeLqF/428ikXWePUr/w+BiPUafuUL/wA15uV976U7/w3W46k8Z/
on7h8/68vTfqB/ULj/jser8oj/pln2vhPwpm5dQv3C7y1azQWuoX3mfb04Uy
DdQvfM1isZGrm6lf+OTsgRVnWqlf+JKQi20tbdQvPPPERb3enH7Z/pYuYB3c
Qf3C81++yJrB6Rfus3qpzDVOv2z/NDu57jOnX/jH4209+l2XumBUvoJz1+/v
jw24d4r1C28YH3xd9spL1i/c2TjzZvU+6hee+Lj0UsjXL6xfeH7Smxe/apJZ
v/CljxZn73mXxvqFZ0cF3BywnvqFuzt8WumjQv3CY8xXbq1ZRP3CU4qHTJ87
iPqFR9dfnXf5eRHrF16+z9gofRL1C58qF5wqbUD9wqU9o6JlbKlfeMDA03xK
ltQvfOshRU/F3dQv/Fu/V9IrR1C/7HOtaXkW50P9wrf88+uPnCz1Cx9Yd5kv
xpb6hd8wuij9Lb+K9QsX4PuouFiS+oV79BnhkbSd+oWHBWRn15tRv/BRldci
PntQv/AxY40SJr6hfuFP3myysE2gfuEictcTt/2kfuHqIalq1kXUL3z66WnX
BKqoX/ijF7mNB39Rv3Dh3D0fVjdSv3Dbfn0rhVqoX/h31aGZ9a3UL3zttBJl
1Xbql+2fQo7HlDj9sv15a86j3A7qF27gsXr/Vk6/8NZS+0svOP3C77S39Oj3
4YdDo5ouuXT1Gx8wgfqFdywrXrV2OPULvzXq4IKchijWL3zSs/JQtynUL3z6
8weTG69Qv/DXfpOeTF9K/cIDZylM1ojIZP3Cg60064a15rB+4W6mCn1kq/NY
v3Cz9n9c14cWsH7haQFac/ZrUr/wfnFLIlQSi1m/8KzFX4Y8Gkf9wjWWq7s0
LqN+4Y8jQ71Ul1G/8AX5xQvmSVC/cK/nbRvcMipYv/DPysteuZ2lfuF5h+5N
OdReyfqFe/pc3DP9APXLtoPqiJGtkdQvXHb/nmUB/alftj37hI7pvYz6hSur
S8qrHaN+4cKOWmZv7ahf+NG2iFkyftQvfK2c3utJH6hf+NN9sRuEUqhfeMHY
pSHVOdQvfOL4/bmRpdQvG2+fwadcQ/3CLxz9Nq36N/ULH8fXS2pDE/ULV5Ou
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
0/L1pRSoX/hwoTtS58SpX7hE2AKbsOJvrF+4Sdu4w9fHUr/wSad5g0tlqV94
VoJhg20f6hceFH8xa/L3HNYvvDhp2ik+K+oX3jhPK117IvULLxQ/tE/3HvUL
37xqirPfryLWL/zigKFTj0+lfuH3e/vkr15B/cLzMlNKly2hfuGt18JMIsZT
v3Ap0zzvPUXlrF94zuzBrn1vUb/wGtkp1Y8lqV94yRppT42H1C88WDAgdNJw
6petp7BOXwkD6hf+ujQubMkb6hce22ZReritivXLfq5UeLG2AvXLvpcNF5ND
d1C/8O33ixyrLlK/cIuTHimr71O/cMmyEMeGF9QvPE7Qdf6vKOoXfna4VszY
JOoXbh+RrzQni/qFL/xQbZxZRP3C721oVHGspH7h5kPeRPyso37hz3ZqKgs1
Ur/wI413Kw+3UL9wnSNPr6tz+oU/qEjq0W+2TT+b7d5d/S46Lpl3nPULnz3v
XcK5Nn/WLzzins7DoLJ3rF94gsrnRfkBMaxf+IBR6tNveVK/8CUic52vxKew
fuGrBg+T/R6fxvqFL9J/G3vEJZP1C09MGbH0gTP1C68b4VNjr0b9wn97blo/
vTif9QvfNNzk+wkt6hfuI1Pwvi2I+oW3J+05lFVTzPqFF5zu4+A8kPqFf7Zy
2CI9gPqFKwx1n/i687oY/cL1pCyTM15Sv/C7l+Y7LdWjfuF7wzUKvrZXsH7h
P9aOPHP6EvULz7/ldnpmXSXrFz5rm4Jvuxr1CzcPypoZ4U79wnfcMvmyvoj6
he9OMNyvO5b6hZ/QH/XHbi31CzdYraWlfpz6hQe6Jrv9sqV+4eO0Ag0cvalf
tp4XlTTWhlG/8IuKF9Kr46hfeD/Xb0tV0qhf+OGRxza351G/8LMiE4sflFG/
8CEzDdQ9aqhf+EO12xKG9dQv3G5Dmc2hZuqX7W8K91entlG/8LLY2B79Xhcc
P0hP7WHX+bOGtxP1C79RbShj+Yr6hZeNqT1o+Yj6hR80u14hpEb9whsqrPvq
61K/cO9RWb37m1C/cPuonSuen6R+4WeFcstOK1O/8P3igofn6FO/cI/yiYdU
xahf+HLh146Cz6hfeGbpXu/9E6lf+LlzO2T+GFG/8Dsxeb0+B1G/8GMufYVm
JpewfuEDlTaPGZhSyvply5/84plhKPULv54YkpVymfqFy03UjP40l/qFT82a
PE84hfqFD9paGnlxB/ULT4ssXSrwjfqFT98z0vniLOoX3n/iDa9YC+oX3jrk
xUG/L9QvXHfYSr+f/alfuGK2qVWuEvULFzv2PXG6LvULH7cuZ96Iy9Qv/LWZ
ysQwF+oXHqCzxk7+JfUL/2DhnLrlI/ULX3LSqqUtifqFX3YSkEjIon7h8SEr
qncXU79wF03tSMUq6hcuekZ+8utf1C/z95n71ZqoX7b/iIsrrOP0C89LiuzR
7xzjuTYGzV395myV1qB+4ctC8vWOnKZ+4fK6P4dK7qN+4e5fykfNr/vM+oU3
P5EuS5akfuHrdy4ydVKkfuH2tycG142lfuH+rW7mUzJ/sn7hh7+9zAtWpH7h
Vwde0y/Py2X9wssEVti/Okn9wtsWVQeOLytg/cITBIP03JdQv3APpctLpC9Q
v/DhDSfO9HtA/cIvlguNaHWhfuHLl+lG9rKgfuG2jhISBzSoX3jMopHD/AZS
v3ChVb47jHyoX/iJC3u8rOZQv/A/jtMPv3hO/cI336ucES5C/cJ3CrmGnz1C
/cJlqh22ur6ifuElZQ8X/mioYv3CN1mPE/eWpX7hsiUfx5qpU7/w5z6L0/zP
UL/w/tpDXLTvUL/w2DQFWWcf6pf93LeBPza9pX7hEjJWSWoJ1C88fs2tCWvT
qV94hsSJ+Kx86pftJzt65dmWU7/wS6P7fPxRS/3CXwS9eT2qkfqFb/Ty3BbU
Sv3CV9e/6tFvft36QefcHnVd/w7S/4f6hQ9TfTO3Zi71C694fj1qkwz1C092
O+InY0/9wiULNF54lX9l/cKdJYNy+KqSWb/wN/ZSf3TjUlm/8DFr616vvUT9
wsv5rar4BKhf+Ey35LkavtQvPM5aNHD6QuoX3tpooWH5gvqFP5t3VPN7f+oX
/mTpyIyaFdQvfOX+3tri+6hfuO+h8MW/DlK/8NrXsy/palC/cD8jkTnOUtQv
fM2Z4DyB3HLWL9xAQOfrZHPqF77Hma/Vexj1C3/w5OSZ1TbULzxdWl7wY1Ml
6xd+qXLKk++bqF+2fJfKclk36hd+obfdWq086hcepHLN6bco9cuWM2zlN40V
1C/80M/bvl8OUr9wzaYl769bUr/wWWuNPjl4UL/w3trR54uCqV94iYy1g0o0
9QuPKh575kwK9Qs/47BkjGgO9cu6cFFrDiyhfuF1FjtHxFZTv2z/ObbbLLqe
+oXLe48NG8LpF2453bdHvzf099mYr3rcdf17bVvKMdYvXELSza6jzY/1C1da
+9q6V1UE6xf+0MPnZDiP+oXrajh/jnlB/cI3LNGOkfamfuELdu3XrjKmfuEd
7+fmR0hTv/DRw4LHCD3OZv2y8QG7rC4YUb/wwwqPV2r2o37hL2vU+t82pn7h
DpI5ClbJhaxfeOOwaKkRQ6lfeJtcSvKOGdQvvJfo3ZyyudQvPDmC7+ntydQv
/Of1+V6Hm8tYv/A5qY/tol5Sv3D9p9XBwjuoX/jC0IsXMiorWL/we9/E9RIP
Ub9wvYCCMud06hee7TPWvnwu9cv2h9KJMtuvUb/wtxozphvHU7/wyV+/z0vo
Q/3C634o2gTOpn7hRaWFZqe1qF949NPzq5depH7huUn8rZJO1C98Rv1d6RF+
1C/8Y+ZK88J31C/83NmEzRpfqV94TuwPhcE/qV/4zYYPHh6F1C/88/uvY+9W
Ur/wXUKXd2r+pn7hm5aLeO5soX7hK6+69+hXKefCoBu1Xf36xUQ6UL9wldTx
enrvqV+45ZBAnz+B1C98ywCL28/Lo1m/8OtT1jmJGFO/8MreUdGZe6lf+Ahd
GzENeeoXHqm9yl41KYP1Cy/svVt61RrqFx5s42KwajX1C5ccGjd54vc81i98
yVPjJVIq1C/8l4nUzQAX6hd+tPH39ms/i1i/8A6fI24fO4pZv/BGdX357D7U
L9ue/E9u3awvZf3Cd1T+WZUZS/3CRefMr22wpH7hp411RyyYRf2y72VaXuDU
z9QvfKGhnpXGGuoXLrVa4KT6G+oXPneMaFTUGOoXPnqlxI15x6hftn2ilmxW
ekX9wgdc5JPg/a5i/cLn9fIT85SkfuHvsuNePt9A/cL9BW7NtT5B/cJrhWZa
r7WlfpkbjrPOe0T9wsePfb9X9jX1C090OJBcFEP9wnkNp92jflC/8EUy/SV2
5lG/8D+bplTNLad+4Xt1vy9KqqN+4e5LnQQeNFO/8JDWOz36LdC4a+Po6N3Z
79c317WoX3jivp/5A62oX/iVhIiQmReoX/gk9dLv6U7UL3x26AiZEyupX7ju
jXg/QSnqF/5FepT7haIfrF+41RuF0kQT6hfunB3q41GbxfqFX/VRFXk4ivqF
/3KtLj3lSf2y9Zxx0GLOCOoX/log02DhIeoX7uEZtWKxN/ULH7srKGZdHPUL
t/VpfRSdUsL6hb/N2qKy7SP1Cx+cdSK5zJn6hackmyrc3039svWxsbkYNJD6
hfNmOqxx96R+4X+ESrZmylC/8GefHfRqH1C/cNUk68IDvahftv1X8KsnbqV+
4fXuY4d6uVO/8Ljmor0bcqlf+IPr1oJyItQv+16WH/nHZAn1C5/15ZTh0X3U
Lzw2P3X/4CvUL3yUi9CdTS7UL1zDdd1M8UDqF346mb/ftA/UL1zJOv71/CTq
l+23Vbv+yc+ifuGrk2e5dZ1Xo1/4kTu8n/K11C882GW7wpcm6hc+59b/3294
f8/zk48WW/LyTd++38i/nPcsuZ9nikkyr5f1nWYJ4UjmO/U87hjx1/B2ZPU/
p67+gfn4y8LhcZ2O5VTcTdBtvrSL56k4/Kfm9w+8YZfqz4UXxjLn3fPb9Ki9
mnck8UBr3bQvzNW2eswQ46PlzArKCvBcfIC3Xzz56DXFCF7h0Jqw4UrfmJ8q
d9dS6DyvuB0q2zEtO5H5hi+nnT520Oc6M+Tpdknt47yte8uGFKx+zcbDHSX9
No3t3G6L9+gtVDFLZs4zc7xh0vX7ngNcL+hIfWdu0TzCbiZn+akf9mqeczvN
m+B9vP7r+FdsPDwhutfb753XNQ8C08ONY38wDzj9MCOllZYz22jCjoRcY57n
Bv6D/+S9ZOOZJ7pb/ur6fneO+HPXII35obEvRx9vpuWsFjWQGzr0Es/Uu/eY
ebKBvGbBDTz/4RnM86+YDx3dWM175Gt5MTb4J3NtA7HTbZz1aamLk1PyN+N1
1P4zJjLmBfPH8bLT9dSu8MpMRw7e4+PP2zyWP7vreSB48HKpXkYqMWz81scW
02/UWvCshD5Gng31Y+Ph+3vdPTSuMJqN72NWND3k5nWeaEv+n5rvz9l4OL+a
1pZXgZ/Y+KCdy+TzFWx4tqavxAwMfNl4+Gn+pVrjfD6y8TNGqzn00bflBa61
FzGf+YyNh7+4tOao1vsPbLxlPxMH8ZCbvEOfjxrXjfJh4+Hbp2TfNvwdxcbn
Nfg6yPe7zbs7O3PT3XFP2Xj4Al+3NY3zafz8gkyH5dvseItGBksHKj9h4+GK
d69HnL39no2/9W2g43bvOzy5ndEiE454s/Hw3c6bfQJbItn4snAlR4Pmuzy5
xX0vrPZ/zMbD+/pYPCs/QuOX+BxwNF/lwOOL7HNmgACNh/vo8p/2qnrHxjs5
/vsfL0s2wbRG9xEbDw/PuqcZc4bG112JdvQtdeKF8s358vXbQzYebhJb6h02
gMavPtno+H7efd7v7OzzvFU0Hl6d3vjQ6GEEG++uLemUeu0Br81Sy2pNjBcb
Dz+ktmDpahUa37JO3akyzZk3umJKTMlGGg8/JHlqzO7st2y8zNglqvwjXHkC
++60yeR7svHwk3UZfQzm0fgUu23xA8JceSaVtqqmZ2k8fOMHyRfn74ez8ZcG
HFMV0XPj/XP59Io+IjQebqUmb+wtROOnmVrESwi78xKXJxl/DvZgntbkojrl
pTtvM5+Ezjct8ssGwfGKOz14h66oPlPoT65QlKC6SNCTJ7q9ed7rEHfmmTuK
4lc/8+RJPyz9vOow+bWkdlV1dS/e95o1Y6dMIldcPSJhV7sXr8Vk/6CDWW7M
cyOmrjvg9ZDnFK7S/Oke+Xjj5Qcv9xFZWHJvl9Ciw7nMp0/dskeNX53nHhgn
bCIZR/dpu+cdPr6cgiVfHi/E9oG/iWjwshIv5uUoHKzpo+/HfBWvbd0gqUqe
fbJ6rUFzEPNPa9bmHDhSzVM9vagu9VoY84AGwyeZncd/zINYT+Ufxf++1xvz
IOavPnnz3PQ7r7tfTTdpufYgmi3nd/DV4Hl/yDG+Uc3ke0JNNZsfMT5z4Xjf
rvcSwrEd6m7rrtLu9JNLpuk0363m0Xb4/3sM2f2x/zjbD/kmBmzg1+N9fFXg
92tfJJt/MW/m++q+mtL19wa751msp3ydcrho53LgWM7DjYJbZv6h+Rfjx2tl
y3aNh2N87Uwd4WGc9bl10Cmw6ZIBb2ujYYuWYRibf7E+x+XvP4n+Q/Myxsf/
c2D/Es78K10upLmB35CXp3l6SI5NCPOrrlGanovP8arc65NHVwQxL1I32dF0
6SLPJKVjm2xzIB03BJ3lJLVNec4xU5TbjgYwx/vWfYX7f9BXpHkQ73Hudexd
jpmcP3P2Hl6d3gck1vsxx3snd5i9eyw95jlzvM/uqPUBO8c4mo/gYbsvnJ42
i+YvvD8rJ+503RIPmo/gi9WeS/faRvMX3tcTs+uUSY0jzUfw009DBZfdofkI
7wfxFNO/pvKU5iP4nWofMelCmo/wPgKdoT5SpYk0H7H3Lxx2frl6OY1n7yNo
bTibIEzj4Rbi8jY7Amg+Yn9HOmXH46HbaD6CT/MbEOM4jcbj77vKZ856GfuC
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
kye63iMZpX2zSjM8hS3HTTMnJbSD1sckdY6mntqpzvPPkND26Mds+8P7r9MX
v+UQya7f0dEjldF3btfQ8jF+o0O/t00NtJ/jOCOvKFfQdT/8eP84uVM6P9j4
fvynko5wvscs61+aITeNeCr9+xyatvshWx944Rf7ES8+RLDjEvZ/W7Xwcs9y
Wj7Glw2esyK6jrrAcSNc0sbjXOfPlQjoY2DbJ42Nb/xz46NAC62Ps9sW3z76
JjyTZU0hMjaebH3gxiHjkqckhLPx64xf+sr3M+OV+Ly+sF/cg42Hvzq2cuVm
9zdsPK53Kgwf2CTVuDHH9Yuul+ZLwXpX5rgecQ2cNVdsLDmuL6SvbvNSjnZm
juuF3TZhRhKmD5jj/N/1Wek0Je37zK2UPLZOeXmL5xp/Sfub1j06f5NO3LpI
0I639YleeKGhE3NlEf5t6up3eDUaKpqr3R2Z2/WW33bA6y7PrzFFVS/Xgd0/
RL9qETlLvHvR+Q87b2lPOWPZud/iPBk98vbVLXjIOU/GfN36NDv5Vdf9NINT
u442P6TzeY+ZX3X2VTDH+ar2tt07jyvW8GzSveTHC79g488UX1bSMK9mjvFJ
LyI+3lapYefP8Ef1Lbaa3nQfD+chFcnHTARs6fwZx42UpNDI6anV7HoBnmi0
f2pxEzk+75JJCbryfHR/D7239Y5+l955/onjEo4zqxr6nMqtpfu6+FxOEqOk
08ZWs/u68Bfbohu67qex37/oPh6eLJt47n9NXX1MzGEcL1oXjRCzFCZFGAlZ
apSWDHm5nFTckZeKCl26dWpMkhJFY1rDScVK0ca6lDpDy9EleSm9TcO5c3W3
8naXOHdbn+fbv5999/09z/f183yf334/838nwTPBV2dNyrA1/98KdQDrqeCe
mD84gteB/zTXdHGPm3DMf6DncmWVZuEQ4bBDXK7Pt5x79FzwzBaVzHnRIOHY
L68pYHmqkngmnttSLA930BOOuufnkWxXYKoPyEfgblMSKqevqGf8DXym+6Vj
tlJL+wJuzV92ONRAOOqYdPvU62MHiBdB/0nRt1zzPBY4+Ebw0rHi2h+Eo/5o
Ci913O0lfgL96+7MdW4bwVvAN4qmTvhq/o6liOOSc62N6ph+lzDVZohwyC++
ryvpMdnHpULwSprSwfp7d/z7cyWmuo1zEPy1ZoxV4zsN4YiTiX/SHsos6TwL
f7krAq2LvlP+Ii8k0Xn1s4foPAt/3a665WY7QDjiytKvonO8nuaEiBNL757T
vM/UrxEP+5a0JZf/pPkz+tTFz5Ff+7uIn8OeP3faRXl/JH6CPpVX7eCYomrx
NTRmCTgHbjD5hjMbIjbLm5g8+sgeseYBf6iZycP+N/XrI7rkLxn/BL+SlXi2
tqvIj+gjWus6/wQ18TrIuweKDxV/Jz9C3uPI1tC9P2j94HuVTaf8z858xdYD
+XTPlW+5mXJ6z2SYp7n9c+K4fmpk8uhT2ywK+nc/bmDy8Mv8By1evJpWep9n
mG/4OGQlv5C+Y3oQ/xxlnI/n2deMD0BPe+4MobX53DqMQ8/z0qsx5nkL+jj0
lNeM4pYZqY+DL8XG6g92jcDhR0dJkCDOSP0dfhw0Zgfd/0d8FXEimJfbKjQS
Dv9+CWrMMP93rGnH6nulpe3Mv2lt0ROi/9L7aeCx6+Pn6eQj7h2AJzaIw3v7
Ke9g51XpzmpFP92vIV/OWfiFTf7Vx3D0hfiBR+1Ry6jOQz7JENE9MV3JcMhv
SS23jxGrWf2H/Be+vsiwScNwyB9VeNfNEfexuRDqwPkrSq6XnPIRflzQ2129
+oWW4ejLQYkVQvtQylP4q6f618XmMsLh9xCdW6HTG+q/eO6qp04yfkgv67/A
jy2XRrr+1jL7I56jpymS60z1OcUqRfdsUyez89WsjRFJJr/gngJ2CLMX2qqk
WrZf1BnRkyRevlbL5jmobx9i116oLKP5CepY/e3RtXxTXmMeBf3CuVsSfb3U
bF/QP34S94IkUM3mk2y+VCyrsuuk/UL+5P5Mm6jpfezeAfY0jusICH5O60G+
7MrPThMpaG7J+nVeYYIhieZawI+fN1pYeND8CnU1kGd3rcOf9MC/osJ4SdVT
4i2QL4j0dgjJ0Pn+B8LI84g=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[Polygon3DBox[CompressedData["
1:eJxVnXn8VcP/x+96bvadr33fspTKHmUpWaOshZIlikiESipkT0QKWcqeilJZ
I7uyFVH2kH3JGpJ+8/R+nsf1+2Mec2bmPTPnvJ/vc2bO/dz7+mzc5cx2PUqF
QqHDSoVCOeV7ZYUC5YYpNaoVCktS+eqUdk3H26d0VTreObWtmFLqUpiQ6vZO
6cpUv1Mqr2DbuFTXMqUrUv0/KX2c0t4p7ZjaltduF8dYOaXHk+11qX3ZdFxM
x5+k431SeiAdN07p2nTcLLUtZ/9d7bcK55zS/1JaO6XdU1o1pdVS2iOl1VNa
I6Xm1lFukdKaKa2V0m6OQZ89taWtpe2Mu09K66S0bkp7Ow/lVimtl9L6KZ3s
HMy5r7a0XVKLc26aUmttN0hpP/MNUzowpU1S2jSlg1PaLKXNUzrIOsrVBoVC
JaXf0ngHpPLG9jlE2y1Samu+ZUrLJNsGKS1K9vun8kb2WS7VLZvSn6n+g+TT
G1IaltK+WTBvl9LTqW1iSkcxV0qVlIam9i76HZ99lsqts7iu/VJ765SGpPJI
GR+XUhuvj7kPTe03yfAU/YS/D0r1n6b6Vil1KkQMEV8nOg88jy/EmLSdZB2+
7qwtcXSCOefX3vjdJqWuzgPz61I6NaXTUupm3MDzdBnDrbt1lM+RzUH2aWmf
M7SFfw9z2J5dCF/D51z7wbOXdYx1prbwP8scP/U0p39v+8F2xcTqmJQPTKl/
SkekdCT9smDVJ6V+XvPhKZ1vHBya0oXW0eci+x2V0pPJ57dm4deV0/grpfR3
qjvPOek/PZWnpHRMSoekVEtpOHOmfEHK26T0RUr7Z8H66lrwuyyle5yb871S
NsTO1XKF4VXWUb5Bv8PhCrnS5xptubeGmBM71/+H4Y32g8kw6xjrWm3hP9Qc
9sO1hdtN5jC5oxDXj/9GyR6GI2yH1UhzWN1sDvNbzHs5Rwtj5VbrGOvrWlzX
5SndLmPmu815KD+PD7nnYJPyvqluTEp3FeIYzneb49979TFsNy0WCn+lfHFK
z/E8TqljSisktsun9E86niwD/PqAMTUopUfkQdv9KQ2w7at0HgemdGk6niRL
7KY4xr9ManFNDxFr6fjrZH9QSi+n41NSOjgdT5Qr/afaDz5PywMOj8mJe/QJ
GcPzcesoP2WswPxRx6DPk9rSNs12xp0uP7g94zyUn5Mf3D5zDuZ8VlvavqvF
OT8MF23h+YI5MTI02ZzG/ZGu8dX/sDq1FsczU3o7pbEpPZjSy7K/I6XXtIXn
6+bcN7NlAJ+XjA/6vGUdY72hLfzfNL8vpXlp3rkpnZDSt+mc2qY0IdV/ot/x
2Rm1uKZ5jM+am9KJKb1fCE5wftHrY+4fa1H/Xkqf6yf8PTPV90jp0DTHh8YQ
8TXfeeD5gePR9ql1+PojbYmjj805vwWODecvzOG5UjHKX6b0lXEDz29kDLev
raN8Vi18/4t9ptnnW23h/505bBfqa/j8Kjd4Dk/j9EzpsHSN32sL/x/M8dNv
2sLzd3N4zmC9S6l7Sn/Lj1hYZDsM/zCH4Z/mswpxH88yFn50Hs5vsXWMVSkG
M3z8T0pzUnonpSXOQ/l7ntcpzeW8eL6n1D6Vz60FzxJ+rcXawfOlXIz6940n
nisDUmpQDE7E0bLFYAzPZYpRR3nVYjCASa0YjOmzXDFsuc+WL0ZOHK1crPNc
rRj94LNKMeoYa4Vi2BIXKxYjJw5WL4YtDNcoRg6fDYvBAB+vVwz+8FyzGO1w
W6sYOX79XzFy+N+a/NAnpcOTf6rF8CtxfUEtxlk31WXFqOPaNigGe+Zbvxjz
UN6oGPPDduNi5LDdpBg5bNeqpHNIm+0fU9qsGFyJkS2KwQ+eH6d5P0qpV0o/
pHM6Igte89kbp9Q7pSbFYACTLYvRb2lKR2bBcpuUti3GMfHSuBhs4NnUfvDZ
wTrG2k5bfLC9OdfdyJz+zewHzz2LwQAf716MOIDnzsVgxr27azF4w3anYnCl
bTfr6NPcfrA9IaVd7LeHdcyxo3PSv4VzwrOlOTxvS365iL1r8kH/WnDbJ6V9
i3FMXLQy/5cbfFPql1KbYsQQDA8oBj+47VcM3rQdaB3r7UHmMDzYfPOU2haD
JUz2dzzGOtS6rVI6RFvsDrNu65Rae17M93MtGLZP6QhZwufw/7A90jpYHWUO
q6PNYX6M+Q76dSV5dLCOODrWmIDt8foaVh1tp62TdbA9TlvsOlvH2F3kBtsT
zYmLk8zh3LMYvsY3p8iYODpVrvA8WVva1kh++DHxPDqlY7Lg2T2l0//Dtodc
8V9Xx2OsM62D4RnaYneWdZzH2Z4LzHuZw/kcczifaw7nC2QJtz7m7VI6X/a0
9dYWzgPlAYe+2sL0IvnB7UK5wnmQtvDppy1tA7RlrP7a0v9O5+a8LrYf3G7S
L/hgqH7Bx4PlB+fL5QrDS40D2q6wjnvxSnPYXmUO22vkCqvLHI+xhlgH26u1
xe5a6ziP/yWmPyWWHVLqmAXPYSnd8B+2N5rDbaTMiJ2bzeE2wuujbbi2XPNo
/QGfW7SF7e2yOS+lUTKG7SX6jOu/VVva7tAW/96mLf1nuUayVxvjPLD9LaVX
U3otpXvkCqv75A3De62j/JC+g8Pd8qbP/doSOw+YExfj5QTDh+0HqwnWMdZY
bYmFB825vnHm9J9oP9g+pd/x97o8DxOPY1OaLD84T5UrDB8xDmh71Dri67gs
GD6R0scpTbHfk/9hO8k56T/NOeH2tDkx+4w5bKebw/9Zc/g/Zw7bN/UpPn5R
rrB6Wd4wfEGutL1iHffNDHPiZab5GPndJZOXHI+xXrfuHjmP0e4N6ziP5z0v
5pvlecHzLVnCZ7Z1lN+2DlZzzGH1jjnM3zWfoF+vkcdc64ij94oRE7D9QF/D
ap7ttH1oHWzf1xa7j6xj7E/kBtsNUjz8xvson89kwfazlH7U1/hmgYyJoy/l
Cs/PjQXavrIOtl+bw/Ybc9h+J1f894XjMdb31sHwW22x+8E6zmOh5wLzn8zh
/LM5nH8xh/MiWcLtD3Pi6HfZ0/artnBeKg84/KktbJfID26L5QpnPkR9Vz5/
aUvbP9oy1t/a0p+9wN/u34ul6Ae3NUrhF3ywUin8go8rpeAH56wUXGFYLkUc
0FYrRR33YoNS5LDdODFdlFh2Tmn5UvCEVbUU4zHWCqWog+0JWdgsl+pWLEUd
57FyKc4FtquUIoftqqXIYbtaKXK4rVUKZsTO/0qRw23NUlwfbauXwpZr5r7i
mcozce1S2MJ2/VKw4Vm7bikYw7ZUCp9x/euUwpa2DUphC9v1SmFLf57rrM+s
2RuWop242LgUMQHnzUvBCc6NSuFr/NrYHL9uUYp22G5Wijigz/al8Cl9Ni1F
HNDWsBSMOd/NEos/+Ww1pa1LETe0bVmK8Yi7rUqR07ZdKdgz7u6l8DU+bm6O
/3YqBT9Y7VgKxpQ72bZzSs1KwZO2XUoRW/A8MYv6ptqtaNuepYhFWO1WCt7M
vYdz0rarY9B2vHMz37aliEvOexuvm3ILxyMuWpeCK6xalYIT5b1LwR6e+5aC
N22HlIINvt/Hdtr2cwx4HlwKHti11Ra/HlAKxpuk1EbbjVLa35y2w0rhd5ic
nIU/OqZ0rL7Bf0d4bTBpXwquXN/h5rS19PqI973MuZ7O+hffH+p5Md+Rjkfs
HOc8+LGd58Ici9P5nJRSk3R8lLbE5tHmxOZBpYg5rv8E54HPVSl1gTPXVYq4
geFJpYgnyj1k0Fq73Ww7QwatHGNX205xDGLkdHlgd6ZjwOQ0fYEPumoL/1PN
aesub/qfZT/4nC8//HS2nGB4TkoHeq29rKPcW/bESE/HoM+52tJ2nu2M20fe
+PgC56HcT67w7C9v+PTVlrZuXhPnfaG22F2kLXwuLUXcwPOSUj2OhsgA/3XN
ov7ilK6Rx79t7JFTPiilwY7BvXW1bLC7Nh8jpStKEVswv0xb7vvLzWkbqi2+
H6mv8dMImVG+XmZc33DZExc3yAnO65TTMzblP6c0TFvarnR+YuQ652GsmxyD
OW52Tnje6HjMcassYTtA/xHXt2jbS8bcu8T3KG1he5s5/O+SEwzHyJjyeHng
y9Hypm2cbGi7sxQxR9vdjgHbB+WD3QTHwMf3yZvzvUdb4uVec9pOy6Lv2JQe
sh9MHpUfTCbKD/89Uop7Fc6TrKM8pRTxQew87Bj0mawtbVNtZ9zHZQDPx5yH
8pMyg+cHzsGcT2hL26lZxN0DKT2lLaymmRMXz5YihuD5vJxg+Jx1lF+VAUym
lyLO6POCtjB80RyGM2QAn2dKETf0mWkdY72k7e0pvWx+R0qvOQ/c3pAHHObp
d3zWLYtrmp3S69pi97Z84Py018fc3bOof8s5eHYQH286NvzfKUUMEV/vOQ88
5zgebe9bh6/f1ZY4mmvO+X0oB3h+LG94NihH+ZOUPpMrrD6VK+Xv9Dsc5pci
tmj7Vk7P2X+qbZ87BrHwjWyw+94x4POlvPHHAm2JhS/MaftBWxgu0qf4/nd5
UF4oM1j9KkvigmfHKzKHYW/9+5O2tH1tHHB+PzoPY/3mGMzxh3PC5BfHY44z
suC2OKWP9Cs+PT0L/n+ltG45zoN+X3mtzLfEmIBhsRyciKNyORjDs1SOOsrL
lYMHfPgyxbuyrZTDlvusWo4czsuUgweslpYihuizbDnqGCsrhy3nXitHThws
X455YLhiOdjAZK1y8MBPK5eDH9e0QjlssVu1HD6F+T9eH3OvUg5b2v4uhd+4
/pXKMTZjrV6OeCLW/leOeWC7WjnGo23tctTBcI1y2BJTa5Yj5/zWK4e/iYX1
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
Ulmil0J//ItOCXolcEI3Bf0U+KGzkmvqkNMGQzRV0GQhDrBlLLhSRx9YMh52
MEPHI9fFIWc+mKGpsrJzoO+B9gdcqaMPmkRc1ztyRX+FPrBEg4VyrpWDxsoq
yX5ltXFy3Rzacl0btE1giS06LejooJuzTjHWY7RW0F7B92ihoKOSa/eg7ZJr
5dAGb/RP6AN/dFAowwmtFebD7/xeerNiXacGDRSuCX0VNFXgRDt9PlIvB40V
YpE5uU60dbBfKpMm+gu2jMEcaO+gp9OwWNfBYT40eNDk2Vp+jW0jbtBl2cY4
2M4yDJs6B/yaFet6K+htHCs/9FV2lBN6KrmOzs625Xo3LYytHR0DtrvaB5a7
WcbHaKGgo7JaOudV1cZZ0zH2lPfu9sEvzS2jo4OGzt7yQztln2Jd7+Yg2aOX
sn+xrq2zr8xaW4bhfpZh38by6p5Xc9nvbxtaPGiqbF2s6+zkujsHOh9sDvE8
YNXWMjwPtcx9vqHzw/4w25gHPZCe8kFD5YhiXTcn19E5yjZ8jxZKJ1lie3ix
rq1DH+Kmg2WYHC9XeJxg/50c43jjoKN9msq/o8y62CfX0OmiT9E2QQ9lzeSf
1Wuhh5Nr65yoH0+2jF9PsQzjrpbROkJXqJ38T7VtG6+pvYyZBx0WdHfQ3Okm
yx6eByzPtAzLsyznOmjcu230MW28D/E5Cp+DwAY9lfz39+S99SM6JwPkSt25
cqDuomJdi+ccWV7gWEfa3l8GgxyL60E/oG+xrtdDn3bW9ZEn/S6Ux8X2z/Vu
rpQPuimXyA+dlVxHZ7BtMEZT5XJZXuJYnay7rFjX07lCTuh45Bo5VzsfnNBU
GeLY6HuMl+UQ+xzu+faT31D7rJ3YrlULXR04oalyo2zQUck1gW6yDd+jhXJ7
sa65c4PMRton19wZqe/RQhllfGA7TFa328a9dYt90NG51TKc7nQ+/I52yuhi
XadmrNeDvspdchptH/igrYLGCrpBaAZdrw/usQ/+fUh/9XUM5iB20Fq5r1jX
wWG+i6y7V37jbcs1d+43DsZahuHDzgG/icW63gp6G+/JD32VSXJCTyXX0Zls
W653M81YmOQYsJ1qH1g+ahkfo4XyZLGuj/O0rKbZth7rbS10e9DvQYvn8WJd
Q+eZYl1DZ3qxrnczQ27opbxUrGvrPCuz5y3D8AXLsH/R8jDP6wnZv2QbPkUj
5Y1iXWcn1915xflg86rnAavXLMPydcu5JtfZcn7Dtlyfq5d80FB5q1jXzcl1
dObYhu/RQvlQltjOLta1dehD3My1DJMP5AqPj+3/iGN8YBzMs8/D8p8ns0/s
s2Fisn4t9HPwKdom38gPvRT0U9DXQVvnU/2I7spn+nWBZRh/YZmYnaV/pzkG
bfd7TbOKdW2dXGvna+eD5XeeByy/twzLHyzD70fL8FxoOdfWWSgnNFV+1Xfo
k/yj7/gAc6n8ftdupra/yATbJcW6Ls/Pnje/GfpTn6KDwlhvWveH7Bc5bq7d
s0jGjIfuCto2aNYsWwo/onGCpgnM0E3JtXPI0SGhDg0NdDdgSB0aJfBG4wX9
FrhSxznBP7MfPNBIQV9lk8R5o1ro6sCMOubO9Xdqzs08aIO85fnmukGLvX5Y
ornCuPBAIyXXASJHbyXX2UFrBZbUof+Cr9E/QTsl19/BDpbokDAWHGhHRwU/
on9CH9iio4I+Sa7RQx94U0cZf6OPspG+QI9ka/21jWWuCc0VtEe4HnQa+E0Y
10cdZWIWrRiuM9cPWllfN5IHXJmH84Mt+i2by2xb5yMuGHtjY4VzQUeF+EJT
ZYtSXUOHMrHGda9bquv4MB+aKui8dJAZmiu5Rg55UxmgW4LWCZo9aOU0kQd1
aKdsnvhvWgs9H/jv5Fi5Rs/uMmjhWFwzOiq7yHtn+6xk3c7yo99u8mhpf/yC
tsl+MkODZC+vDf2VXBdnH9tgjh5Lq1Jdj6alcdDKPhs4Xmt9iqZKrouzv/PB
Dx2VA+WBjsrBMj7QPqt4vrsaBwfbBx5t7ZNr5eTaOeTt9Be6JcfJk7rD5EDd
sTKm7lBj4QjHamp7R/3YybFyfRz0RLj/jrTP9tYdqa872we/oFmS69OQd/V6
0DU5QeborpwsH7RY0GRBp4Dfwn+tD060z5YpLraohXbPLo7R2Tjo6lgw6ebc
zR37JBmikYK+ypZed1u5drcPz9B1S3WtpDPsA9seluGDXkqul0N+tr5Dt6Sf
nKnrKRPq+sqeurNkea5jtbO9jz7t71icHzoZ58m/t30Osa63DOl3gQwusn+u
WYNOyta8u9dCCweu6K+gpYJmDvokHYwL9FgulecAxzrWukuMg8u0w/doquR6
OVc4H6zQUbnKOdDuGCu/q+xzqOd7vmyusQ+shliGHzoq18kH7ZRcI2eYbfge
/RM0Uk7VdqjMbrQPzIZbxvdoqqCd0lXba2V1i21wvsk+6OyMsAynUc6H39Ha
uE0foV9yr9fDZ293lOp6OqPkg+YK2iunOOcQfTDaPjwzznLO8xyDOYgd9FXQ
ZNkmMWxYC12ZvtYxLto46LHAkri5xz65hs498hsnD/ihl/Jf/ZR3ZYO2Sq6j
Q/6w/ka35AkZU/eQDKhDO+Uy6ybI+RHHus72x+TxlGNx/eioTJH9ZPtcY93k
Ul0r5yl9iWZJrnND/oJs0Bp5WoborjwnY7RYeJa01q895DndPkM9r0fl/bTz
3erYz5fq+jjMfbNjPyszNFL4zPVSfTlObq/YBzv0PL6R+aNeM8zQXZkpHzRX
0F5BJwdNFVhulzhvWwutHTigf/KeLLFFE4b7Cn2Rt+Q6xzIc5sn1bm1fk9t7
tnGu79hnvPzfkdkHzgcD9FI+1C/ol3zhNaC78rHMPrQPvkRzBe2Vu5zzVa97
vn1Ge90z5PyxcxBH6Kt8JoevnO9x6z6V2de2EUML7JPr6SyQz3f6HX7fW+b3
+fxWm99fwwZtlVxThxwdFrRu0EuBwYvWobWC1s2fKZ9lXPzguHD+2bFggrbK
InmgebLY60dH5Vev+Rf7zLTuF/nQ73f5LbF/rneDTgps0CD5R67or+QaOeRL
ZYseC/otc7RdIm/q6ANXxsMu18TJNXLImQ9O6Kg0cA60O9D9gBV19HnN8/1N
tmiu0AdO6K5Qhgk6KmitwAztlFxTh5w2fI/+CRop8MMWfRY4o69CH+4fdEgo
43s0VdBOgT22aLzAijFogz2aJfSBPboplOGEvgrz4Xf0UtBPwUfol6BjwvWg
gYEWBpxopw980FxBe4V4ZE6uEx9Qt4H+bai/cl0e5kA/B+2Xv2SCjgrzoc+z
cTliC374mDbiBi0WNFlyDZ3N5LqNc8Bv2/L/1085XH7ormwnJ3RWck2dRrbh
d/RPdja2tnMM2O5gH1g2sYyP0VTZUX672n9Fx9hJ3k3tg1+aWYbfbvbJdXN2
0+9onuwje7RTWsqsuXYw28MyDPe0DPsWlpf3vJrJvqVt6O3sXw7/5to6udbO
3s6X6+bsK+/WlmG5n+Vcd2kN2bexjXnQ+jjVuEFT5WD5oZ2S6+u0tQ3fo39y
lCyxRacF5ofZh7hpZxkmR8oVHsfYf3vHONI4aG+fbeTfXmYd7AOPjpZzzZoT
5Yd2SudyXWeno348zjJ+Pd4yjDtZRl8IHZtN5N/Ztk29pgNlzDy5vk4X54Pl
yZ4HLE+xDMuultkHsX6zVrfQx7Sh5cBv878o1/Vxcr0c8jP0I7ol55fr2jqn
l+t6N+cZC9R1l+VZjpXr4/SWQR/H4nrQTkBDAQ2fnuWILTR20MY5QJ70O1ce
fe2P39E2GSQfNEj6yQ/9lVxTp79tMEaPZYAs+znWUdZdVK5r6AyUE5oquS7O
Jc4HJ3RUBjs22h33yHKwfQ7yfM+R3+X2gecVlnOtnKvLdX2cXC9niG25rs1w
mWN7lcyG2geG11nG92iqsB7n2j1XlutaObRxb11vH/R0hlmG0wjnQ+8CrZWz
9RH6JWO8HnRX0L1Av2hkOZjBB80VtFdOcM4r9MFt9sG/9+mvXo6Bngaxg77K
HTK52/nOs+52+d1jG3Ez2j65hs5oGd7vHPB7oPz/9VNmyw/dlbFyQmcl19QZ
Zxt+R/8EjZRB2j4g2wn2geVDlvExmiqT5DbV/lc7xiPyftg++GWiZfg9ap9c
N4cy2jVopNwsN7RTpsnsce1g9oRlGD5pGfZPWb7S85oo+2m24VP0T9BIQVdn
ejlYwv4Z54MNWivPyeoFy7B80TLPemLoNDm/ZFuu1dVNPmiqzJQf2im5vs5r
tuF79E/myBLbGTJ/wz7EzZuWYfK2XOHxrv0fdIy3jYNZ9rlf/rNkNtc+8Jhn
OdesmS8/tFM+Ktd1dubpx/ct49cPLMP4Q8vE7Cv6d7Jj0Han1/SKjJkn19f5
xPlg+ZnnAcvPLcNygWX4fWEZTuip8Oye7PfT+Z56ro+T6+WQf6cf0S35Xa7U
fVuu692gnYL2Dpotuc7Sj46V6+P8KoM/HIvrQUflJ/kvtM/L1i2UJ/1+kcef
9sfvaJugkwIfNEj+kh/6K7mmzt+2wRg9ln9k+ZdjzbFuSbmuobNUTmiq5Lo4
5MwHJ3RU0FphbLQ70P2AJXX0meH5/iw/NFfoA090VyjnWjloreT6OLleDjlt
ua4NGikwxxZ9Fvihr0IfeKJDQhkeaKqgn5Jr96Dxkmvl0AZvNEvog8bOKvyG
V07oq6zp73f5HS/6KfgI/RJ0TLgedEfQH4ET7fSBD5oraK8Qi8zJdeID6uiD
f9E4wV+wXcffChM76KugyQITdFSYj3ihjnHhh49pI27QYqFPrqFDGYbopWwh
P/RS/qufcqj80F3ZWk7orOSaOtvYht/RP2lqbG3tGLDdzj6w3N4yPkZTZQf5
7Wj/ZR2jibwb2Qe/NLYMv53sk+vm7KTf0ThpKXv0UvaQ2S7aoXuzayX4oZmD
vsqqskeLZXfZ7+B8qztGc32KXkqrSl1bJ9faaeF8uW7OXvLexzIs97WMHhRz
fiPnVrahK8DvyucbN+ir7C8/NFVyfZ0DbcP3aKG0lyW2aLbA/GD7EDeHWIZJ
O7nC4wj7N3SMdsZBW/tsKf+2MjvSPvA4ynKuWdNJfuioHCuno7XDj8dYxq8d
LMO4o2Vidj/929QxaNvQa9pPxsyT6+sc73zo5JxQCa7wRHeliyxPsoxew2f6
F5Yn2wYzdFZOkRn6KqfJCU2VXAuhu2253k0v+WN7qvzOsA88e1iGCXoqPSt1
fZxzKnUNnbO95jPtw3WeZbmN/c6SX2/75/o1F8kP3ZV+skKb5HxZosvSR37U
nSfnfrblGjoXaocux2i5XmTbIfbrLb+Bzg2/QZbhd7FlmF1iGYaXWobTYMu5
fg1aKOjnXFEJfrluzlVyRpflMjldYxvchliG2bWWYYCGylDZM8aV8rnetq62
X1up6+nQluv+DK7U9XRukAc6Krl20XDbYDPCNtiMtAyrmy3D9RbLh+nfC2R+
q22wRGdllD5GNwX9lHOsu1Vud9qWa+jc5lijbWvh9XeV612yhCs6KnfLEw2W
e2WG5kqur3O/bfgLLZSJsr/X/nAdax+4PmgZn6G5MkF/P2J/NHYergRX2I+z
D+zHW4blZPvkGjqT9TH6J9Pkg47KEzKeqh38HrUMz8csw/hxy4M9r/EyfsK2
fvrjrkpdZyfX3XnK+XINnaflOt0yXJ+1zJpA/J0s4+dsgxk6K8/rV3ROZskN
rZWXZIamyiuypO5Fec60DX6vWuZcX7Oc6+OgN3KHY7wsqzdtu9v21+Q6y7ZR
zvOCLN/y/GCDjkqu5fO2bbnmzhz9+K5l/DrXMho78yrB+xavG18QQ+i3vFep
a+t8UKlr5aC9Msm692X5iW2Tbf9QrvNtm+LvRNlzwxN9FZ7p/C6f31X/+7vv
Smiq5Do65F9W6ho3P8mcui8qdR2chZW6Xs+CSl1z52v50P6jbH5xLK6V3+Z+
J/tv7fOcdd/qb/r9IMtf7Z9r3yyWEzoqv8kP3ZVcL2eRbTBEm+VP4+A3x3rT
uj9kuVi7XB8n18tZ4nwwQ+djqWOjAYImCFyX2ucFz5drQ3unWA3GsESXBX0W
+KC1ggZLrpuT6+iQ05br3aB1kuvyoNuSa+vQh/UYDRbK+B49FXROiAts0X+B
FWPQBm90WugDf3RRKOd6OsyH39FdQYcFH6GFgi4K14O2Cr+rhhPt9IEPWivo
sBCLzMl14gPq6IN/0UXBX7BlDOYgdtBjQacl18dhPuKFOsbNtXJoI27QaaFP
rsVDGYZoqjAH/NBWyTVW0J9AhwJ+aKugsQIn9FVy7RzyzfU7GidonRALmzkG
bNFioQ/aO1tXgys+Rk9lu2pdN6exXBvZBm80Wxrql20t59o6O1Tr2jpNqnUd
nN1lj47KLtW65k7Tal1zhzIMd7IM+50tVzyvbWW/i234FH2VlvJjnlybZzfn
y/V3mst7T8uwbGGZ+3xF51/L8Vo4D1oinY0bNFX2rdb1dHJ9nda24Xs0Tg6R
Jbbos+SaO/tV65o7beR3sFzhcaj9N3eMg42DA+yzifwpo4N0WDX4wQPdlXbV
uvZNR/mho3J0ta65075a19w5XL8eaRnGR1kmZvfWv40cg7Z1vKa9q3XNnVyD
p4PzwfI4zwOWx1uGZSfLT/p85d7dWR/ThkYx79N8LgYb9FVyvRzyk/Uj+idn
Vuv6OyfJgboe1bpGz4myPNWxWtl+hgx6OhbXg55AN/mfZp9cx+c0edLvdHmc
bX/8jm5JH/mgo9JLfuiu5No559oGYzRdzpNlL8c6xDr6oLGDfsthckJPJdfX
6ed8cELno79jowEySpb97bOP59tdfgPsA8+BlnM9nUtkg75Krpcz2DZ8j8bJ
kGpdi+dimV1uHxheYRnfo6dydbWu4zNIVkNsy/V66IMGz1WW4TTU+fA7uivX
6SO0UG72etCAGCan6+wDH7RW0GE5xjkH6oMb7YN/b9df3RyDOYgd9Fhuqtb1
cZivh3XDq3WtHNqIm5H2ybV4RsrwDueAIdoqucYK+hMz5Ie2yhg5oa+Sa+fc
bRt+R+MErZM+2o6W7b32geV9lvExeipjq3XdnPGyGmcbvO+3D355wHKurTOh
WtfWeaha18F5TG7oqEyp1jV3Hq7WNXcmyvARy7CfbHmQ5/WA7KfYhk/RV5km
P+bJtXkedb5cf+dxWT1pGZZPWeZZTwydIOdptuW6XV3kg6bKs9W6nk6ur/O8
bfgejZPXZInt9Gpdc4c+uebOizJ5Va7weMP+dzkGbcTBy/a5U/6vyOxN+8Bj
luVc+2ae/NBReada19yZVa1r7szWr29bhvEcy8TsM/p3nGPQNsJreqZa19zJ
NXjmOh8s3/c8YPmBZVh+aJn7lGd0CzmhwcK+/Mxa/PaV373CCT2Vz/QdOiff
67sfLcNvgXa5Fs+nMsEW7ZRcr2e+583vhr7SpwsdK9fr+VL2XzjuNOu+kDHj
fVut6938qR8XW4YZGiq5Xg75L9ahz4LOygzrfpY3mi6/y5W6n+T/u/3ggbbK
39W65s4fMvvbud+wbpFzMg/6KM96vrlW0DdePyz/cVx4oKeSa+SQo8GS6++g
1ZJr7qDPgq/RTUE/JdflwQ62aLAwFhxoR0cFP6KjQh84o1mCdgnvYOi00CfX
7qGc6+agt/JhSjOzulYNWjbo1XBNaK2s5u/A+D0YGitcH3WUidmlXidxyXUs
1a/o6cADrszD+cEW7RbGhQ/+Y75cu4dzIlbQYkG/hfhCy4U+xCJ1lIk1rhtN
GHig6cN8F6e4bpbS9VkwQ08n18gh30QGaNygiwNn6jaWB3Vo5MCZOsaFP/o7
m8mG9oYy2N6xuGZ0edDggTfaPfTBL9RtIT/6bS2PRvbHL+jg7CQzdGcae21o
5eT6N01sgznaOs2yuhZPI+OgmX1WcLwd9SlaObm+zi7OBz90T3aTB9o6zbO6
ns6uxiXnu5Vx0Nw+8NjTPgOTv1uldE06viwLrR00Vz5P+Zws9FLmpjTYtsHJ
9tJa1KO700LW0/h9JL9dTcfP8Hs4xmXMlN+YhabHoFrMgZ5MIR0vzUJvZ35K
sz2+RVt0Q5ZLNqOy0G54ge/4q/XwLL+7SqlNOu6c8tuy0Kk4Lh1/mYWeSLd0
fHsWOgYN0vHN1t/o/GiSXJ7qd0ppRCpfZV/Gf5HvjNdi3itqcU6M3zUdf5OF
xsSaXjt+HIL/alHPM3RZmV/ruXEO19sXvYAbPTd+g8/vl/m9M7+jLzWIY34b
enayuUMbnvnfZaFr8EY6vtDfQt+Q8mG1qH895efX4nf1o1J+Zxa/O745HY+0
foTj8Pv5V9PxOf6WnrkZj9/s8xs/fuvH78zuTO13ZfEbN36jyu9S+W3ywpSP
yeL3sJOy+B4k34G8HV0Q6++ohQ2/ixxgPefTzXH4LSNz8Ls55uzuvLT/mvK7
nffnLM6BcR7J4ruVfC+ur9fIb+Rv0VccP+6Y/K7r3ix+l8TvvP5I+X1Z/FaI
tk7ajkl977F+bBa/SeE3JvTFht8z3e84/Dbl75Q/mMVvCsZpz3fkseH3KfwG
6q5azMVvUv5K6QGPx2fxnXq+d/1wFt/f5bu7kzzme6APZfF9beonZPGde74X
f28t+tM2uhb+4Tduv2dx/hxPlgXfB7ynFufJfIxzmvNO1Id8N3Wc43ewvpsc
H9ae7wvfV4tz6qb/+Q4i3z98MYvPrfjM6iWP+QxjShbfpeN7dFOz+C4j3/N6
Movv1vDdj8nWw/Fx6/m+zRTH53tijzoO35V6IovvTvXymO/xnK0N36/a37l6
2vcxj/ke1lPa872PZ7L4uzLvwN/4nQD+Lj0ti++LPKsN78m0P53Fd1b4TsHi
5Iffa6Ev9pT1NztXL8/zSccZad8LHHO68/L3yGmOzzs4Zf5Oyd9Fn83i76b8
bY1z6us5vOJv9fit2ONeL9dOnwsd8/ks/sbD3xae85i/9bycxWcZfI5BPX/D
62I9n0/x2caz1u/qOPxd4QqZYsPnV684Du/icOfzaD6nfEH7iR5Tz2fU2POO
zft1IT3T/qiFXtujKd8rpTcy15IstNdez0KLjWOezawRrEGvJNvT1ViZZ/3W
hfAnvuLvy7wDMhfvcPRhHPTBHkv99knpTc41izUMLbn7U92+Kc3S1/iQv2EW
03n+VQuduH+yWA9rLKGpfkkttLRYX9CburQQ/8cHHS20pB5J9W9lUWbtYo1h
fdnfejTiyq6Dh6X6HWpR1wCtkULoxi1TCA20G1I6NB2/m2ym1mINPsg9Edp3
T3hMn7G10J6j3Nb+9K2lgZfWQieLNY+1D+2yw1zr0Dprz7Pf8oO10EEboe1I
7dG5wxYdPDTQqG9mjh36ac+7PrJeZx5fkI6fcu1Gm2tLn0XHlEI37VbHfzuL
c94yHe9SCz0v+hxuPjjVD3etRIPoVp/zP6tjw/FP6Xhd1ynWkRW0f6UQOiqs
EWun+ts8RiPlf65NrDVDXaNHF+K3/IxzXTG0O1iz9uI3oB6z9q3ns/exYvzW
mGfv/GKsBzznWTtYN1g/WHc20J61ZhPXhWVKoa/FvHcWYm3BnrWG5zW+4pm8
seMzDjasMawvrDNjnWszx6T+ZOubaoM9axa/keTcdtBmnON39Zj1i/uJ+4rn
CWsMaw3rBesA60f++68J1rPOsG6xZm3t2jSwFL85Yr24vxRrBscP+JsI1pjZ
HrOWsI50d5zZzvWw9t09Zg3qof1fzjvZY567PH95zrNWsB6wFpypzWL7sq5s
rA3Hm2gz1WN+O8O5sSb2tJ41i3WJZ/q/3wd1rn//H6dz5cc8l3tq/+8zuhzn
9oTHaxpvpxVjLfp3PSvHexJ7aPbPrBusDawLrC2sH6wd51vPMc9pnuM827Fh
HbrFdQz757RnDWONgynPd57tF9mX539/63n+9dGetaaPMbCK9qwHrAUDPGZ9
YR3g+c6znfWBdYJ1HxvWAJ7/Az2e6DFrxjz/zsUxa0dvfcsaOshxWGvO9bqo
Zy7WqobOxfHWPu85h3Z+HsC7L58JvJPFMe+/dxvzJ1k3M7dJ9ZNq8b6xW8ob
uRY8nPJdXS9apPyjLLRFH0rHE1yz9qzF+zbzjE/H42qxdu3ueI3Svdw2HR/i
c/v9LNYdfqJ/YKo7wPWgTcr3s8/kWmiJUr+H/ToUYq2i717O96HXwRo4z/q5
zjHY4/eci+fqB1k8Wy/XnnXz4FrUb5WOj/Ba1k7pSK+3pdf8kXHJAogmKusg
e360aXhmTrOe623umMzJexyaqI0Lsb5xzBrHOyPam01cT9DbbOo7JscdC/He
xfsXa+sz2uMH2rHjfRPffq49awhrMesI/pzvvPs7ziWFeE9c4HEDj1mzeJdE
ExA9QN710A1EM5B3JbTJ+GyNd7lvrF9O+0vdk6Axh77cJ14z761ttUdL8Bh9
xXoxxPEHF+I97Tv78h6H1hU6Vzc4Jn15/6Oed7J22nM+r3puAGZsePCeNcZj
uKCdyRrM+su71E/Ws6bxHsX6+JPHvE+xtvD+wPrys/bX+/6Fpkn+LvWL9axr
v1nP+xS6D6w7vznO8drSn3e3uz1+3PVrkXOR0593LtY63qk6+G612OP7tGF8
3qH4/X8T17U/rSenrYvz/+b4D1iPfbEWnzMQh4udi2fCyc6FDXt79H23L8Rn
IRzjamL8H+Ofe+I17ws+M6F+b8vU81kA8zAf8YBuLns+9nt87kGZe5DPG9Ao
7Wj8YM+5sTfEnv0v+0h0Z9lbsp+CKftK9lzE8bHu8Rjn4kJ8Zob9DoX4vKXq
vAu0557gc4xljA30/9g/sXdC65E9E/sl2tmXsCdhb8Ixn3uwN+MeIP65Dzg+
yOvFOfiHzzqWt+/H1uMHPutY0fHZlzEXn4ewd+Mc+HyD9/eVPR9y9m3s2djL
wJv9DHs36nnH5/ONVbVhX8b+jHuBOGcvSOyhzcNejX0a2l2swad572DPvfmL
9sQ2n11gx36Pe4o9YgdjeD3H/Mn6btqsWat/1rGW4/OZCXOzh0SbhD3fMsYz
x8Q8+jTsHdk3Mj57RO4dNGyJjzbGMvX5ZxQbac+7//peF/fvhvblXmAvyH1B
/cbOxWcRm3oOi6znHnnQuYhD/La218t1rO353+eY3F/oAbDPG+hnC5TZz7PO
orHA3pJ7mb0+9xfvU+hxo8VN+5bas09kHPa57LnYe7FP5J0Me14Z2TOyj2Qf
yuceDZ2XnHr2lrzHsXbzPo5WM/cAnzeyXuz4n/uLtbWx71hodPOe9UAt3sE4
xjebe/48Nzb3ellbdjbmeR4wF2H9lmOyvo1wLtY03vUaew+O9Xw4pq6px7yn
ccy5jHJ81jHu40M853c95t2Nd1j2JLyTbu9x1XdcNNC3cW3i/mQ8nlHsXVo6
9i6eP+e+m+fPms8+hnWfd3HG4acFrOGs5Vt5/7KnYX2f7TH38hv2wR5ddJ6V
PAN5V27l+DzM0FtHa32WXDln9lW8j/PVKHS5ea/jnY66va1n78MeqLXXx1xX
eu37ypr3cTSs0a+m3z76h7r9ZM2azJ6Ac+fdvLX1/D6eeGOf/6lzscegXxtt
4MheDc4k9mw8j3l3RjecZy/P2gNkCqu2sqPf/tYf4Dg7uM/Bhuvj3Zlxmulz
9mS883M+vOezR+LvIAcZz9geZozBl70a6w0c2cOxr+U5385zY6/B+/Ng3/d5
zydOeQbzLOZ5y+fe2POceUe/8flGe+dinPw9nOc8n+uj08762M4xsUEX/2jr
G3vt3BfodWN/lM/84c7LZ4nbev/y9wH0uFnj0O3m83zWMrR/0Xl+0DWIz/d5
N6e9ozZoUFPP2jS9FmPB8TnHYb/3VS3s+FyCvxuc4JjUf1kLDet/94+1+p7x
OO+XzvZlXrRn6Ys2LZ+1oxeNrvS8WozLHpI2NIrRd+XvBida/1ItyuPd33bx
HPDpSdp8m/JvHJdjNKkvK8TfGjhmT8i+sqvHfM6Pxi6f1dNOPXvV97ymMcnm
/VqU0W7+wHymLLp536Hdii4tWqx8xtbd82e/yd8b2HOi/4w96zX729O1mVGL
Y/axP9Ti79EPOe9p+o06xmHPi833tdBrHmmOzvKHnh8a/fy9g+cCn+1wbWgI
swfuaRvx86m2aNzyt4tenn835+W62Fec7TizjY1jnKunNuyrz7EvfzNBq5Z9
NVqmjIl2KYl6NFE/roU9Nj+lfGEtzu8nWXAt82sxFufO34KuluNntdDn5Xz6
esxnUPxNBL1X9iGf10K/F81XymjA8vcW+n5qG/3oz/5nQS36YLfAcRgTvU20
XNHaZL/U13r+XtTPa8GWuflbDH/H439q8C7G/7zgeFn3wOxxebazjvE8+vdv
eVnsZdnHDizE/TuoEHth7FkHfq3FfA3dmw3wGg9yHNZA5mFunnXsixlzX89n
sPX8vep8fd7aNs7z6Vo8c1ib+JvVhV4X+2f2voe5Z2a/e4HPEjTiH3R/Sz3P
DRjxbjbYZxrPxPzvgNjzDPnSMsfwvEb7nbTn+fmy9bCmH/bc653sc7zPZObi
PmWPfK33FM8T3v0m+Kwbaj3H2LCX5u+G6IzzDGFfzzXyLnCi9dyPrB34DT9x
HzAO9yDt9Ofe5f2SubgfeZ5c75g8E1gX2J/zDBrm+cz0mPs6/99OfDeB58RN
3jvY8+xCY586/r7IvcXefJQxRrzdZhzm9/9cnzPY8wwhVrFnPz/C8d/1Xubd
4CdtbnNM3oN5VydGXnNM7kHymx2fvrd6v7AfZg893z05x+yN2euyd2ffy36e
Y/bwxPUUY5t3At4N2Oezr2d/z7sAsU39Xr5fU8+emf0ke272kOzT2a+zP2cv
TT37cPb81LOHZ3/CZ0DsNbjHOWeeFbwH3eL5sy9ln80elfWTdTT/bJVj1lP2
4+zL2VezT2bfzP6ZWH3Q2GbvTT17afZT7KHZU+2oDXsY9l18rsUejz0ye2XW
9Ebas6drbD37Z2zHa891cD3so1p7zN6JfSufr7EP5G9AfJ7Gvo6cz9fY+/GO
wDXy7sB7BNfC+8JUWbC+81kb87H/ZX/B/zhhj9FEHzZ2TzjBMWnnsz72NpO0
z/e0kzxmTzbV8VmzZhrzwzzmfmGPyV78Ks+Za2AvzB6Jv3PwTNjLeq6L/y1C
PXt7zp3xh+sHxmEvzLMBO54P7Lf5TI3nLf/niL/x8I5ATrmJz2aOeT7z/Jvm
+fPMYd9ziXukZz3GhmclfmINZJ90jMfPeL3cp6sZwzxDqG/lNT3pdU10HOZi
n8n4PPeOdd6O8pnumDx7+ZvQAe53+KxtnHs26tmPsabwjsRacL3X2cTnJJ/H
HeTzmWcrz8xTPL6sEOst9/w891rssXgWsj7zGRnrxXXW83zjucdndm19bmDD
M2qk47R3X8Oehmcbx9i/6zNthsfM+7r2+HC2vqp4zB6Dz+34XI91ib3xLJku
sby9e905+pC1C3vWSj5XwVcHuu4xF3uJVo7DGMzzlvPC903H5/2RcS/WJy96
7c205xz5vzPf6MOm+n8H1zLOJ38H5f2Te4J9Fnsz9o3k7J9muBfmf3Kw552q
PbGd7zWx4X2C9wruM/ak7EVZj3o6DmMTG+yhT5DfXONkrvXj3H+ypzzVPuyF
eDZe4HG+D2R/xr7tI4+JgXKD0F5v6D7uI+th84m+zfvkez3q2UvwHGbvxTyw
YG/X2zk/8xw+sb7onou52He95zlzvad67WM8Z/ZsrIP4hHcQ/mfOFx5zX7BW
sp/rb90X2hD/vBuw3ra3D39fxuYr+36jDXz5Hzf8/5vLrf/a407aM3/nQtR3
0pb9+UPGOfta9rf4kO8koV/P/1jh/6Pwv1Gw/UH7Hh6f4Xlzjeu6p13g9eKb
X2VB3+8ch300Y/K/RPAd87R3n/D9f2w4n3nOv9Djcz2m74WODwf+Jxj/G4zP
H8iX8bjaIL6/wT3Imscxn01xX/H5L3X8zyn+dxjvr8v5fQBssP3NY77LwP8h
47MX1gNsttVmseMv43ceqIcX9vz/K9aGP+zLdwr4P1VHOWbB89zbY2xZt5Zo
wz3G3/TZk5D/4zH7EJ7h7ItW9rsKfDbCfPiCa+L/LjHXgJSv4HcDeFbwuQqf
03Ed/C8exuT9+9/vozUIXuRlj//SfjvXGp45bfTBn17vL8YNLNkD8HnNEP1d
9X+zkZZ1HP4HHPXbe77Uc86sWxXrlzjO0foK/y7SdjnHWSR3rptnGZ+P5z7j
mOvlPJfz/8bxf8FWdsxVG0SZY9az5bXHX/zvsIH6HN/hI/YOPN+4LmxX0J5r
xl98f+8fxxmr71fyf5BxLcxLHfOu4v8nW9HjY4xBrp04ZP+0iufGGKtq+3/X
M5rM
           "]],
          Annotation[#, "Charting`Private`Tag$79727#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ztMk1EYgOEPtAW8AqKUQqHlUiuiUq+AKLjpYAImGt3USRcvG2y6GBxM
NHHQDTZdDGy66QYxKibG66KbbrDppM+RpE/er8OfnnP+09Ll62eu1UTEEt+y
EWn+qjPsMtfWRUxqRqe1Qed0U93aM1t0VRu1zcPNekJb9Kq26gPN6wst6A8t
akNtRI9WtawXtKK3tV+f6oC+1z+U1kWc4iaPecUvmtZHDHOJuyzwhZqMPTDJ
NHMsscpr+zub1qzH9aPmaaeDAp10UaRENz300keZnVTSWdHPbgbYw172MUiV
/RzgIIc4zBGGGGaEo4xyLK2LMd5wzhrH03f9pDlW7GORWaaYoJJJLyvis/3P
M8NFhmjkp/N6ySNucJIiv53vMk+4xXkGqee79/Wc+1xhnBwrfmqRWaaY4KF1
nbbGinlUP6QzMpfpo5ceuilRpItOCnTQTp42crSyg+20sI1mmtK9Y2u6h2xO
95KNbEh3lao11Otf6zDGPfWJkXSvsv+PKhbMy2bHE/Pmd2ZHEs/Mb82OIO5k
1/4f/wC7m0gC
       "]]}},
    VertexNormals->CompressedData["
1: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
     "]], {}},
  AspectRatio->1,
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->288,
  LabelStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.36, 3.58, 2.}]], "Output",
 CellLabel->"Out[4]=",ExpressionUUID->"17e8954d-706c-4d22-9388-02ff2fe72c1b"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Fig. ",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["Chapter"],
  FontWeight->"Bold"],
 StyleBox[".",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["FigureCaption"],
  FontWeight->"Bold"],
 "  ",
 StyleBox["NDSolve", "MB"],
 " solution of the concentration profile for a potential step experiment."
}], "FigureCaption",ExpressionUUID->"07899665-be80-4775-802f-73cb9fbb1dfa"],

Cell[TextData[{
 "The current is proportional to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[PartialD]", 
       RowBox[{"c", "(", 
        RowBox[{"x", ",", " ", "t"}], ")"}]}], "/", 
      RowBox[{"\[PartialD]", "x"}]}], ")"}], 
    RowBox[{"x", "=", "0"}]], TraditionalForm]],ExpressionUUID->
  "9e98846c-1fea-4531-832d-b9d0e5598364"],
 " therefore taking the derivative of the result at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "f982349b-43b8-4741-8d65-459d22dec704"],
 " gives a plot proportional to the current. In this example the condition ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "8c50c639-c768-4d10-84ef-890073157b57"],
 " is made using a rule replacement."
}], "Text",ExpressionUUID->"0cfe6732-99ca-4605-8517-c44d86a4490e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"result", "[", 
        RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}], "/.", 
     RowBox[{"x", "\[Rule]", "0"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", ".05"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "None", ",", "Automatic", ",", "None"}], 
     "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"aeabe254-283e-4ec5-a20e-e7ced525ca43"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[0.5], Opacity[1.], 
      LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$79775#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.523524565540417},
  BaseStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{
    GrayLevel[0], 
    AbsoluteThickness[0.5]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->288,
  LabelStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.05}, {2.523524565540411, 10.687002968320364`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[5]=",ExpressionUUID->"10eec3cb-15dc-49ba-856c-f91618a290e5"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Fig. ",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["Chapter"],
  FontWeight->"Bold"],
 StyleBox[".",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["FigureCaption"],
  FontWeight->"Bold"],
 " ",
 " ",
 StyleBox["NDSolve",
  FontFamily->"Courier",
  FontWeight->"Bold"],
 " solution of the current for a potential step experiment."
}], "FigureCaption",ExpressionUUID->"43228869-bf9a-42a2-b1ab-b7ef2d7ef2cd"],

Cell[TextData[{
 "Unfortunately ",
 StyleBox["NDSolve", "MB"],
 " is fairly restrictive in the types of PDEs that can be solved. Another \
numerical method for solving PDEs is the finite difference method. Finite \
difference methods can be divided into three types: explicit methods, \
implicit methods and a combination of explicit and implicit methods. In this \
chapter explicit and implicit methods will be defined and methods to write \
finite difference expressions for typical partial differential equations \
encountered in electrochemistry and use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to solve these finite difference equations will be described. "
}], "Text",ExpressionUUID->"603abb55-5bd3-43b0-9236-b06fa9e3041c"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["Section"],
 " Explicit Finite Difference Methods"
}], "Section",
 CellTags->{
  "s3.2", "i:1"},ExpressionUUID->"8b633fa4-43aa-4337-ab02-c2ef83303076"],

Cell[TextData[{
 "Using finite difference methods we will seek to determine the gradient at a \
particular point on a curve by discretizing the points surrounding it as \
shown below in Fig. ",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["FigureCaption", "fig1"],
 "."
}], "Text",ExpressionUUID->"ffd7a876-d738-4512-b1c9-648c1c9564a8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"label", ",", "option1", ",", "somePoints", ",", "x", ",", "c"}], 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"label", "[", "x_", "]"}], ":=", 
    RowBox[{"DisplayForm", "[", 
     RowBox[{"TraditionalForm", "[", 
      RowBox[{"MakeBoxes", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"x", ",", "14"}], "]"}], ",", "TraditionalForm"}], "]"}], 
      "]"}], "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"option1", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Axes", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.5"}], ",", "3.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "5.8"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Ticks", "\[Rule]", "False"}], ",", " ", "\[IndentingNewLine]", 
      
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Dashing", "[", 
          RowBox[{"{", 
           RowBox[{"0.02", ",", "0.02"}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2.", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "5.5"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1.2", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.2", ",", "5.324"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.4", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "2.972"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubscriptBox["x", 
             RowBox[{"i", "-", "1"}]], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.4", ",", 
             RowBox[{"-", "0.3"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubscriptBox["x", "i"], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.2", ",", 
             RowBox[{"-", "0.3"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubscriptBox["x", 
             RowBox[{"i", "+", "1"}]], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.", ",", 
             RowBox[{"-", "0.3"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubscriptBox["c", 
             RowBox[{"i", "-", "1"}]], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.65", ",", "2.75"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubscriptBox["c", "i"], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.35", ",", "5."}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubscriptBox["c", 
             RowBox[{"i", "+", "1"}]], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2.3", ",", "4.8"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"somePoints", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "+", "1"}], ",", 
        RowBox[{
         RowBox[{"0.5", " ", 
          RowBox[{"x", "^", "3"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"x", "^", "2"}]}], "+", 
         RowBox[{"2", " ", "x"}], "+", "5"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "3.5", ",", "0.2"}], "}"}]}], "]"}]}], ";"}],
   "\n"}], "\n", 
 RowBox[{"plot1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"somePoints", ",", "option1"}], "]"}]}], "\n", 
 RowBox[{"SelectionMove", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", "Previous", ",", "Cell"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEndToken", "[", "\"\<OpenCloseGroup\>\"", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SelectionMove", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", "Next", ",", "Cell"}], 
  "]"}]}], "Input",
 CellLabel->
  "In[119]:=",ExpressionUUID->"51e5f851-1026-4fdb-b850-d6fdff969a45"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], 
     StyleBox[LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQjQoe2M+YCQIn7bOf/1758dJf+1lg/k173U1z3y8/
xu5gYgwCj+2TBSIst5zgc4DIv7Rf9fGSb5KAkAPEnA/2EFoEqv6zPVi7t6hD
ehoIfLN3MI3b5ckjBtX/017dkGONTJSYw9kzIPDHHmy9rxjUPAYoDVPP6PAB
aJp5pyjUfGaIcUyiUP0sDn690/OEmkWg9rE57J8vpX9XRQRqDocDzH0Q8zgd
pkiwhPHpwtzL7fAj+PHS2UdEoObxOAAdl2J9X9Rh/XTTD21cfA5gZcbiDgAn
/HVK
       "]],
      FontFamily->"Arial"]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  BaseStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  DisplayFunction->Identity,
  Epilog->{
    Dashing[{0.02, 0.02}], 
    LineBox[{{2., 0}, {2, 5.5}}], 
    LineBox[{{1.2, 0}, {1.2, 5.324}}], 
    LineBox[{{0.4, 0}, {0.4, 2.972}}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubscriptBox["x", 
           RowBox[{"i", "-", "1"}]], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {0.4, -0.3}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubscriptBox["x", "i"], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {1.2, -0.3}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubscriptBox["x", 
           RowBox[{"i", "+", "1"}]], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {2., -0.3}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubscriptBox["c", 
           RowBox[{"i", "-", "1"}]], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {0.65, 2.75}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubscriptBox["c", "i"], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {1.35, 5.}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubscriptBox["c", 
           RowBox[{"i", "+", "1"}]], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {2.3, 4.8}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{
    GrayLevel[0], 
    AbsoluteThickness[0.5]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->{{5, 5}, {5, 5}},
  ImageSize->288,
  LabelStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.5, 3.5}, {-1., 5.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{{}, {}}]], "Output",
 CellLabel->"Out[123]=",ExpressionUUID->"d03336da-3744-40d9-a2e3-ada52bed0d4d"]
}, {2}]],

Cell[TextData[{
 StyleBox["Fig. ",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["Chapter"],
  FontWeight->"Bold"],
 StyleBox[".",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["FigureCaption"],
  FontWeight->"Bold"],
 " ",
 " Discretization of a function."
}], "FigureCaption",
 CellTags->"fig1",ExpressionUUID->"3c14f0b7-da52-46d5-8bb1-981a9c87da73"],

Cell["Taking Fick\[CloseCurlyQuote]s second law", \
"Text",ExpressionUUID->"b2bee9af-b8dc-4bca-ac57-e2281cc72cdb"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"c", "(", 
      RowBox[{"x", ",", " ", "t"}], ")"}]}], 
    RowBox[{"\[PartialD]", "t"}]], "=", 
   RowBox[{"D", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], 
      RowBox[{"c", "(", 
       RowBox[{"x", ",", " ", "t"}], ")"}]}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["x", "2"]}]]}]}], 
  TraditionalForm]],ExpressionUUID->"66d28ed9-9cde-41e6-b155-e511b17eb092"]], \
"EquationNumbered",
 CellTags->"tag4",ExpressionUUID->"9dd5dcd1-69ec-4cc7-9b02-c5b28661eaf2"],

Cell[TextData[{
 "the Taylor series expansion (see ",
 ButtonBox["Appendix 1",
  BaseStyle->"Hyperlink",
  ButtonData:>{"Appendix1.nb", None}],
 ") can be used to arrive at a numerical expression. Fick",
 "\[CloseCurlyQuote]",
 "s second law can re-written in finite difference form as"
}], "Text",
 CellTags->"i:2",ExpressionUUID->"27fb03e9-d0dd-40fc-832c-e6d29e8acd4c"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"t", " ", "\[Rule]", " ", "0"}]], 
    FractionBox[
     RowBox[{
      RowBox[{"c", "(", 
       RowBox[{"x", ",", " ", 
        RowBox[{"t", "+", 
         RowBox[{"\[CapitalDelta]", "t"}]}]}], ")"}], "-", 
      RowBox[{"c", "(", 
       RowBox[{"x", ",", " ", "t"}], ")"}]}], 
     RowBox[{"\[CapitalDelta]", "t"}]]}], "=", 
   RowBox[{"D", "\[MediumSpace]", 
    RowBox[{
     UnderscriptBox["lim", 
      RowBox[{"x", " ", "\[Rule]", " ", "0"}]], 
     FractionBox[
      RowBox[{
       RowBox[{"[", 
        RowBox[{
         RowBox[{"c", "(", 
          RowBox[{
           RowBox[{"x", "+", 
            RowBox[{"\[CapitalDelta]", "x"}]}], ",", " ", "t"}], ")"}], "-", 
         RowBox[{"c", "(", 
          RowBox[{"x", ",", " ", "t"}], ")"}]}], "]"}], "-", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"c", "(", 
          RowBox[{"x", ",", " ", "t"}], ")"}], "-", 
         RowBox[{"c", "(", 
          RowBox[{
           RowBox[{"x", "-", 
            RowBox[{"\[CapitalDelta]", "x"}]}], ",", " ", "t"}], ")"}]}], 
        "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", "x"}], ")"}], "2"]]}]}]}], 
  TraditionalForm]],ExpressionUUID->"0091e3fe-8909-430a-9636-afb245aa83be"]], \
"EquationNumbered",ExpressionUUID->"ea5b63e9-de55-474e-a591-3dac6c64f16e"],

Cell["\<\
If we assume that we can obtain sufficient accuracy by using sufficiently \
small enough time and distance steps we can discretize \
Fick\[CloseCurlyQuote]s second law as shown below:\
\>", "Text",ExpressionUUID->"9c8686e1-f084-4192-8566-0d8fe4e829b7"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"c", "(", 
     RowBox[{"x", ",", " ", 
      RowBox[{"t", "+", 
       RowBox[{"\[CapitalDelta]", "t"}]}]}], ")"}], "-", 
    RowBox[{"c", "(", 
     RowBox[{"x", ",", " ", "t"}], ")"}]}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"D", "\[CapitalDelta]", "t"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]", "x"}], ")"}], "2"]], "[", 
    RowBox[{
     RowBox[{"c", "(", 
      RowBox[{
       RowBox[{"x", "+", 
        RowBox[{"\[CapitalDelta]", "x"}]}], ",", " ", "t"}], ")"}], "-", 
     RowBox[{"2", 
      RowBox[{"c", "(", 
       RowBox[{"x", ",", " ", "t"}], ")"}]}], "+", 
     RowBox[{"c", "(", 
      RowBox[{
       RowBox[{"x", "-", 
        RowBox[{"\[CapitalDelta]", "x"}]}], ",", " ", "t"}], ")"}]}], "]"}]}],
   TraditionalForm]],ExpressionUUID->"cecad232-d9ff-4a86-adaa-2cca72b61926"]],\
 "EquationNumbered",
 CellTags->"tag22",ExpressionUUID->"24966c76-2345-476b-b101-e07a28e91a4b"],

Cell[TextData[{
 "The order of the error can be estimated in this approximation from the \
Taylor series expansion (see ",
 ButtonBox["Appendix 1",
  BaseStyle->"Hyperlink",
  ButtonData:>{"Appendix1.nb", None}],
 "). Truncating the Taylor series at the first time derivative we have"
}], "Text",ExpressionUUID->"63b0d5a0-7310-40a5-b75f-b751f237c255"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"t", ",", "\[CapitalDelta]t"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{}], "\n", 
 RowBox[{"exp1", "=", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"t", "+", "\[CapitalDelta]t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[CapitalDelta]t", ",", "0", ",", "1"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"d5a521e2-c009-491e-a5e9-930883d5e7a4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"c", "[", "t", "]"}], "+", 
   RowBox[{
    RowBox[{
     SuperscriptBox["c", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], " ", "\[CapitalDelta]t"}], 
   "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[CapitalDelta]t", "]"}], "2"],
    SeriesData[$CellContext`\[CapitalDelta]t, 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[CapitalDelta]t, 0, {
    $CellContext`c[$CellContext`t], 
    Derivative[1][$CellContext`c][$CellContext`t]}, 0, 2, 1],
  Editable->False]], "Output",
 CellLabel->
  "Out[14]=",ExpressionUUID->"089d5a9f-e9e3-45da-80c6-5b6b9cd889a5"]
}, Open  ]],

Cell["Rearranging the output gives", \
"Text",ExpressionUUID->"e447541f-933c-40a0-a87d-b070b1b600ab"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"c", "'"}], 
    RowBox[{"(", " ", "t", ")"}]}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"c", "(", " ", 
       RowBox[{"t", "+", 
        RowBox[{"\[CapitalDelta]", "t"}]}], ")"}], "-", 
      RowBox[{"c", "(", " ", "t", ")"}]}], 
     RowBox[{"\[CapitalDelta]", "t"}]], "-", 
    FractionBox[
     RowBox[{"\[ScriptCapitalO]", "(", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", " ", "t"}], ")"}], "2"], ")"}], 
     RowBox[{"\[CapitalDelta]", "t"}]]}]}], 
  TraditionalForm]],ExpressionUUID->"5da08474-9497-4c67-aad9-d5fa4542cf45"]], \
"EquationNumbered",ExpressionUUID->"4bc07b24-8a2a-40f3-a7c5-2e779851e87b"],

Cell[TextData[{
 "Therefore the error for the approximation of the time derivative is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalO]", "(", 
    RowBox[{"\[CapitalDelta]", " ", "t"}], ")"}], TraditionalForm]],
  ExpressionUUID->"87d45bdd-d24b-4c54-b1e0-4588d482766b"],
 ". Expanding ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "(", 
    RowBox[{"x", "+", 
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["x",
        FontSlant->"Italic"]}]]}], ")"}], TraditionalForm]],ExpressionUUID->
  "a69401a3-4079-4b80-bb63-80272a6eb2f8"],
 " and truncating at the third derivative we have"
}], "Text",ExpressionUUID->"94da22f6-d767-40d4-bbd2-5f2140cfd803"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"x", ",", "\[CapitalDelta]x"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{}], "\n", 
 RowBox[{"exp2", "=", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"x", "+", "\[CapitalDelta]x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[CapitalDelta]x", ",", "0", ",", "3"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"9913a895-7681-428c-af0b-38fafacd5518"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"c", "[", "x", "]"}], "+", 
   RowBox[{
    RowBox[{
     SuperscriptBox["c", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], " ", "\[CapitalDelta]x"}], 
   "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{
     SuperscriptBox["c", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], " ", 
    SuperscriptBox["\[CapitalDelta]x", "2"]}], "+", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{
     SuperscriptBox["c", 
      TagBox[
       RowBox[{"(", "3", ")"}],
       Derivative],
      MultilineFunction->None], "[", "x", "]"}], " ", 
    SuperscriptBox["\[CapitalDelta]x", "3"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[CapitalDelta]x", "]"}], "4"],
    SeriesData[$CellContext`\[CapitalDelta]x, 0, {}, 0, 4, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[CapitalDelta]x, 0, {
    $CellContext`c[$CellContext`x], 
    Derivative[1][$CellContext`c][$CellContext`x], Rational[1, 2] 
    Derivative[2][$CellContext`c][$CellContext`x], Rational[1, 6] 
    Derivative[3][$CellContext`c][$CellContext`x]}, 0, 4, 1],
  Editable->False]], "Output",
 CellLabel->
  "Out[16]=",ExpressionUUID->"129d7844-e63e-4872-9586-566c7056c0e0"]
}, Open  ]],

Cell[TextData[{
 "so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "(", " ", 
    RowBox[{"x", "+", 
     RowBox[{"\[CapitalDelta]", " ", "x"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"2157f722-c606-4f58-8a70-9b7e565f818e"],
 " is:"
}], "Text",ExpressionUUID->"6210da3e-98ae-41b7-a487-439d2ba64d7a"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"c", "(", " ", 
    RowBox[{"x", "+", 
     RowBox[{"\[CapitalDelta]", "x"}]}], ")"}], "=", 
   RowBox[{
    RowBox[{"c", "(", " ", "x", ")"}], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalDelta]", "x", "c"}], "'"}], 
     RowBox[{"(", " ", "x", ")"}]}], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", "x"}], ")"}], "2"], 
      RowBox[{"c", "''"}], 
      RowBox[{"(", " ", "x", ")"}]}], "2"], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", "x"}], ")"}], "3"], 
      RowBox[{"c", "'''"}], 
      RowBox[{"(", " ", "x", ")"}]}], "6"], "+", 
    RowBox[{"\[ScriptCapitalO]", "(", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]", " ", "x"}], ")"}], "4"], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"04f0d0f4-149b-4ccc-ad68-b6401f60a801"]], \
"EquationNumbered",
 CellTags->"tag2",ExpressionUUID->"45e424cf-0c5f-4068-9672-1769a600463c"],

Cell[TextData[{
 "Expanding ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "(", 
    RowBox[{"x", "-", 
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["x",
        FontSlant->"Italic"]}]]}], ")"}], TraditionalForm]],ExpressionUUID->
  "9ea23b7e-0d30-4af6-a434-6c36206a71ce"],
 " and truncating at the third derivative we have"
}], "Text",ExpressionUUID->"1cc68fbb-6692-4769-8418-affd8b4cfcfc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"x", ",", "\[CapitalDelta]x"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{}], "\n", 
 RowBox[{"exp3", "=", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"c", "[", 
     RowBox[{"x", "-", "\[CapitalDelta]x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[CapitalDelta]x", ",", "0", ",", "3"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"65b39dcf-1c22-443c-a05c-c8c3e9c8a729"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"c", "[", "x", "]"}], "-", 
   RowBox[{
    RowBox[{
     SuperscriptBox["c", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], " ", "\[CapitalDelta]x"}], 
   "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{
     SuperscriptBox["c", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], " ", 
    SuperscriptBox["\[CapitalDelta]x", "2"]}], "-", 
   RowBox[{
    FractionBox["1", "6"], " ", 
    RowBox[{
     SuperscriptBox["c", 
      TagBox[
       RowBox[{"(", "3", ")"}],
       Derivative],
      MultilineFunction->None], "[", "x", "]"}], " ", 
    SuperscriptBox["\[CapitalDelta]x", "3"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[CapitalDelta]x", "]"}], "4"],
    SeriesData[$CellContext`\[CapitalDelta]x, 0, {}, 0, 4, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[CapitalDelta]x, 0, {
    $CellContext`c[$CellContext`x], -
    Derivative[1][$CellContext`c][$CellContext`x], Rational[1, 2] 
    Derivative[2][$CellContext`c][$CellContext`x], Rational[-1, 6] 
    Derivative[3][$CellContext`c][$CellContext`x]}, 0, 4, 1],
  Editable->False]], "Output",
 CellLabel->
  "Out[18]=",ExpressionUUID->"8af201c7-16f0-4c01-ad6d-24e9730e04e0"]
}, Open  ]],

Cell[TextData[{
 "Therefore ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", "(", " ", 
    RowBox[{"x", "+", 
     RowBox[{"\[CapitalDelta]", " ", "x"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"c16e6e71-e6cb-463f-b158-ee3b13efc306"],
 " can be written as:"
}], "Text",ExpressionUUID->"44cf5e7d-7461-4d98-8032-dd180a366819"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"c", "(", " ", 
    RowBox[{"x", "-", 
     RowBox[{"\[CapitalDelta]", "x"}]}], ")"}], "=", 
   RowBox[{
    RowBox[{"c", "(", " ", "x", ")"}], "-", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalDelta]", "x", "c"}], "'"}], 
     RowBox[{"(", " ", "x", ")"}]}], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", "x"}], ")"}], "2"], 
      RowBox[{"c", "''"}], 
      RowBox[{"(", " ", "x", ")"}]}], "2"], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", "x"}], ")"}], "3"], 
      RowBox[{"c", "'''"}], 
      RowBox[{"(", " ", "x", ")"}]}], "6"], "+", 
    RowBox[{"\[ScriptCapitalO]", "(", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]", " ", "x"}], ")"}], "4"], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"2986eb85-1bb2-40e8-9867-19c675255a44"]], \
"EquationNumbered",
 CellTags->"tag3",ExpressionUUID->"b3271413-97b5-467e-b4c1-c347f1515e24"],

Cell[TextData[{
 "Applying the function ",
 ButtonBox["Normal",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Normal"],
 " to eqns (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag2"],
 ") and (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag3"],
 "), in order to remove the remainder, and adding them together and solving \
for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", "''"}], 
    RowBox[{"(", "x", ")"}]}], TraditionalForm]],ExpressionUUID->
  "d98ad0b5-f3e1-42ae-95a3-1cc013b672a3"],
 " gives"
}], "Text",
 CellTags->"i:17",ExpressionUUID->"8dd560d1-54b2-45ca-84a1-5f2070cf3518"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"c", "[", 
       RowBox[{"x", "+", "\[CapitalDelta]x"}], "]"}], "+", 
      RowBox[{"c", "[", 
       RowBox[{"x", "-", "\[CapitalDelta]x"}], "]"}]}], "\[Equal]", " ", 
     RowBox[{
      RowBox[{"Normal", "[", "exp2", "]"}], "+", " ", 
      RowBox[{"Normal", "[", "exp3", "]"}]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"c", "''"}], "[", "x", "]"}]}], "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"56f0c11f-0ef2-4a79-abbe-6d0faf89746f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["c", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"c", "[", "x", "]"}]}], "+", 
      RowBox[{"c", "[", 
       RowBox[{"x", "-", "\[CapitalDelta]x"}], "]"}], "+", 
      RowBox[{"c", "[", 
       RowBox[{"x", "+", "\[CapitalDelta]x"}], "]"}]}], 
     SuperscriptBox["\[CapitalDelta]x", "2"]]}], "}"}], "}"}]], "Output",
 CellLabel->
  "Out[19]=",ExpressionUUID->"5f03c034-4960-4977-9ac6-bc72c0a17bad"]
}, Open  ]],

Cell[TextData[{
 "The error for the approximation of the second space derivative is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalO]", "(", 
    FormBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]", "x"}], ")"}], "2"],
     TraditionalForm], ")"}], TraditionalForm]],ExpressionUUID->
  "c6dc2fad-921e-4eb6-a64a-c5255311e28c"],
 " which is obtained by dividing ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptCapitalO]", "(", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[CapitalDelta]", " ", "x"}], ")"}], "4"], ")"}], 
   TraditionalForm]],ExpressionUUID->"f0c75053-9ce5-4480-9d1e-07363d527b97"],
 " by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["x",
        FontSlant->"Italic"]}]], ")"}], "2"], TraditionalForm]],
  ExpressionUUID->"a6232506-d27c-4b2e-b2bd-a88d25cabf09"],
 ". By dividing time and distance into discrete increments of fixed size a \
concentration grid is created (Fig. ",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["FigureCaption", "fig2"],
 ")."
}], "Text",ExpressionUUID->"226a2133-cf20-4758-a8f6-93e6be67b0c7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"vertical", ",", "horizontal", ",", "option2"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vertical", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "10"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"horizontal", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "i"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "i"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"option2", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Prolog", "\[Rule]", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"TraditionalForm", "[", "k", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "5."}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"TraditionalForm", "[", "j", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5.", ",", "0.5"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubsuperscriptBox["c", "j", "k"], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5.5", ",", "5.4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubsuperscriptBox["c", "j", 
             RowBox[{"k", "+", "1"}]], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5.6", ",", "6.4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubsuperscriptBox["c", 
             RowBox[{"j", "-", "1"}], "k"], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"4.6", ",", "5.4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubsuperscriptBox["c", 
             RowBox[{"j", "+", "1"}], "k"], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"6.6", ",", "5.4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"4", ",", "5"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"5", ",", "5"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"6", ",", "5"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"5", ",", "6"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Arrowheads", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.03"}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.5", ",", "5.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "7.5"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"5.5", ",", "0.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"7.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vertical", ",", "horizontal"}], "}"}], ",", "option2"}], 
  "]"}], "\n", 
 RowBox[{"SelectionMove", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", "Previous", ",", "Cell"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEndToken", "[", "\"\<OpenCloseGroup\>\"", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SelectionMove", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", "After", ",", "Cell"}], 
  "]"}]}], "Input",
 CellLabel->
  "In[134]:=",ExpressionUUID->"830a7067-f2ab-4d8b-9e52-c55384cec49f"],

Cell[BoxData[
 GraphicsBox[{{LineBox[{{1, 1}, {1, 10}}], LineBox[{{2, 1}, {2, 10}}], 
    LineBox[{{3, 1}, {3, 10}}], LineBox[{{4, 1}, {4, 10}}], 
    LineBox[{{5, 1}, {5, 10}}], LineBox[{{6, 1}, {6, 10}}], 
    LineBox[{{7, 1}, {7, 10}}], LineBox[{{8, 1}, {8, 10}}], 
    LineBox[{{9, 1}, {9, 10}}], LineBox[{{10, 1}, {10, 10}}]}, {
    LineBox[{{1, 1}, {10, 1}}], LineBox[{{1, 2}, {10, 2}}], 
    LineBox[{{1, 3}, {10, 3}}], LineBox[{{1, 4}, {10, 4}}], 
    LineBox[{{1, 5}, {10, 5}}], LineBox[{{1, 6}, {10, 6}}], 
    LineBox[{{1, 7}, {10, 7}}], LineBox[{{1, 8}, {10, 8}}], 
    LineBox[{{1, 9}, {10, 9}}], LineBox[{{1, 10}, {10, 10}}]}},
  AspectRatio->1,
  ImagePadding->{{5, 5}, {5, 5}},
  PlotRange->{{0, 10}, {0, 10}},
  Prolog->{
    InsetBox[
     FormBox["k", TraditionalForm], {0.5, 5.}], 
    InsetBox[
     FormBox["j", TraditionalForm], {5., 0.5}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubsuperscriptBox["c", "j", "k"], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {5.5, 5.4}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubsuperscriptBox["c", "j", 
           RowBox[{"k", "+", "1"}]], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {5.6, 6.4}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubsuperscriptBox["c", 
           RowBox[{"j", "-", "1"}], "k"], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {4.6, 5.4}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubsuperscriptBox["c", 
           RowBox[{"j", "+", "1"}], "k"], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {6.6, 5.4}], 
    PointSize[0.02], 
    PointBox[{4, 5}], 
    PointBox[{5, 5}], 
    PointBox[{6, 5}], 
    PointBox[{5, 6}], 
    Arrowheads[{0, 0.03}], 
    ArrowBox[{{0.5, 5.5}, {0.5, 7.5}}], 
    ArrowBox[{{5.5, 0.5}, {7.5, 0.5}}]}]], "Output",
 CellLabel->"Out[138]=",ExpressionUUID->"c7bb347a-766a-4f53-993f-d825fb6a9843"]
}, {2}]],

Cell[TextData[{
 StyleBox["Fig. ",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["Chapter"],
  FontWeight->"Bold"],
 StyleBox[".",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["FigureCaption"],
  FontWeight->"Bold"],
 " ",
 " Grid showing concentration at grid coordinates ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],ExpressionUUID->
  "23084965-4955-46ab-9820-fd5003f0a4ad"],
 " and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "57e381c0-d105-4162-a91d-b19c03d6c39a"],
 "."
}], "FigureCaption",
 CellTags->"fig2",ExpressionUUID->"c1150e69-84e7-4950-8c0d-1caccdd7ecc4"],

Cell[TextData[{
 "In this way distance and time can then be indexed. For example the distance \
in the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "a763ae3d-bd80-43f6-a159-8b6eed78c6de"],
 " direction from the electrode surface can be divided into ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"m", "-", "1"}], ")"}], TraditionalForm]],ExpressionUUID->
  "e56e2592-deb3-4faf-920c-39912c68f4f9"],
 " increments of size ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[CapitalDelta]", " ", "x"}], TraditionalForm]],ExpressionUUID->
  "8988ac7b-6fa2-45c8-a29a-ca151fa36959"],
 ". The distance at any point ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "34acd24b-8f07-4e66-890f-f504965df17d"],
 " from the electrode surface can be considered to be equal to the ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],ExpressionUUID->
  "8fcfcf78-0216-4fe1-a32f-ff75bd3afa79"],
 "th increment. Therefore a distance ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", "+", 
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["x",
        FontSlant->"Italic"]}]]}], ")"}], TraditionalForm]],ExpressionUUID->
  "60931b34-14b6-404e-aaf6-2abe7f565d62"],
 " from the surface will be equal to the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"j", "+", "1"}], ")"}], TraditionalForm]],ExpressionUUID->
  "ef2f1784-fd75-4446-b5b4-044fb14de547"],
 "th increment and any distance ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"x", "-", 
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["x",
        FontSlant->"Italic"]}]]}], ")"}], TraditionalForm]],ExpressionUUID->
  "0c3d7f65-d372-4091-b877-fbacb118cb66"],
 " from the surface will be equal to the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"j", "-", "1"}], ")"}], TraditionalForm]],ExpressionUUID->
  "29885e1d-2a1e-4448-9e66-645caacfe768"],
 "th increment. We use ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"m", "-", "1"}], ")"}], TraditionalForm]],ExpressionUUID->
  "0d65ac3c-6f27-468d-b8da-910afc358dd6"],
 " increments rather than ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "8f04fbb4-3f27-4920-a1cf-8630717871ed"],
 " increments because the first point on the grid, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"j", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "b427bdfb-f2ba-4374-ac6b-6a241934ab68"],
 ", corresponds to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "c3142791-8513-4b75-a8ab-8e6e774cc311"],
 ". Likewise time, ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "eb372b42-762d-4546-9aff-348d7a31f9b9"],
 ", can be divided into ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"n", "-", "1"}], ")"}], TraditionalForm]],ExpressionUUID->
  "0eb2eb41-e104-43ab-8854-1e983c7f7882"],
 " increments of size ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"\[CapitalDelta]", 
     StyleBox["t",
      FontSlant->"Italic"]}]], TraditionalForm]],ExpressionUUID->
  "92afd99b-6a19-4235-8ee8-1336062592ba"],
 " with time, ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "a63c1043-7e64-44c7-8ed7-6b8718aed3c9"],
 ", being the ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "be80b3b2-21a4-4b7a-8f68-60b2b2447ef5"],
 "th increment, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"t", "+", "\[CapitalDelta]t"}], ")"}], TraditionalForm]],
  ExpressionUUID->"722e8d42-d6a3-4154-937e-dffe314f6e80"],
 " the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"k", "+", "1"}], ")"}], TraditionalForm]],ExpressionUUID->
  "9bbffb09-a8ee-4825-8594-d2256356c230"],
 "th increment, and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"t", "-", 
     StyleBox[
      RowBox[{"\[CapitalDelta]", 
       StyleBox["t",
        FontSlant->"Italic"]}]]}], ")"}], TraditionalForm]],ExpressionUUID->
  "3f08ec2b-4679-4efa-9a75-bf731857618d"],
 " the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"k", "-", "1"}], ")"}], TraditionalForm]],ExpressionUUID->
  "119de6bf-9717-4286-b3d2-86f1b5b8fd74"],
 "th increment. The first point on the grid, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "4786e709-dca6-43ce-a821-60d8e377ee93"],
 ", corresponds to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "6e959260-fb02-4ab4-9fac-8e47093e3890"],
 ".\nReturning now to the discretized version of eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag4"],
 ") this can be expressed in terms of the points on the grid as"
}], "Text",ExpressionUUID->"87c880d5-bbc4-4e61-8290-aa97a59ed430"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"c", "(", 
    RowBox[{"j", ",", " ", 
     RowBox[{"k", "+", "1"}]}], ")"}], "=", 
   RowBox[{
    RowBox[{"c", "(", 
     RowBox[{"j", ",", " ", "k"}], ")"}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"D", "\[CapitalDelta]", "t"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", "x"}], ")"}], "2"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"c", "(", 
        RowBox[{
         RowBox[{"j", "+", "1"}], ",", " ", "k"}], ")"}], "-", 
       RowBox[{"2", 
        RowBox[{"c", "(", 
         RowBox[{"j", ",", "k"}], ")"}]}], "+", 
       RowBox[{"c", "(", 
        RowBox[{
         RowBox[{"j", "-", "1"}], ",", " ", "k"}], ")"}]}], ")"}]}]}]}], 
  TraditionalForm]],ExpressionUUID->"51958283-bfc8-4b8b-8ac3-47abcd1900b0"]], \
"EquationNumbered",
 CellTags->"tag5",ExpressionUUID->"28c1fb37-7956-447d-bf22-ce39e56c179a"],

Cell[TextData[{
 "Using this equation the concentration at ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"t", "=", 
     RowBox[{"k", "+", "1"}]}]}], TraditionalForm]],ExpressionUUID->
  "781c1682-e3be-4729-8fda-99456805256f"],
 " can be determined from the previously calculated concentration at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "k"}], TraditionalForm]],ExpressionUUID->
  "42d2806c-608b-447f-86b6-9c2f8f47cf6a"],
 ". This form of finite difference method is called a fully explicit scheme."
}], "Text",ExpressionUUID->"a3951588-c33f-466c-905a-951bac9d3089"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["Section"],
 " Dimensionless variables"
}], "Section",
 CellTags->{
  "s3.3", "i:11"},ExpressionUUID->"5668613b-ad7a-4ea7-b31c-c0fef8292075"],

Cell[TextData[{
 "It is desirable to use dimensionless quantities when obtaining numerical \
solutions. By dividing the concentration terms by the bulk concentration a \
dimensionless concentration is obtained at each point ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],ExpressionUUID->
  "66648f2d-11e7-4499-b470-d6ed68501bc7"],
 " and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "c8ead3fc-9d2f-4a7f-86b3-0c33723a0f1d"],
 ", for which we",
 "\[CloseCurlyQuote]",
 "ll use the notation ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], "j", "k"], TraditionalForm]],ExpressionUUID->
  "1bdf65dc-12a5-4c2c-8455-8855f669507b"],
 ". Notice that the term ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["D",
       FontSlant->"Italic"], "\[CapitalDelta]", 
      StyleBox["t",
       FontSlant->"Italic"]}]], 
    StyleBox["/",
     FontSlant->"Italic"], 
    SuperscriptBox[
     RowBox[{"(", 
      StyleBox[
       RowBox[{"\[CapitalDelta]", 
        StyleBox["x",
         FontSlant->"Italic"]}]], ")"}], "2"]}], TraditionalForm]],
  ExpressionUUID->"9bbd423f-5096-46a7-bfa4-1df40d21d589"],
 " in eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag5"],
 ") is also dimensionless. In the electrochemical literature this term is \
referred to as the model diffusion coefficient and generally given the symbol \
",
 StyleBox["D", "dv"],
 "."
}], "Text",
 CellTags->"i:7",ExpressionUUID->"82f61799-c108-4fbf-8d56-749cdc2abbde"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["D", "dv"], "=", 
   FractionBox[
    RowBox[{"D", "\[CapitalDelta]", "t"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"\[CapitalDelta]", "x"}], ")"}], "2"]]}], 
  TraditionalForm]],ExpressionUUID->"28e5a9c8-5c28-4a83-9fa3-62738271a812"]], \
"EquationNumbered",
 CellTags->"tag6",ExpressionUUID->"d4154634-f90c-4eb0-ae40-80c1f7ac084a"],

Cell[TextData[{
 "It can be shown that for the fully explicit finite difference method to be \
stable requires that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["D", "dv"], "\[LessSlantEqual]", "0.5"}], TraditionalForm]],
  ExpressionUUID->"d8d263c7-eeb1-42d4-a8ef-cad0f52d6d43"],
 ". Re-writing eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag5"],
 ") in dimensionless terms gives"
}], "Text",ExpressionUUID->"f7fbd320-4b32-4dc7-a9ba-dad5c5a7a7e4"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"j", "-", "1"}], "k"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", 
        StyleBox["D", "dv"]}]}], ")"}], 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "j", "k"]}], "+", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"j", "+", "1"}], "k"]}]}], "=", "\[AlignmentMarker]", 
   SubsuperscriptBox[
    StyleBox["c", "dv"], "j", 
    RowBox[{"k", "+", "1"}]]}], 
  TraditionalForm]],ExpressionUUID->"7033e805-ba85-4906-9c94-cba7e31c1a28"]], \
"EquationNumbered",
 CellTags->"tag20",ExpressionUUID->"85af2dd6-3adc-4177-99ef-dd24e8cfd69d"],

Cell[TextData[{
 "To obtain a dimensionless time, ",
 StyleBox["t", "dv"],
 ", time ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "dd1f8b4e-2679-46dd-acc6-ee64100cd9b3"],
 " is divided by the duration of the experiment, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "n"], TraditionalForm]],ExpressionUUID->
  "6156e728-6e00-4d24-9041-13e8df62da7c"],
 ". The duration is defined as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["t", "n"], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}], "\[CapitalDelta]", "\[VeryThinSpace]", 
     "t"}]}], TraditionalForm]],ExpressionUUID->
  "44b55ca0-60cf-4f60-9df8-81003446962a"],
 " therefore"
}], "Text",ExpressionUUID->"221eacaa-f02a-45c9-b4af-84f59a8ce9a7"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["t", "dv"], "(", "k", ")"}], "=", 
    RowBox[{
     FractionBox["t", 
      SubscriptBox["t", "n"]], "=", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"k", "-", "1"}], 
       RowBox[{"n", "-", "1"}]], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "255589a0-0f2d-4c0f-9c54-82f3888ea3f7"],
 "\t\t\t\t",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "\[LessEqual]", " ", "k", "\[LessEqual]", " ", "n"}], 
   TraditionalForm]],ExpressionUUID->"678fa0e8-7a1e-4fd5-8565-52cb3615bf20"]
}], "EquationNumbered",ExpressionUUID->"4bcf5aaa-cd01-4bd9-82f5-ebfeef8f6e05"],

Cell[TextData[{
 "To obtain the dimensionless distance, ",
 StyleBox["x", "dv"],
 ", the distance, which is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"j", "-", "1"}], ")"}], "\[CapitalDelta]", " ", "x"}]}], 
   TraditionalForm]],ExpressionUUID->"ebfd9fdc-79d6-4e9a-8aab-77cb64194d69"],
 ", is divided by the quantity ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    SubscriptBox[
     RowBox[{"D", "t"}], "n"]], TraditionalForm]],ExpressionUUID->
  "064b2a99-a801-47af-9e44-a362cf22df41"],
 " "
}], "Text",ExpressionUUID->"b3ac6baa-3a3f-4cbc-a5a8-a60daaffa6e7"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["x", "dv"], "(", "j", ")"}], "=", 
   RowBox[{
    FractionBox["x", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"D", " ", 
        SubscriptBox["t", "n"]}], ")"}], 
      RowBox[{"1", "/", "2"}]]], "=", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"j", "-", "1"}], ")"}], "\[CapitalDelta]", "x"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D", "\[CapitalDelta]", "t"}], 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}], ")"}], 
      RowBox[{"1", "/", "2"}]]]}]}], 
  TraditionalForm]],ExpressionUUID->"e61ba33a-9397-4128-81e7-9eb7946999dd"]], \
"EquationNumbered",
 CellTags->"tag7",ExpressionUUID->"aafec4d3-14fd-4bbf-a994-3bddcf8859a4"],

Cell[TextData[{
 "After substituting eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag6"],
 ") into eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag7"],
 ") the expression for the dimensionless distance is"
}], "Text",ExpressionUUID->"5eaed84a-1722-47f0-b402-20c077a55533"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["x", "dv"], "(", "j", ")"}], "=", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"j", "-", "1"}], ")"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"D", "(", 
       RowBox[{"n", "-", "1"}], ")"}], ")"}], 
     RowBox[{"1", "/", "2"}]]]}], 
  TraditionalForm]],ExpressionUUID->"c092c10c-9a47-4857-9fb0-69c33e91cb06"]], \
"EquationNumbered",ExpressionUUID->"f0bc4b87-f4f0-4995-8083-9265a95e8468"],

Cell[TextData[{
 "We saw in ",
 ButtonBox["\[Section]1.5.1",
  BaseStyle->"Hyperlink",
  ButtonData:>{"chapter1.nb", "erf"}],
 " that the concentration profile following a potential step experiment is"
}], "Text",ExpressionUUID->"670f0be9-579c-45d4-afa5-8764b1512031"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"c", "(", 
    RowBox[{"x", ",", " ", "t"}], ")"}], "=", 
   RowBox[{
    SuperscriptBox["c", "*"], 
    RowBox[{"erf", "(", 
     FractionBox["x", 
      RowBox[{"2", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"D", " ", "t"}], ")"}], 
        RowBox[{"1", "/", "2"}]]}]], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"ad855320-d9df-467d-8c03-3cc812db0707"]], \
"EquationNumbered",
 CellTags->"tag8",ExpressionUUID->"6eb9c06a-9208-4961-9d8a-b51f4c727de5"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"erf", "(", "3", ")"}], "\[TildeFullEqual]", "1"}], 
   TraditionalForm]],ExpressionUUID->"5ce9c1fa-1f04-45cf-b295-dab20936c067"],
 " it follows from eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag8"],
 ") that when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "/", 
     RowBox[{"(", 
      RowBox[{"2", 
       SuperscriptBox[
        RowBox[{"(", 
         SubscriptBox[
          StyleBox["Dt",
           FontSlant->"Italic"], "n"], ")"}], 
        RowBox[{"1", "/", "2"}]]}], ")"}]}], "=", "3"}], TraditionalForm]],
  ExpressionUUID->"14bcd2d5-87d6-4676-8fa0-77020702919e"],
 " the concentration is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", "(", 
     RowBox[{"x", ",", "t"}], ")"}], " ", "\[TildeFullEqual]", " ", 
    FormBox[
     SuperscriptBox["c", "*"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "c354ac10-10d0-472a-b8e0-5e3d1a7c8e55"],
 ". Therefore the maximum distance from the electrode surface that needs to \
be considered is"
}], "Text",ExpressionUUID->"59327759-b054-4328-8b0c-30b83cfb94a7"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["x", "max"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"m", "-", "1"}], ")"}], "\[CapitalDelta]", "x"}], "=", 
    RowBox[{"6", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"D", " ", 
        SubscriptBox["t", "n"]}], ")"}], 
      RowBox[{"1", "/", "2"}]]}]}]}], 
  TraditionalForm]],ExpressionUUID->"de4030eb-85f0-4e69-a3f4-16e89fac84b8"]], \
"EquationNumbered",
 CellTags->"tag9",ExpressionUUID->"56532cea-d65b-47f4-ae34-c53da9370a5f"],

Cell[TextData[{
 "In dimensionless form means that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"x", "(", "j", ")"}], "max"], TraditionalForm]],ExpressionUUID->
  "6a4bb567-2372-4efe-815f-47febc6ee77f"],
 " = 6. The maximum number of spacial grid points required will therefore be"
}], "Text",ExpressionUUID->"52fed5e5-bf7e-4f52-b0c5-42a5cc825aa2"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"m", "-", "1"}], ")"}], "=", 
   RowBox[{
    RowBox[{"6", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"D", " ", 
         SubscriptBox["t", "n"]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"\[CapitalDelta]", "x"}], ")"}], "2"]], ")"}], 
      RowBox[{"1", "/", "2"}]]}], "=", 
    RowBox[{"6", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        StyleBox["D", "dv"], "(", 
        RowBox[{"n", "-", "1"}], ")"}], ")"}], 
      RowBox[{"1", "/", "2"}]]}]}]}], 
  TraditionalForm]],ExpressionUUID->"84d5e9df-decc-42cf-807b-a25a73d46fd8"]], \
"EquationNumbered",ExpressionUUID->"a0de581f-d578-4526-9b85-fed394cae7c0"],

Cell[TextData[{
 "To arrive at an expression for the dimensionless current we first consider \
the flux, ",
 Cell[BoxData[
  FormBox["J", TraditionalForm]],ExpressionUUID->
  "f25c2fa4-57b3-4733-99a0-88b06752e8d2"],
 ", which is"
}], "Text",ExpressionUUID->"bcfc2c53-1732-47c6-b85a-5c8aa6b9b734"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"J", "(", 
    RowBox[{"x", ",", "t"}], ")"}], "=", 
   RowBox[{
    RowBox[{"-", "D"}], 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"c", "(", 
       RowBox[{"x", ",", "t"}], ")"}]}], 
     RowBox[{"\[PartialD]", "x"}]]}]}], 
  TraditionalForm]],ExpressionUUID->"2b98bd1b-9b73-4eef-9a7f-4331387adb92"]], \
"EquationNumbered",ExpressionUUID->"a3fd3ade-0482-4885-9623-721da4220105"],

Cell["This can re-written in forward difference form as", \
"Text",ExpressionUUID->"47c0890f-0e0a-4bfa-b7f5-18f280ea04e4"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"J", "(", 
    RowBox[{"x", ",", "t"}], ")"}], "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["D", 
      RowBox[{"\[CapitalDelta]", "x"}]]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "(", 
       RowBox[{
        RowBox[{"x", "+", 
         RowBox[{"\[CapitalDelta]", "x"}]}], ",", "t"}], ")"}], "-", 
      RowBox[{"c", "(", 
       RowBox[{"x", ",", "t"}], ")"}]}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"2398dc40-39c7-4d0f-bde7-d257966ddbcc"]], \
"EquationNumbered",
 CellTags->"tag9a",ExpressionUUID->"a6ae56ae-0016-44e6-92b1-69c76a573740"],

Cell[TextData[{
 "In terms of dimensionless concentrations eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag9a"],
 ") is"
}], "Text",ExpressionUUID->"11b31ab7-701a-4e7b-8236-bf400266e6a6"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"J", "(", 
    RowBox[{"j", ",", "k"}], ")"}], " ", "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"D", " ", 
       SuperscriptBox["c", "*"]}], 
      RowBox[{"\[CapitalDelta]", "x"}]]}], 
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox[
       StyleBox["c", "dv"], 
       RowBox[{"j", "+", "1"}], "k"], "-", 
      SubsuperscriptBox[
       StyleBox["c", "dv"], "j", "k"]}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"c81ca75f-7d55-4d07-bc4a-bf906a583baf"]], \
"EquationNumbered",
 CellTags->"tag10",ExpressionUUID->"0699ca87-619f-4b57-91b2-d5f9ee478389"],

Cell["The current is defined as", \
"Text",ExpressionUUID->"3b53346f-2aa6-43fa-9f05-7293679685a0"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"i", "(", "t", ")"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "n"}], "\[VeryThinSpace]", "F", "\[NegativeVeryThinSpace]", 
     "A", "\[VeryThinSpace]", 
     SubscriptBox[
      RowBox[{"D", "(", 
       FractionBox[
        RowBox[{"\[PartialD]", 
         RowBox[{
          SubscriptBox["c", 
           StyleBox["O", "SC"]], "(", 
          RowBox[{"x", ",", "t"}], ")"}]}], 
        RowBox[{"\[PartialD]", "x"}]], ")"}], 
      RowBox[{"x", "=", "0"}]]}], "=", 
    RowBox[{
    "n", "\[VeryThinSpace]", "F", "\[NegativeVeryThinSpace]", "A", 
     "\[VeryThinSpace]", 
     RowBox[{
      SubscriptBox["J", 
       StyleBox["O", "SC"]], "(", 
      RowBox[{"0", ",", "t"}], ")"}]}]}]}], 
  TraditionalForm]],ExpressionUUID->"c7861064-cf9f-448f-8671-f605f209c345"]], \
"EquationNumbered",
 CellTags->"tag11",ExpressionUUID->"84fc49d3-28ef-4de2-ba01-697c52e5d11e"],

Cell[TextData[{
 "where subscript ",
 StyleBox["O", "ChemicalFormula"],
 " indicates the oxidized species. Substituting eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag10"],
 ") into eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag11"],
 ") gives the two point approximation for the current in terms of ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],ExpressionUUID->
  "1c68befd-f99b-4b75-8d6e-ba47ed8fcb10"],
 " and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "77979b2e-7de6-4fe2-911f-80218890363a"],
 " indices"
}], "Text",ExpressionUUID->"e55a00be-949d-44bd-aa1a-825dfeb9b626"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"i", "(", "k", ")"}], " ", "=", 
   RowBox[{
    RowBox[{"-", "n"}], "\[VeryThinSpace]", "F", "\[NegativeVeryThinSpace]", 
    "A", "\[VeryThinSpace]", 
    SuperscriptBox["c", "*"], 
    FractionBox["D", 
     RowBox[{"\[CapitalDelta]", "x"}]], 
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox[
       StyleBox["c", "dv"], "2", "k"], "-", 
      SubsuperscriptBox[
       StyleBox["c", "dv"], "1", "k"]}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"7243359f-667c-4cdc-8c70-809b6e20cb62"]], \
"EquationNumbered",
 CellTags->"tag12",ExpressionUUID->"37f1d4bb-686f-4cd6-9e1b-c8fcf599173b"],

Cell[TextData[{
 "Substituting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "x"}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"D", " ", "\[CapitalDelta]", "\[VeryThinSpace]", 
       RowBox[{"t", "/", "D"}]}], ")"}], 
     RowBox[{"1", "/", "2"}]]}], TraditionalForm]],ExpressionUUID->
  "0058b57b-7ad3-46e1-b49d-6facc03a944c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[CapitalDelta]", " ", "t"}], "=", 
    RowBox[{
     SubscriptBox["t", "n"], "/", 
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}]}]}], TraditionalForm]],ExpressionUUID->
  "9084b099-3e4a-4b35-8121-72ebffa4a3de"],
 " into eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag12"],
 ") gives the dimensionless current, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["i", "dv"], "(", "k", ")"}], TraditionalForm]],ExpressionUUID->
  "ed80f287-f5a9-497b-bf15-5b6da85cb0c7"],
 ","
}], "Text",ExpressionUUID->"2304f7e2-d395-4ba0-a518-807aafa95fec"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["i", "dv"], "(", "k", ")"}], " ", "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"i", "(", "k", ")"}], " "}], 
      RowBox[{
      "n", "\[VeryThinSpace]", "F", "\[NegativeVeryThinSpace]", "A", 
       "\[VeryThinSpace]", 
       SuperscriptBox["c", "*"]}]], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SubscriptBox["t", "n"], "D"], ")"}], 
      RowBox[{"1", "/", "2"}]]}], "=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox[
         StyleBox["c", "dv"], "2", "k"], "-", 
        SubsuperscriptBox[
         StyleBox["c", "dv"], "1", "k"]}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        StyleBox["D", "dv"], "(", 
        RowBox[{"n", "-", "1"}], ")"}], ")"}], 
      RowBox[{"1", "/", "2"}]]}]}]}], 
  TraditionalForm]],ExpressionUUID->"b2d90a7a-7cfd-475c-919d-ba0e1a3bfd9d"]], \
"EquationNumbered",
 CellTags->"tag16",ExpressionUUID->"3c9c60d7-aa32-4c45-8b85-4745bc1e31f4"],

Cell[TextData[{
 "A more accurate estimation of the current is obtained by using a higher \
order approximation for the concentration gradient at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "6f39b625-a702-4956-962b-d8137594d4c4"],
 " (see ",
 ButtonBox["Appendix 1",
  BaseStyle->"Hyperlink",
  ButtonData:>{"Appendix1.nb", None}],
 "). The three point approximation for the flux at the surface is"
}], "Text",ExpressionUUID->"0c0049f9-9cef-4f27-a561-5d0219676668"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"J", "(", 
    RowBox[{"1", ",", "k"}], ")"}], " ", "=", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"D", "c"}], "*"], 
      RowBox[{"2", "\[CapitalDelta]", "x"}]]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], 
       SubsuperscriptBox[
        StyleBox["c", "dv"], "1", "k"]}], "+", 
      RowBox[{"4", 
       SubsuperscriptBox[
        StyleBox["c", "dv"], "2", "k"]}], "-", 
      SubsuperscriptBox[
       StyleBox["c", "dv"], "3", "k"]}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"58d8517f-ef57-4a55-a716-2e1ff659db18"]], \
"EquationNumbered",ExpressionUUID->"ac4cb481-9d7b-4646-a6e2-c1aba889155f"],

Cell[TextData[{
 "Substituting this expression into eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag11"],
 ") gives"
}], "Text",ExpressionUUID->"64faf688-f681-41ba-938a-4a1f5658d4e6"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"i", "(", "k", ")"}], " ", "=", 
   RowBox[{
    SuperscriptBox[
     StyleBox["nFAc",
      FontSlant->"Italic"], "*"], 
    FractionBox["D", 
     RowBox[{"2", "\[CapitalDelta]", "x"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], 
       SubsuperscriptBox[
        StyleBox["c", "dv"], "1", "k"]}], "+", 
      RowBox[{"4", 
       SubsuperscriptBox[
        StyleBox["c", "dv"], "2", "k"]}], "-", 
      SubsuperscriptBox[
       StyleBox["c", "dv"], "3", "k"]}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"691396f5-656b-413f-bbad-940104be9918"]], \
"EquationNumbered",ExpressionUUID->"12558355-f0ce-4b2b-8466-2e2e2570ffde"],

Cell["\<\
The three point approximation for the dimensionless current is therefore\
\>", "Text",ExpressionUUID->"ebf3354c-1999-4a83-8494-1ad0b6cfa6b6"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["i", "dv"], "(", "k", ")"}], " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], 
       SubsuperscriptBox[
        StyleBox["c", "dv"], "1", "k"]}], "+", 
      RowBox[{"4", 
       SubsuperscriptBox[
        StyleBox["c", "dv"], "2", "k"]}], "-", 
      SubsuperscriptBox[
       StyleBox["c", "dv"], "3", "k"]}], ")"}], 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        StyleBox["D", "dv"], "(", 
        RowBox[{"n", "-", "1"}], ")"}], ")"}], 
      RowBox[{"1", "/", "2"}]], "2"]}]}], 
  TraditionalForm]],ExpressionUUID->"0d6cbc73-fca8-4410-9204-3161107f59be"]], \
"EquationNumbered",
 CellTags->"tag13",ExpressionUUID->"c8a4f018-c963-4382-be0d-f3a0064f1a0a"],

Cell["\<\
An expression for the dimensionless rate constant can be derived from the \
Butler-Volmer equation:\
\>", "Text",ExpressionUUID->"3584455b-f82f-49f6-bb3b-828f49fb7c22"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"i", "(", "t", ")"}], "=", 
   RowBox[{"n", " ", "F", " ", "A", " ", 
    RowBox[{
     SubscriptBox["k", 
      StyleBox["s", "PP"]], "(", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["c", 
         SubscriptBox[
          StyleBox["R", "SC"], "1"]], "(", 
        RowBox[{"0", ",", "t"}], ")"}], 
       RowBox[{"exp", "(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
         FractionBox[
          RowBox[{"n", " ", "F"}], 
          RowBox[{"R", " ", "T"}]], 
         RowBox[{"(", 
          RowBox[{"E", "-", 
           RowBox[{"E", "\[VeryThinSpace]", 
            SuperscriptBox["\[Degree]", "\[Prime]"]}]}], ")"}]}], ")"}]}], 
      "-", 
      RowBox[{
       RowBox[{
        SubscriptBox["c", 
         SubscriptBox[
          StyleBox["O", "SC"], "1"]], "(", 
        RowBox[{"0", ",", "t"}], ")"}], 
       RowBox[{"exp", "(", 
        RowBox[{
         RowBox[{"-", "\[Alpha]"}], 
         FractionBox[
          RowBox[{"n", " ", "F"}], 
          RowBox[{"R", " ", "T"}]], 
         RowBox[{"(", 
          RowBox[{"E", "-", 
           RowBox[{"E", "\[VeryThinSpace]", 
            SuperscriptBox["\[Degree]", "\[Prime]"]}]}], ")"}]}], ")"}]}]}], 
     ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"3b453dfe-80e2-4b1f-a415-f9e483f81f14"]], \
"EquationNumbered",
 CellTags->"tag14",ExpressionUUID->"110ff9ef-2e33-4d65-afb2-611eb4c0b928"],

Cell["After making the concentrations dimensionless we have", \
"Text",ExpressionUUID->"8d14dc47-3f7e-4d6f-8a55-5544f0452fda"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"i", "(", "k", ")"}], 
    RowBox[{
    "n", "\[VeryThinSpace]", "F", "\[NegativeVeryThinSpace]", "A", 
     "\[VeryThinSpace]", 
     SuperscriptBox["c", "*"]}]], "=", 
   RowBox[{
    SubscriptBox["k", 
     StyleBox["s", "PP"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox[
        StyleBox["c", "dv"], 
        SubscriptBox[
         StyleBox["R", "SC"], "1"], "k"], 
       RowBox[{"exp", "(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
         StyleBox["E", "dv"]}], ")"}]}], "-", 
      RowBox[{
       SubsuperscriptBox[
        StyleBox["c", "dv"], 
        SubscriptBox[
         StyleBox["O", "SC"], "1"], "k"], 
       RowBox[{"exp", "(", 
        RowBox[{"-", 
         StyleBox[
          RowBox[{"\[Alpha]", 
           StyleBox["E", "dv"]}]]}], ")"}]}]}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"8b7a26d2-6a0b-41f0-bcd4-6ab2374887c9"]], \
"EquationNumbered",
 CellTags->"tag15",ExpressionUUID->"ec7d291c-955e-4178-a2ff-efde9aba0dc8"],

Cell[TextData[{
 "where ",
 StyleBox["E", "dv"],
 " is the dimensionless potential"
}], "Text",ExpressionUUID->"004ed416-0019-417f-807c-319a3d478153"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["E", "dv"], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"n", "\[VeryThinSpace]", "F"}], 
     RowBox[{"R", "\[VeryThinSpace]", "T"}]], 
    RowBox[{"(", 
     RowBox[{"E", "-", 
      RowBox[{"E", "\[VeryThinSpace]", 
       SuperscriptBox["\[Degree]", "\[Prime]"]}]}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"07e42fea-fdde-4ae1-9f23-460dc768ec1d"]], \
"EquationNumbered",ExpressionUUID->"b4a17399-0846-43a1-8d02-ee07a1b395a6"],

Cell[TextData[{
 "When eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag16"],
 ") is compared to eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag15"],
 ") we see that if eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag15"],
 ") is multiplied by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["t", "n"], "/", "D"}], ")"}], 
    RowBox[{"1", "/", "2"}]], TraditionalForm]],ExpressionUUID->
  "417d8300-3ff8-4934-90c2-91b56f4ef95d"],
 " the dimensionless current is obtained:"
}], "Text",ExpressionUUID->"e48ab9dc-a378-446c-9460-d4f286c2c1ed"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["i", "dv"], "(", "k", ")"}], " ", "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"i", "(", "k", ")"}], 
      SuperscriptBox[
       StyleBox["nFAc",
        FontSlant->"Italic"], "*"]], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SubscriptBox["t", "n"], "D"], ")"}], 
      RowBox[{"1", "/", "2"}]]}], "=", 
    RowBox[{
     SuperscriptBox[
      RowBox[{
       SubscriptBox["k", 
        StyleBox["s", "PP"]], "(", 
       FractionBox[
        SubscriptBox["t", "n"], "D"], ")"}], 
      RowBox[{"1", "/", "2"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox[
         StyleBox["c", "dv"], 
         SubscriptBox[
          StyleBox["R", "SC"], "1"], "k"], 
        RowBox[{"exp", "(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]"}], ")"}], 
          StyleBox["E", "dv"]}], ")"}]}], "-", 
       RowBox[{
        SubsuperscriptBox[
         StyleBox["c", "dv"], 
         SubscriptBox[
          StyleBox["O", "SC"], "1"], "k"], 
        RowBox[{"exp", "(", 
         RowBox[{"-", 
          StyleBox[
           RowBox[{"\[Alpha]", 
            StyleBox["E", "dv"]}]]}], ")"}]}]}], ")"}]}]}]}], 
  TraditionalForm]],ExpressionUUID->"722afd14-2e49-4d19-807e-420bf9ef285d"]], \
"EquationNumbered",
 CellTags->"tag17",ExpressionUUID->"818c6b7d-4f3d-4a92-bb87-cca5de8fc863"],

Cell[TextData[{
 "Therefore since the terms within the parenthesis on the right hand side of \
eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag17"],
 ") are already dimensionless the dimensionless rate constant is defined as"
}], "Text",ExpressionUUID->"8ce8c6bf-5c29-4293-984f-3f3d1d008c79"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    StyleBox["k", "dv"], 
    StyleBox["s", "PP"]], "=", 
   SuperscriptBox[
    RowBox[{
     SubscriptBox["k", 
      StyleBox["s", "PP"]], "(", 
     FractionBox[
      SubscriptBox["t", "n"], "D"], ")"}], 
    RowBox[{"1", "/", "2"}]]}], 
  TraditionalForm]],ExpressionUUID->"7d48e2cd-3dd8-4151-b6bf-5d8389f3cf71"]], \
"EquationNumbered",ExpressionUUID->"d92738d1-e40e-43f3-b7b7-972dfc92f4be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["Section"],
 " Initial condition and boundary conditions"
}], "Section",
 CellTags->"s3.4",ExpressionUUID->"d86c4c9b-181e-412d-aa5f-c309a9c4d568"],

Cell["\<\
Just as we needed two boundary conditions and an initial condition to solve \
the PDE analytically we also need these for the finite difference simulation. \
The initial condition and boundary conditions are typically\
\>", "Text",
 CellTags->"i:5",ExpressionUUID->"fd0936d7-28d7-4766-b43f-e119de88aa5d"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", "(", 
     RowBox[{"x", ",", "0"}], ")"}], "=", 
    FormBox[
     SuperscriptBox["c", "*"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "9e17f24d-805e-4525-a832-0c268010d7fb"],
 "\tfor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "0"}], TraditionalForm]],ExpressionUUID->
  "64e06a9e-178c-4c2e-94fb-4ccdad8f334f"]
}], "EquationNumbered",ExpressionUUID->"301d1edc-2cb1-48af-91fd-00f66ca45025"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", "(", 
     RowBox[{"0", ",", "t"}], ")"}], "=", 
    RowBox[{"f", "(", "t", ")"}]}], TraditionalForm]],ExpressionUUID->
  "64c9ec9c-137b-4f2a-9009-5a4bb9f7c655"],
 "\tfor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "ce2fc6cc-e653-4d72-8685-dd37b0a3a006"]
}], "EquationNumbered",ExpressionUUID->"4e376761-f09e-4847-9a0f-9b0d5840bc8c"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"c", "(", 
     RowBox[{"\[Infinity]", ",", "t"}], ")"}], "=", 
    FormBox[
     SuperscriptBox["c", "*"],
     TraditionalForm]}], TraditionalForm]],ExpressionUUID->
  "b92b14be-3018-4629-8496-e15f1c6f2cda"],
 "\tfor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", ">", "0"}], TraditionalForm]],ExpressionUUID->
  "d429f8ac-d02b-475b-874a-574eacac7c9f"]
}], "EquationNumbered",ExpressionUUID->"a0d3645c-029a-44e7-987b-b4ee2c37140b"],

Cell[TextData[{
 "The representation of the initial and boundary values for finite difference \
methods are shown below in Fig. ",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["FigureCaption", "fig3"],
 ".",
 "\n",
 "In dimensionless form these conditions can be written as"
}], "Text",ExpressionUUID->"fb539176-4619-4dbc-9e04-1ec59de7b671"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     StyleBox["c", "dv"], "j", "1"], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"144d78b4-8bc5-433a-a3df-32c90bde2a26"],
 "\tfor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "c5b04c28-56bb-4d87-801d-998aa1ba0fad"]
}], "EquationNumbered",
 CellTags->"tag18",ExpressionUUID->"fe0cfed9-6f9e-4670-940e-d31e56b63ad7"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     StyleBox["c", "dv"], "1", "k"], "=", 
    RowBox[{"f", "(", "k", ")"}]}], TraditionalForm]],ExpressionUUID->
  "1c93d582-1612-4e2f-b3e6-7ba956c62e5b"],
 "\tfor ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["x", "dv"], "=", "0"}], ",", " ", 
    RowBox[{"k", ">", "1"}]}], TraditionalForm]],ExpressionUUID->
  "877610fe-71ca-4cf6-b386-bdd3781b374e"]
}], "EquationNumbered",ExpressionUUID->"494375bd-e986-4580-8a59-528ce9a351b4"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     StyleBox["c", "dv"], "m", "k"], "=", "1"}], TraditionalForm]],
  ExpressionUUID->"6f4f9eca-c78a-4820-a275-2cb4725e5528"],
 "\tfor ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["x", "dv"], "=", "6"}], ",", " ", 
    RowBox[{"k", ">", "1"}]}], TraditionalForm]],ExpressionUUID->
  "7b759ea4-6949-4568-a680-2807f7eb7c92"]
}], "EquationNumbered",
 CellTags->"tag19",ExpressionUUID->"061c9e1d-f38b-4d65-bbee-d57f49270f06"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "vert", ",", "horiz", ",", "leftBoundary", ",", "rightBoundary", ",", 
     "initial", ",", "option3"}], "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"make", " ", "lines"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"vert", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "10"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"horiz", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "i"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "i"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"make", " ", "list", " ", "of", " ", "points"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"leftBoundary", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "i"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"rightBoundary", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "i"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"initial", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", "9"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"option3", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Epilog", "\[Rule]", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubsuperscriptBox["c", "j", "k"], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5.5", ",", "5.4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubsuperscriptBox["c", "j", 
             RowBox[{"k", "+", "1"}]], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"5.6", ",", "6.4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubsuperscriptBox["c", 
             RowBox[{"j", "-", "1"}], "k"], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"4.6", ",", "5.4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubsuperscriptBox["c", 
             RowBox[{"j", "+", "1"}], "k"], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"6.6", ",", "5.4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"4", ",", "5"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"5", ",", "5"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"6", ",", "5"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"5", ",", "6"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "/@", "initial"}], ",", "\[IndentingNewLine]", 
         RowBox[{"GrayLevel", "[", "0.5", "]"}], ",", 
         RowBox[{"Point", "/@", "rightBoundary"}], ",", 
         RowBox[{"Point", "/@", "leftBoundary"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"GrayLevel", "[", "1", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
         RowBox[{"Point", "/@", "initial"}]}], "\[IndentingNewLine]", 
        "}"}]}]}], "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vert", ",", "horiz"}], "}"}], ",", "option3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SelectionMove", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", "Previous", ",", "Cell"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEndToken", "[", "\"\<OpenCloseGroup\>\"", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SelectionMove", "[", 
   RowBox[{
    RowBox[{"EvaluationNotebook", "[", "]"}], ",", "After", ",", "Cell"}], 
   "]"}], ";"}]}], "Input",
 CellLabel->
  "In[142]:=",ExpressionUUID->"69ffd886-978e-43cd-bbd7-0cf4562efb2f"],

Cell[BoxData[
 GraphicsBox[{{LineBox[{{1, 1}, {1, 10}}], LineBox[{{2, 1}, {2, 10}}], 
    LineBox[{{3, 1}, {3, 10}}], LineBox[{{4, 1}, {4, 10}}], 
    LineBox[{{5, 1}, {5, 10}}], LineBox[{{6, 1}, {6, 10}}], 
    LineBox[{{7, 1}, {7, 10}}], LineBox[{{8, 1}, {8, 10}}], 
    LineBox[{{9, 1}, {9, 10}}], LineBox[{{10, 1}, {10, 10}}]}, {
    LineBox[{{1, 1}, {10, 1}}], LineBox[{{1, 2}, {10, 2}}], 
    LineBox[{{1, 3}, {10, 3}}], LineBox[{{1, 4}, {10, 4}}], 
    LineBox[{{1, 5}, {10, 5}}], LineBox[{{1, 6}, {10, 6}}], 
    LineBox[{{1, 7}, {10, 7}}], LineBox[{{1, 8}, {10, 8}}], 
    LineBox[{{1, 9}, {10, 9}}], LineBox[{{1, 10}, {10, 10}}]}},
  AspectRatio->1,
  Epilog->{
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubsuperscriptBox["c", "j", "k"], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {5.5, 5.4}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubsuperscriptBox["c", "j", 
           RowBox[{"k", "+", "1"}]], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {5.6, 6.4}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubsuperscriptBox["c", 
           RowBox[{"j", "-", "1"}], "k"], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {4.6, 5.4}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubsuperscriptBox["c", 
           RowBox[{"j", "+", "1"}], "k"], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {6.6, 5.4}], 
    PointSize[0.02], 
    PointBox[{4, 5}], 
    PointBox[{5, 5}], 
    PointBox[{6, 5}], 
    PointBox[{5, 6}], 
    PointSize[0.03], {
     PointBox[{2, 1}], 
     PointBox[{3, 1}], 
     PointBox[{4, 1}], 
     PointBox[{5, 1}], 
     PointBox[{6, 1}], 
     PointBox[{7, 1}], 
     PointBox[{8, 1}], 
     PointBox[{9, 1}]}, 
    GrayLevel[0.5], {
     PointBox[{10, 1}], 
     PointBox[{10, 2}], 
     PointBox[{10, 3}], 
     PointBox[{10, 4}], 
     PointBox[{10, 5}], 
     PointBox[{10, 6}], 
     PointBox[{10, 7}], 
     PointBox[{10, 8}], 
     PointBox[{10, 9}], 
     PointBox[{10, 10}]}, {
     PointBox[{1, 1}], 
     PointBox[{1, 2}], 
     PointBox[{1, 3}], 
     PointBox[{1, 4}], 
     PointBox[{1, 5}], 
     PointBox[{1, 6}], 
     PointBox[{1, 7}], 
     PointBox[{1, 8}], 
     PointBox[{1, 9}], 
     PointBox[{1, 10}]}, 
    GrayLevel[1], 
    PointSize[0.02], {
     PointBox[{2, 1}], 
     PointBox[{3, 1}], 
     PointBox[{4, 1}], 
     PointBox[{5, 1}], 
     PointBox[{6, 1}], 
     PointBox[{7, 1}], 
     PointBox[{8, 1}], 
     PointBox[{9, 1}]}},
  ImagePadding->{{5, 5}, {5, 5}}]], "Output",
 CellLabel->"Out[149]=",ExpressionUUID->"f69b166c-3c66-4d7a-9693-c644fd7977a4"]
}, {2}]],

Cell[TextData[{
 StyleBox["Fig. ",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["Chapter"],
  FontWeight->"Bold"],
 StyleBox[".",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["FigureCaption"],
  FontWeight->"Bold"],
 "  Grid for finite differencing with boundary conditions ",
 StyleBox["\[FilledCircle]",
  FontSize->14,
  FontColor->GrayLevel[0.500008]],
 " and initial condition ",
 StyleBox["\[EmptyCircle]",
  FontSize->14],
 "."
}], "FigureCaption",
 CellTags->"fig3",ExpressionUUID->"8edc1939-f83d-4c96-b05b-7d003de6b25e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["Section"],
 " Explicit Solution with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Section",
 CellTags->"s3.5",ExpressionUUID->"fc523f7f-9141-46ce-9d72-16b252ffd846"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Procedural method"
}], "SubsectionOpener",
 CellTags->{
  "s3.5.1", "i:12"},ExpressionUUID->"71fed9ad-811e-4909-822f-b23b93e175f0"],

Cell[TextData[{
 "Procedural methods have a similar form to programming languages such as ",
 StyleBox["FORTRAN",
  FontSize->10],
 ". To perform a simple finite difference simulation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " we first create an ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "16a4cd6a-769b-4f1a-a6c9-2a1a7896df92"],
 ", ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "d2643111-7525-4bed-be80-2805cbe3ff72"],
 " grid to represent the concentration at discrete points along the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "ed2ff08c-c2a0-4845-baff-6417f69bf53e"],
 " and ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "233460ea-145f-4a6d-9b5a-0321f1e4d322"],
 " axes as shown in Fig. ",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["FigureCaption", "fig2"],
 ". Let ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "9fda8188-fe5f-4e12-b867-4bef89051004"],
 " be the number of subintervals along the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "111f3b30-6e07-4989-a2fe-df61426c3998"],
 " axis, and ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "60f675fc-7358-4964-8879-6c5bbb12ca37"],
 " be the number of subintervals along the ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "6cf4f387-ea80-42b7-a933-9c05dae822c7"],
 " axis. We\[CloseCurlyQuote]ll represent the dimensionless concentration ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], "j", "k"], TraditionalForm]],ExpressionUUID->
  "25e509d6-113a-41ef-b712-457a3f606a1e"],
 ", as ",
 StyleBox["c\[LeftDoubleBracket]j,k\[RightDoubleBracket]", "MB"],
 ". For simplicity in this chapter we\[CloseCurlyQuote]ll consider the case \
of a potential step to the limiting current region in which the initial \
condition is given by eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag18"],
 ") and the boundary conditions are given by eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag19"],
 ") and"
}], "Text",ExpressionUUID->"cc243e83-8c00-4183-9842-0ea7f7cb0a0c"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     StyleBox["c", "dv"], "1", "k"], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"2ccd4801-61a5-47ae-9dfd-c6203321715b"],
 "\tfor ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"k", ">", "1"}]}], TraditionalForm]],ExpressionUUID->
  "a6779480-b97b-4705-82a9-c2c5ce46263b"]
}], "EquationNumbered",ExpressionUUID->"12fd863a-7bf8-4dac-9c74-4962878e6a3e"],

Cell[TextData[{
 "We begin by using the ",
 Cell[BoxData[
  FormBox[
   ButtonBox["Table",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Table"], TraditionalForm]],ExpressionUUID->
  "89a5a95e-6cd1-479a-9c85-77d816f07757"],
 " function to create an ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "\[Times]", "m"}], TraditionalForm]],ExpressionUUID->
  "026d33a3-33ad-4fa8-96f9-8c51f71904a6"],
 " matrix, which for the finite difference method we",
 "\[CloseCurlyQuote]",
 "ll refer to as a grid. The term \[OpenCurlyQuote]mesh\[CloseCurlyQuote] is \
also frequently used in the literature instead of grid. The variables ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "0bde651d-f091-49e9-aa27-fb63b35c8065"],
 " and ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "9f4db752-fb49-4e68-ae6d-00c989b26e34"],
 " are defined as integers. By doing this if non integer values are \
inadvertently entered the calculation will not be attempted."
}], "Text",
 CellTags->"i:18",ExpressionUUID->"1db6969f-6cf9-4af3-8d1f-315f74a6c1fe"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "makeGrid", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"makeGrid", "[", 
   RowBox[{"m_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"j", ",", "k", ",", "c"}], "}"}], ",", "\n", "\t\t", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"1.", ",", 
        RowBox[{"{", "m", "}"}], ",", 
        RowBox[{"{", "n", "}"}]}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"define", " ", "initial", " ", "condition"}], "*)"}], "\n", 
     "\t\t", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "m"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{
        RowBox[{"c", "\[LeftDoubleBracket]", 
         RowBox[{"j", ",", "1"}], "\[RightDoubleBracket]"}], "=", "1."}]}], 
      "]"}], ";", "\n", "\t\t", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "2"}], ",", 
       RowBox[{"k", "\[LessEqual]", "n"}], ",", 
       RowBox[{"k", "++"}], ",", "\n", "\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"c", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "k"}], "\[RightDoubleBracket]"}], "=", "0."}], 
        ";", 
        RowBox[{"(*", 
         RowBox[{"boundary", " ", "condition"}], "*)"}], "\n", "\t\t\t\t", 
        RowBox[{
         RowBox[{"c", "\[LeftDoubleBracket]", 
          RowBox[{"m", ",", "k"}], "\[RightDoubleBracket]"}], "=", "1."}]}]}], 
      RowBox[{"(*", 
       RowBox[{"boundary", " ", "condition"}], "*)"}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "c"}]}], "]"}]}]}], "InputOnly",
 CellLabel->"In[38]:=",ExpressionUUID->"e280260b-2d4d-464d-a481-234754cc83d8"],

Cell[TextData[{
 "The values of the points on the grid are made using a ",
 Cell[BoxData[
  FormBox[
   ButtonBox["For",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/For"], TraditionalForm]],ExpressionUUID->
  "8f63008f-a839-424e-aedf-aa206ddcd33d"],
 " loop. For ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "5b11e546-40c8-4be1-9714-ea8a9e5b313b"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"t", "=", "0"}], ")"}], TraditionalForm]],ExpressionUUID->
  "fae7e4d5-6fcc-45e2-acad-85d707275d89"],
 ", all values of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],ExpressionUUID->
  "16a29f9d-7513-4c20-be4b-8b059fa5cabe"],
 ", i.e.",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"j", "=", "1"}]}], TraditionalForm]],ExpressionUUID->
  "7daa1759-7dcb-476e-ae93-0a117859c997"],
 " to ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "c30ee6e3-8e1e-427c-8279-b82fafd165e5"],
 ", are set equal to the initial value of one. Next the boundary conditions \
are introduced in which the points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"j", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "fec9dca0-9c81-4f22-b9d5-566931290c56"],
 ", i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", " ", "0"}], TraditionalForm]],ExpressionUUID->
  "d59f6300-4921-4a00-ad00-1669ce01b129"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "5a20bd65-ac71-46c1-8e62-cad38579d6d9"],
 " to ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "80df9783-ef94-495e-9875-0cb49a972df7"],
 ", i.e. all ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "c55fb835-4299-4415-a552-ffe26c1ba35a"],
 ", are set to the first boundary value, zero, and the points ",
 Cell[BoxData[
  FormBox[
   RowBox[{"j", "=", "m"}], TraditionalForm]],ExpressionUUID->
  "fab2b31a-5161-46b8-ae2f-0adaf7cc0ed3"],
 ", i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "\[Infinity]"}], TraditionalForm]],ExpressionUUID->
  "536dbbb0-9fdd-439a-b6b4-23b215b8360d"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "e15dace4-c2d6-4405-83f0-2fde3f01875b"],
 " to ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "7e5c794c-3ccc-4966-a4c1-b4d2db63f1a9"],
 ", are set to the second boundary value, one. The commands are put inside a ",
 Cell[BoxData[
  FormBox[
   ButtonBox["Module",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Module"], TraditionalForm]],ExpressionUUID->
  "a10bcfcb-4dca-418a-a616-a8a2cd5d9c69"],
 " which is a practice we",
 "\[CloseCurlyQuote]",
 "ll adopt regularly. Variables declared within ",
 StyleBox["Module", "MB"],
 " remain local. Before proceeding further we check that the grid will be \
formed as expected. A trial grid can be displayed in matrix form:"
}], "Text",
 CellTags->"i:19",ExpressionUUID->"e64c8ae7-9030-4b03-b483-14bade3e97ac"],

Cell[CellGroupData[{

Cell["\<\
makeGrid[5,5];
%//MatrixForm\
\>", "Input",
 CellLabel->"In[40]:=",ExpressionUUID->"853d49b9-640d-4ff1-8aaf-6f30bb936a9c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0.`", "0.`", "0.`", "0.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`"},
     {"1.`", "1.`", "1.`", "1.`", "1.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[41]//MatrixForm=",ExpressionUUID->"db41d762-ee82-40ae-90ec-\
f4d5e9045099"]
}, Open  ]],

Cell[TextData[{
 "We next write two methods to solve the grid based on eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag20"],
 "). Firstly we use a method where for each increment in time, ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "8598f285-eedc-4acf-baf9-775573a2a00a"],
 ", we calculate the concentration at each ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],ExpressionUUID->
  "41f437d7-588f-4827-8ec7-71eaba563c58"],
 " coordinate on the grid from the value at the previous time increment, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "-", "1"}], TraditionalForm]],ExpressionUUID->
  "ba54f303-20e8-4c25-8a4a-8b53db35d33c"],
 " (Fig. 3.",
 
 CounterBox["FigureCaption", "fig2"],
 "). In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " the symbol ",
 ButtonBox["D",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/D"],
 " ",
 "is reserved for partial differentiation so we have used the symbol \
\[DoubleStruckCapitalD] for the model diffusion coefficient and \
\[ScriptCapitalD] for the diffusion coefficient in all ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code."
}], "Text",
 CellTags->"i:6",ExpressionUUID->"625ee62a-aed1-4390-aaf1-5266bb6e2ea5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "explicitSolve", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"explicitSolve", "[", 
    RowBox[{"m_Integer", ",", "n_Integer", ",", "d_"}], "]"}], ":=", "\n", 
   "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"j", ",", "k", ",", "c", ",", 
       RowBox[{"\[DoubleStruckCapitalD]", "=", "d"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c", "=", 
       RowBox[{"makeGrid", "[", 
        RowBox[{"m", ",", "n"}], "]"}]}], ";", "\n", "\t\t", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "2"}], ",", 
        RowBox[{"k", "\[LessEqual]", "n"}], ",", 
        RowBox[{"k", "++"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "2"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"m", "-", "1"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"c", "\[LeftDoubleBracket]", 
             RowBox[{"j", ",", "k"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{"\[DoubleStruckCapitalD]", "*", 
              RowBox[{"c", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"j", "-", "1"}], ",", 
                RowBox[{"k", "-", "1"}]}], "\[RightDoubleBracket]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"2", "*", "\[DoubleStruckCapitalD]"}]}], ")"}], "*", 
              RowBox[{"c", "\[LeftDoubleBracket]", 
               RowBox[{"j", ",", 
                RowBox[{"k", "-", "1"}]}], "\[RightDoubleBracket]"}]}], "+", 
             RowBox[{"\[DoubleStruckCapitalD]", "*", 
              RowBox[{"c", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"j", "+", "1"}], ",", 
                RowBox[{"k", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}]}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "c"}]}], "]"}]}], ";"}]}], "InputOnly",
 CellLabel->"In[42]:=",ExpressionUUID->"5096a6e7-9125-4e8a-817b-fea1d8a494a9"],

Cell[TextData[{
 "The number of time increments, ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "4e054953-e5dd-45ec-9146-de5ed0d16ca2"],
 ", and the value of the model diffusion coefficient ",
 StyleBox["D", "dv"],
 " are entered and ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "9c178c7a-db4d-4602-9087-f7517a310eaa"],
 " is calculated. "
}], "Text",ExpressionUUID->"65e702bd-fbec-4476-9350-3e13ec6ea881"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "c", ",", "n", ",", "m", ",", "mat", ",", "\[DoubleStruckCapitalD]"}], 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckCapitalD]", "=", "0.35"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"model", " ", "diffusion", " ", "coefficient"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"m", "=", 
   RowBox[{"1", "+", 
    RowBox[{"Ceiling", "[", 
     RowBox[{"6", "*", 
      SqrtBox[
       RowBox[{"\[DoubleStruckCapitalD]", "*", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}]]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"makeGrid", "[", 
    RowBox[{"m", ",", "n"}], "]"}]}], ";"}]}], "InputOnly",
 CellLabel->"In[44]:=",ExpressionUUID->"a5dae234-1474-4c44-95b4-05a1fe84ef52"],

Cell[TextData[{
 "The function ",
 ButtonBox["Ceiling",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Ceiling"],
 " returns the next highest integer value. Next, a solution is obtained and \
plotted."
}], "Text",
 CellTags->"i:20",ExpressionUUID->"12756413-d306-40a8-8c5e-26b7b4aff15d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"explicitSolve", "[", 
    RowBox[{"m", ",", " ", "n", ",", "\[DoubleStruckCapitalD]"}], "]"}]}], 
  ";"}]], "InputOnly",
 CellLabel->"In[49]:=",ExpressionUUID->"3cc719ca-709e-4cc3-a47e-0b5abffee869"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"c", ",", 
   RowBox[{"AxesEdge", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2.2", ",", 
      RowBox[{"-", "1.2"}], ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[50]:=",ExpressionUUID->"594b5e9f-b774-466f-97fe-65a304ecbd9b"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
+Gf1g36xfdX16zmZuFT5G9tXmmTxvZLFti1sX2mSjPSsIasb2b7SJPVuUvmZ
b9m+0iQOf7fF/nrF9pUmCTods9y2hO0rTXJ54J6WEw/Zvur67zJsXDjkNttX
muSnp9nLExlsX2kSvt8vU7+TbF9pEuGxqv9M4tm+0iSRP6a8Dohh+0qTnFo4
SiN7HdtXmiRhmP6YJaEwb4U+pH5afAS8j05I3e6hvPFnZ5i3Rm8fIbmmBO7P
CqlX6NRsnjAO5iejpw56ZiQzDOapJ9/3k1mLz1PYoNc0TRqx/gvbV5rk6ujK
waOr2b7q+vq3RZjOL2D7qmt/0+fwkCyYt0PfVBmjNTAZ5qmf2iu5ft0umLdH
j677zrsAz+EKqZul/RpxehbMO6DPr+6dHI59SH3LTMEEOWOYd0Sfu2/an9ix
ME89XDSt9ZMMzDuhLzp+/uLE32xfaRLDLXOjgmqhx5zR5fzGrQkvgnnq/pL3
A9dlwbwL+uFt7y6sToJ56l+Pb88Ni4F5V3SvAytOTV0O89STrgZaOU+DeTd0
401fzI0dYJ56g88XRb4uzLujp954yldWgnnq25SXxo2UgnkP9L8nE6artjYz
fdU1P2TOLEPsTOoFtouCfeE5aBH1Tbaf6qLSoPc80fcte7xaFA/7qV8fvWzV
wE2wn/rMkZvVloXBfuoXVp1Oa8D+9EKPb/6lvswa9lPnT4/dOWgC7Kdudqwh
P38Y7Keue1fh8iFJ2O+N/jNATXrDJ+g36tdjZGM2lEMfUtf2+VV8+B70IXWH
+kFLitOgD33Qi9ROtY5MgP3UO7w/Fm3bDPupl6S8WTpwGeynLnFD1uJyMOz3
RT/zyH/HMnhfKKFuNz7mpKs+7Kf+TGL0Uztl2E99y9UC26nSsN8PvbVe1ngv
dCyh/svtcWltHfQhdSvPK2ZeJdCH1NN3F+56cxv60B89fHRldcw52E9dt7SM
+ByC/dTrvtnlmkbDfuorqo6EWOH7BwLQfd7vUZ8zDfZTL25ePuC0M+ynrnUr
alAfY9hPfV/JaLXN6rA/EF3mrJrpGDlwtiPYvmKdx+GyHC7H4QocrsThyhyu
wuGqHK7O4ZoczudwAbr96sIPv8X6ik9kf56e+0asr/jkQ4mMWUon21d8UrRS
9YVOJ9tXfDIgUGPlqg62r/hk9r0dj0La2b7iE2fFx/mVbWxf8cmB2OCw8j9s
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
ZfCczRz94dKD51TwnM0CfeXDuppGPGezRJcuG9w7GPuNoNe/bVReA/0mpJ78
+FuNeTPbV1pkj635jjNw/1RIXfftju/X8DkFa3QjucLli2rYvtIi+RnDKu9W
sn2lRVRWPpmR85Ltq67fF7kPydPwfqsNevjwBztT4bxOSD3t63H/vfi5Irbo
oqrUdeq5bF9pkV8NT07Puc72VdfXoXXDDQ+4PyukfmVC0ZUPZ9m+0iKChtjb
uslsX2mR3WsFg7QS2L7SIv9+10pU72X7SotoRb9uttnO9pUWmel003KOkO0r
LTL/womFVnDuh32lRdKnv3hbGcb2lRZZdiVt+CToQOwrLeJ2rke0bxDbV1pk
iHzlLmMPmHdBL86KPVpvC/PUG14rDgo2hXlX9DM5l8yOa8M89bg5hxdkqMG8
G3pOjuWLA9iH1Fvuh6Q7D4R5d/TwjctGlcPnugip//ikYmD2m+0rLVISIfVv
TTPbV1rEaZJb6P4atq+0yDuJk0tjStm+0iJ3SkbUh+SzfaVFiMK4QwrZbF91
vV7lXrPNvMT2VdfryZHJJ3RT2L7qmnfq4RIfx/aVFvkvY2BF/XbYT/34yYwS
pfWwn7qf9e7zFkthP/WWwp/PXPD+tTd6jaTOKQc/2E899W/eSj1H2E896sTj
7QPMYD/1HCtnhUot2O+D/mPKKveEMbCfeo77cE9XPLekrhBUqfcDOlNEvW3j
8Z77/7B9pUWah5fe0Whm+0qLxMY8nHOlmu2rrn+vWluVcQnbV12vA4XL+9+4
x/aVFjmvP7BIF+6bE+oXb+a3nsb+pH4rSnby8COwn7rd50HRW3fBfn/0EPuO
0G8bYD/1c9E+l6aGw37qJ8w1fjyAv19PRN37ZMjbif6wPwC9MLGX7GHoUkK9
14ulQ3uawX7q0ZJHNi3Wgv3Us9VcayqVYX8gemPz9EvOQ8DZn/9sX7HO43BZ
DpfjcAUOV+JwZQ5X4XBVDlfncE0O53O4gMO1OFybw3XQTzpMutwp1lfaZOdA
bZ8Osb7SJp0jdNb/FesrbfIpXlX2q1hfaZOkrxEmtWJ9pU2W9u7Y8lCsr7RJ
zbOdf46iG6ErR2/RmYFujL47KmCXNLoJOnnS7HIEO80U/Zz/g3Qeuhm6vFW5
nAd2mjl6q1uSVBh2mgX6utydflPwnM0SPULql+ow7DeCPves5sdEOGcTUlf1
+SL88JPtK21yrzhw9F/oNyH1/17+CSnCfrNGz2pZRKbB/VMhdeu5LvJp+JzC
ZHQDaZXYm01sX2mTvB3Cq1F4LmeDPv/ZqfLe0HVC6v1SnxycDF2HfdX1+35z
epEpPO8gpN65ecjhFjyvs0Mvv2vnEQz3YYXUn+5asHpzMdtX2qSXVkbewkds
X2mTpgUDZGXw80kc0PtdWhIQlsP2lTY5stnr5k7sPUf0XodOhoZeZvuq67/r
9d9smQtsX2mTWDeedDi8T09Ifef05QUJx9i+0iYhYz6u2H6I7auu30fD1XGW
cJ8X+6rr+/zsmOycbWxfaZOfkbkRvI1sX2mTTTX9w0fB56sIqZ/KeT9Jchnb
V12vD01PFl6dz/aVNpF5GHnKOITtK20S3ZwVHevP9pU22aKll3gLn/P1QG8r
ur4hG/qQUHfKcLh9wAz2UB/xOvS1rd5npq+0ycGQ4zNL8P2EnujCGfn5Rsqw
n/q/T0+j1w+F/dSHRjv0OiEN+6lvmzXiYqok7PdCL2v0f739N9tX2mSRf4+P
ni1sX2mT9MSWsR3v2L7SJqJrmY/3vGL7SpsIYg+o8Z6wfaVNJowVhszPY/uq
688pb8j5jBtsX2mT6wuTxtWnsX2lTVYfJb97prJ9pU20j9fxBx5m+0qbKJaG
Pe6zm+0rbVIy79G7lijY74ver3DAwvurYD/1Xs+TfHaGwn7qD6Q9Y21mwH7q
MrXRkp99Yb8fes2k4O074T44oV5t9KptpCXsp762d19+qh7sp75eesLr0Zqw
3x/9V2ld2V4l2E89tG/Ay7+ysJ965OGQ3VPgOW4R9dKiK5eu/GH7SpsEqw+q
k2ph+0qbrGyb8cSrlu0rbeJwqnng4ZdsX2mTAvPVFhUFbF9pE5c7K1qG5rJ9
BT/n2b5incfhshwux+EKHK7E4cocrsLhqhyuzuGaHM7ncAGHa3G4NofrcLgu
etLOB3WdYn2lQ05MHD6zU6yvdEj0v6g37WJ9pUP6zdwz769YX+mQp322Hv0m
1lc6RHNzRfZ7sb7SISRrzvFSsb7SIYWVyx5dE+srHXL55MQ1u9FN0YP58td9
0c3Q539KDe2Hbk7nqw4tOos9ZkE96uLWieiW6N/HXz5+GDuNoI/X33iuDjpN
SN2h8LtIBvvNCj21skRtMPSbkLog6JnzZzxns0Y/8aLtVTL2G3XXpyvS+Hj+
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
i/cDY9BHXSsNjjXOCYHcbkn6P0n4nAh5vavbJ/fHPiRfbijX9cY+jEWf9eZG
sRP2Iflyz6MH3mMfkp8+51mxH/uQfOCwnFPDcX4Yh36+67XOTfB8mbw2dL0q
Dc+XyZUVJa2+Mb5XUE8eIIs6tQnvH8ajLx9++H+W2I2mPz9N+8rULRm3ZtyG
cTvG7Rl3YNyRcSfGnRl3YdyVcTfG3Rn3YNyTcS/GvRn3YdyXcT/GZYzLGVeg
t55fZaav5DBw9T2D2FdyWJKSZBD7Sg4WsS9rxL6Sg83uXpViX8kho3dIqdhX
cmj65bICsa/kkHYv57TYV3JQ+E9bYxD6Sg7Drs0LMAh9JYcDD2adrRX6Sg59
lN+3qBX6Sg7nGoVZ1Ah9Jf172d5YUSX0lRyqh9mmVAh9JYf6b8cUfBD6Sg5J
obFD3wt9JQerpxOK3gh9JYei7St8ngt9JYdZ7bLbFgh9JYezfouG3xb6Sg6/
/+R36bLQV3LQbLFodULoK+nPa8rU1/uEvpJDcuecL9KFvpLDmoImmuVCX0l/
T2qe2E7E9f3QH/fOCsHvGujIXdq++1mO6wPR37w+scwG15OvcvQtfok9FoRu
G5vZ7xj2GLn7N9ohy3B9MPqQ681vRuB68mFjfg21wfUh6J65rab+i/1GPiN6
Y8087LdQ9IUzVy/xxPXkeQl3zudjv4WhJ9XWjp1sdCDv1WlqF3w/iY7c7Zeb
+381dp2ePKJN0ZEO2Hvh6Nlrrn5MM3YdkNu0CXehOR55wMi9lrOMXacnD2ta
FvcQz2cj0M+EPrzrZ3QghySr2Pl4bktekv1u1Rlj7+nJP8a8SKiH57mR6DaZ
ipnuxg4E8nsFVhfC8bkM8szRU+1GG+d+enJfz6mqH/H+XhS63cEi66nGDgRy
D9fvxv+A57zkswoXQ4KxA/Xkmd4zEhV4/huNriqV77HC81/ytCsJX13H81/y
8Ttsl/9k7EA9+azHriUa4zwQ+0r6+9DpX98CYwcC+dbRW0OmGs+FdeQwPs3d
AvuQfEJ11YW5eD8wFt1xrWv7cuP7XoC8rfKIY3/sQ/KxlwOuHTDOCfXkqlXD
u9bHPoxDr16eKuuBfUg+r3m3Nz9iH5L7BifHbsE+JN/m/m7K39iH8ehJPf0S
8J6h8HPStK9M3ZJxa8ZtGLdj3J5xB8YdGXdi3JlxF8ZdGXdj3J1xD8Y9Gfdi
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
N7DfyEuuTm28F/stAt1rRmr+Yuw38kzfmapE3L+OZ7f8HN9boifX7JvnQN9R
jUQfmNor5BT2G/nJ1W7JS7DfyC3vTY3rh31IfkH28Qk+J4t95Q/WDRuUHMN+
I1/lkB42Hud75BtXLSlwwD4kf9bEb855nO9Fo29zfWP5A8736vjhvJjm2Ifk
k7c/7bMT53vkMc3aHlNhH8aga9rHrr2A8z3yyU6T9kXh/T3y3WNiy/Jxvkf+
8ociTTSe/8ai72v8+eSLON8jf37r31lq7EPy+p/8tTvx/Jf8Qd74NCvswzj0
jO92zR+N57/ku9663M3B819yl4Mhy1thH5Kv/H3ZvAHYh/Hocd2G7t6M58Km
P99M+8rULRm3ZtyGcTvG7Rl3YNyRcSfGnRl3YdyVcTfG3Rn3YNyTcS/GvRn3
YdyXcT/GZYzLGVcwrmTcn3EV42r0M28MZvpKBdqhBjN9pQL1o2ozfaWCFsFl
ZvpKBa/U98z0lQrstqcbxL5SwZuUDgaxr1SwcbNDrdhXKjj7DVSLfaWCgYdK
Pol9pYKeI4e8F/tKBR8ejH8h9pX0+1y64Z7YV9L6xLwzYl+p4PamRbtofS/0
7A7TZ9F68g6b/+xO63ujnxgX8Y56jDw/PmM+9Vsf9LMb35ZTj5G75w9WU7/1
RT/xsUUEnYeSn0p40Jn6rR968tQfj9B5KHlIhx5ldB4aiJ4flnQR52w68ugj
6V50ny0IPeLeclvqN/KErP4j6PsFwei/ZtVrQf1GPtq7SzX1Wwj6zgfxdjR/
I0+1uhpE56eh6N++y55D99/IdwV/m3Za6CsVWM7xWHxU6CsV2J4odMoS+koF
9yOmxeFzDXry6TNjG/0i9JW0T5f2LRcIfaWC4o9nEybg/uQfx+0/NQj3J9dt
/atrP9w/At1dp5qBXQfko6HfUjvcn1yj26SoFvpKBfeaZv/vPvZbJPoIVU3F
Uew38nvFf55bh/1GHrjry8NjcX/yiD8WbeuF+0ehK/eOTW6D+5O3nT22/Bn2
G/mVeUltDmK/kRecHpo9E/stGr1Ri7LD3bEPyVdGvilvgPuT+0WnReRgv5HP
nXMuaxrO92LQIz4/UtoV+5DcJqxH1SPsN/KCwdd3r8D5HnlqvclvfLEPY9G3
6m+m38b5HvmwlLDdU3C+Rx608M2HVtiH5Ladxw/fifO9OPTU0thHcuxD8r3x
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
ryS/2LFS7CvJ5Q7vxb6SfOLCJ2JfSR6w7KLYV5L7nNhiEPpK8tO2sQahryRP
WPiwVugryXN+6Vgr9JXk3862qBH6SvJi2/gqoa8kbz7y5SehryT/zmJyudBX
kjs7pJcIffXfPgMMz4W+kjxqVNPHQl9JXjm+/Q2hryRPGj/9tNBXkp+Nku0V
+kryLe0D6L0cxr7678+rycjJtJ781jrfYFofil5wpSW9V01HPmCu813qsTD0
DVlDU9CBXOU53ZO6jvzf6fdzsNP05PP/OqSifgtH/8PqVRr1G3myts0T6jfy
hetTmlG/kW9pH9qczk8j0Ju6tnhO/UaeqfVeR/1Gbh/7b2t8/lRPXu9/GfH0
/GkkersE16F4rgrkJ5QzXOm5BvLU22N24VxOTz55x8zbOJcz9pXkN5493v/U
tK8kd/DSedJ3TsnHu5b1w/NWPXntypWf8LzV2FeSX9cN9sKuA/KEN+4l2HU6
8g/xszvjvE5P3n7/xhv0fEQMuvPIFS/x+1xA/mztt0Pw+6o68kPJNh5/mvaV
5Hd+PRiYYdpXkne4G/JHqmlfSd4ktTxglWlfSd7rwPrmi0z7SvLl7S1qp5n2
leQ7zxRZJpv2leSO4Red6L125C+e+fTGc1s9+Z4WC4Z3w/3j0bMHtZ5E36Ew
+XkizK9M3ZJxa8ZtGLdj3J5xB8YdGXdi3JlxF8ZdGXdj3J1xD8Y9Gfdi3Jtx
H8Z9GfdjXMa4nHEF40rG/RlXMa5mXMO4lnEw7zrG8Z9N15N/MtdXku80mOkr
yd/UmOkryWs/mOkryWMemekryS9vMYh9JbmqvkHsK8kPbKgR+0ryjb9Vin0l
ecezZWJfSb701nOxryS3Tbwp9pXkRS0PGoS+kvyVfJZB6CvJ3550Ngh9JfnT
8M21Ql9J3r8mr0boK8kLKrZXC30leVK9skqhryRPX5rySegryR88VJYLfSW5
R/mfJUJfSb72mzUvhL6SfGLutAKhryQ/u+lxvtBXks8F9/NCX0k+ZNAfh4W+
knxak4W/CX0lefTL8wtpfRi646qhw9CB/PqR1krah1y1e3IjdD35zmPVZ6jf
wtEDHj6jc1IgL0kI6Uj9Rn78n+ZHqN/IDzzN96d+i0C/HOG4i/qN/EhK11rq
N/LiMks59Ru547pZkdRvkei9RzsH41wOyK/s7t+B7sWRX1upuUj9Rm5jc6Av
vf8tCj3dZcQvOJcD8rwmp37HuZyOvOvV+gvweQc9+cDu7drT+0ai0R9fvD0B
uw7I3XNyZmLX6chnHHKTYdfpyfu1U2/ErsP5VTfIqF+4Bed1QF768n4APR9B
3urlsdn4fS49+YxTL/rR/bpY9BaK1M1nTftKcuX/iifj+0x05LLQv87h87B6
cqfgOytxjofzq26QfaHyVKZpX0m+pThjIL6/Tkc+oGNEDL7/RE/+vmvcNryP
h/OrbrAowwDYe8LPDdP5FdNXglszbsO4HeP2jDsw7si4E+POjLsw7sq4G+Pu
jHsw7sm4F+PejPsw7su4H+MyxuWMKxhXMu7PuIpxNeMaxrWMg3nXMW7sKmE9
4zi/6gY15vpK8kcGM30lucpgpq8k31htbn7VDS69N9NXkq++Y6avJI/caBD7
SvIxDQ1iX0neObdG7CvJ6/esEvvqv33mfTAzv5J64Nlrsa8kX171QOwryZta
5Yp9Jfmr45sMQl9JfnjJQIPQV5I//ay2Vugryac5JtcKffXff+ehqTVCX0le
cHhstdBXko/84WKl0FeS//R68SehryT3i6k7TyMf2zLhndBXkh9Vv34p9JXk
xVZ3i8T5VTeYb338rtBXkltO63hF6Cvdf30yO0foK8mzs3z+FPpK8vsvU9YL
fSV53m39DNo/HF3WujCB9idP7V3qSfuTV269VI/2J58V6lvnu+0R6F71z9F7
dIF8xeFGXanfyM8u7Psv9Ru5OuXsIOq3SPTrtmsfUL+RW11O60v34shPue1K
o34jT7GIvkv9FoX+yefrGuo38puLgz+j51LJw47aPsG5nJ68xbZp2+l7ptHo
55fEaLHrgLzhxsF/YtfpyPXzu5Ri1+nJpys7WdD3GmLQ611Y9xi7Dsithm5f
SN9xIC8aEfUWz2H15E92LP6S7tfF0vp9jarofh05+E765aFpX0m+cPLAApzj
6clHFnnep/PZOPSSPT3nYO8B+fnxt87Re07IZ71ttQ+fk9WTrz3TxBfPbXF+
Jf196HM8GOd7pj8fhPmVqVsybs24DeN2jNsz7sC4I+NOjDsz7sK4K+NujLsz
7sG4J+NejHsz7sO4L+N+jMsYlzOuYFzJuD/jKsbVjGsY1zIO5l3HuLGvhPWM
4z+bric3mOsrycvN9ZXkhw1m+kry7Fpz86vu8N8pmji/6g5z3pnpK8lb3jLT
V5KHpxrEvpJ8x1cGsa/++3Vb14p9JbnPV9ViX0m+fvYnM/Or7rDAs9TM/Ko7
tFr9VOwryZ/0uSn2leQ9K7LrrCffXruyzvpA9F3N6jynqSMvP15ep8eC0Gd3
GVen38jVIYfqzNOC0dNG768zTyPvPy6izv20EPRD3abUuZ9GHv68AT1HgPOr
7hCaf6nO957IBzXaUed9tmHo19rH0ZwNyI9u2FLnPbfkSXm+1G968h7fnqjT
b+HoFs5FJ4W+kjx6QZcDQl/9t89Ex3ShryR/eFC+lPaPQO/68GYy7U8euSky
hPYnH9akvBPtT76uWUmd94FEot+/PJK6Dsg/7/X9Euo38sUna7uj68lfb21c
Sv0WhT7IKukXdCDf8ffFb+keHXnf8tr92HV68mXj1rjR8w7R6F9M+nIN9h6Q
v39V+4ze60s+bOuezuh68scLfoyi+3Ux6OnV60bS+Sx5foRqMJ3Pkh92n62l
+R7593aj69F8Lxa9qPmHdJrvkU/vbOVI332o4z0XzsIO1JNHHet6kL4HEYc+
rmvuSbyPB+S7NJU7cO6nI++SPHYQ9SH5o7Kcp/T8bDx6u9SZGnoviunPAdP5
lalbMm7NuA3jdozbM+7AuCPjTow7M+7CuCvjboy7M+7BuCfjXox7M+7DuC/j
fozLGJczrmBcybg/4yrG1YxrGNcyDuZdxzjOr0zXM27sKmE94zi/Ml3POM6v
TNczjvMr0/WM4/zKdD3jOL8yXc84zq9M1zOO8yvT9Yzj/Mp0PeM4vzJdzzjO
r0zXM47zK9P1jOP8ynQ94zi/Ml3POM6vTBwY1zGuZxznV6b7M65jXM84zq9M
92dcx7iecZxfme7PuI5xPeM4vzLdn3Ed43rGcX5luj/jOsb1jOP8ynR/xnWM
6xnH+ZXp/ozrGNczjvMr0/0Z1zGuZxznV+T/B8Xk3Xo=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
Hhvr/HPuj4rlCDYcEssgTD3Iubg1wWPYNt5jGHZYLL+w6vBY7uDTTrE+K74H
DvU68iY6l7wjnItPx3kvuHKwa7OPo70v/tw/yZHv1eOdixnHeIz7OcFj+HGk
a3NvJ8XyC6tOieURVg2KtUfemxO9jryTnUveqc7FjjP8LDHpTEeMnOLnxbM5
N5ZBnLmzPI9bZzvi1qWx3MGSczzGmvO8jnNwcSynsOd8j+HchbFcw6eLHMm7
wPPMvRDr/eadvcQ1uN5NsbzAiatjeYRDV8SyDA+udMSzy2OZyNxl3i/9a7wO
q26MZQ11r/UY5l0fyy+susGRvOs8z9xVvg77uNn7wrnH/dlwpu+M5REO3RbL
Suy53RGTHoplCvbc4THW3OV1ePxAaNvGcuhuj2HevbH8wqr7HDHpHs8zd2ss
N7n2g67B9W7xfpl7wvvFm0djmcU5eMyR+3kklmvMPez90n/S67DkuVhOYc9T
HsO5Z2K5hk/POpL3tOeZ2yuWK7jzvGvwHuSJ3ifehddieYRDL8cyC1deccSV
92I5grWveow1r3sd13knljv49IbHMO+tWK5h2NuO5L3peeZeiuUd137XNbje
l7EcwYaPYp0nPJgcy1wM+9CR8/ZBLLuZe9/7pf+x1+HZF7Hcoe4nHsOzz2LZ
hGGfO5L3qeeZezHWGWKvX3lfuPJPrLPNmf4+lqcYxu9NmIVV3zri0++xHOF3
kO88xpofvA7Pfo3lDj796DE8+zmWTRj2iyN5P3meuW9iOc61f3MNrve198vc
v94v3vwVyzIM+9uR+/kz1ncGc394v/T/8zpsSxMZhD38C2jGcCtO5BQOJYki
eVGieeb4Mwz/rIV/1pslqsF7+Xn4+bDQJoY2fSJTsKpJ5BFOVIkMwqQ20RiG
TZXII+yZNpE7eNNNNM/c1InmsWeaRJG8TqJ6+FcnilxvukQ12McMifaCTzMm
ipz73okMwpteicZwYpZEY7i1T6Jrc83ZEnmEPbMn8gV7+oaf74/l06yJ1pHX
J1EueXMkysWnuRLl4tA8iezDkmUSnWfO8QKJ3MHReRPNY898iSI+LZ7IGpyY
P9EYaxZMtA7PFkvkDt4slGgMqxZJZBP2LJookrdwonnmZkr0PDC7X6IaXG/u
RHtn38sm2i/GLJXovGHD0oki97Nkou8z5pZItF/6yyVah2f9E7mDN8snGsOq
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
mZ4rn+tembzDsOMynUPO676ZbMKksZn8wpj9PDZ9aPt4DG8OzOQabo3P5BT2
HO96nOkDQpvBeQc5l7yDnYtnJziXMzrOtdnHhEx+YfyRPk94MDGTuRh2uCPn
7SjP49Yhrs36oz2GW8dkMgirDnVtvD/MkbqTnEvesc7lGe3p58qzO9H7xcsL
M51JDDg3kyk4cWomj/D1JOdi2Gkew7mTPYZnZ2SyDLfOymQQVo3xZ8V3wule
R96ZziXvbOdi1UXeC8ac4trs4zzvi999znfEsIudiz0XeIz7ucRjmHGOa3Nv
l2WyDLeuyGQQVu3tPfLeXOp15F3uXPKudC5WXZPp3cSSax3x8o08vKOhjQnt
zkym4MSNmTzCieuci2E3eYx3/JZMfmHV7ZlswpubPc/crZ7HpNscybve9bDw
Bkeud4drsI+7vBdsu9sRX+/PZBDe3OMxzusDHsOJmXJdm2s+lMkvrHokkzv4
9Fgmd/DpQa8j72Hnkveoc8l73Ln49GQmRzDyLX8enONnM7mDo095HquedsSq
VzNZgx/PeIw1z3kd5r2cySa8ed5j2PZiJssw6SVH8l7wPHP3+nng+iuuwfWe
8N7Z99veL8a8kckp3v03Hbmf1zOdQ+Ze837pv+N1+PFhJpvw5l2PYdsHoe2f
yaTJjuS953mcu8975LOc4hrY9pEjbv2d6exxRr/I5BEOfZrJLFz50mP8LvCZ
xzDm60yWYdX/MtmEN/+4Huf4K68j7xvnkvetczHsX+dyLj93bfbxfSazcP3X
TL5gwE+ZnMWtnx0x6TfPY9V3rs363z2GVX9mcgeffnBtjP/Rkbp/OJe8v5zL
M5o51/vOWfzP+8XIqXKdf859ncsRbEhyGYSp/I9PkItbaa4xbItyjWFYnssv
rCpzuYNPH/uz4nsgy7WOvCJXLnlVrlx8mjrXXnAlzlWbfTS59sWf+9tcke/V
aXLlYkY31xj3M22uMfzo5KrNvU2fyy+smjGXR1j1iffIezNdrnXkzZArl7xe
uXKxo3euZ4lJs+SKGDk01/Pi2cyeyyDO3Kw2FLdmyxVxa75c7mBJn1xjrJkj
1zrOwTy5nMKeOXON4dxcuVzDp7lzRfL65ppnbkCu95t3dt5cNbjeUrm8wIlF
cnmEQwvmsgwPFsoV8WyBXCYyN3+u/dJfNNc6rFoylzXUXSzXGOYtnssvrFoi
VySvX6555hbOdR32sXSufeHcerk+G870irk8wqHlclmJPcvnipi0Zi5TsGeF
XGOsWSnXOjxePfz8fiaH+ucaw7xVcvmFVavmipi0cq555pbN5SbXXiNXDa63
TK79Mrd+rv3izTq5zOIcrJsrcj9r53KNubVy7Zf+BrnWYcmmuZzCng1zjeHc
xrlcw6dNckXyNso1z9wvmVzBnc1y1eA9OCbX+8S7sE0uj3Boy1xm4cpWuSKu
DMrlCNZunWuMNdvmWsd1BuZyB5+2yzWGeTvkcg3DdswVyds+1zxzW+Tyjmvv
lKsG1xuZyxFs2NXnCQ92zmUuhu2SK3LehuSym7nBufZLfzevw7MRudyh7jCP
4dnwXDZh2B6O5O3ueeY2z3WG2Oso7wtXDs11tjnTY3N5imH83oRZWDXGEZ8O
yuUIv4Ps7THW7ON1eHZALnfwaZzH8Gy/XDZh2P6O5O3reeb2zOU41z7QNbje
aO+XucO8X7w5JJdlGDbBkfs5ONd3BnPjvV/6E70O247OZRD2HO4x3Doyl1M4
dJQjeUd4njn+XRp/v4e/TzTJNXgv+XdaRyT6d9tn5TIFq07K5RFOHJ/LIEw6
2WMYdmouj7DnjFzu4M0pnmfuNM9jz+mO5J3gevh3oiPXO9M12MfZ3gs+nePI
ub8gl0F4c67HcOJCj+HWH74217w4l0fYc2kuX7DnitBWy+XTRV5H3iXOJe8y
5+LTlc7Foatz2Ycl9+Q6z5zj63O5g6PXeB57rnXEp9tzWYMT13mMNTd4HZ7d
mssdvLnRY1h1cy6bsOcWR/Ju8jxz5/l5YPZtrsH1rvLe2fe93i/G3JXrvGHD
3Y7cz525vs+Yu8P7pX+f1+HZw7ncwZv7PYZVD+ayCXseciTvAc8zd773yGf5
iGtg26OO+PR+rnPI+Xs6l0F85z+Ryx0cesZjuPWkx3DruVweYc8LuXzBng9c
j3P/rNeR97xzyXvRufg02bmc76dcm328nMs47HwzlzsY81qu848Nrzvi01ue
x62XXJv1b3sMk97NZRDGvOLa+PeqI3XfcS557zmXZ/Rnrveds/ih94t/34d2
bGjHhfZNLiOw5JNcHuHQFOdiz6cew9qPPIZPn+eyDJO+zGUQxjzmz4rvrs+8
jrwvnEveV87Fqh+8F1z52LXZx/+8L3z61pHvzx+dixnfeYz7+clj+PG1a3Nv
v+TyC6t+y+URVj3uPfLe/Ox15P3qXPJ+dy52/OVniUl/O2Lk2oWeF8+G/8E3
DOLM/eN53PrXEbfKQu5gyX8eY01UaB3ngL/PhFPYExcaw7m0kGv4xN97IpKX
FJpnbslC7zfvLH9fihpcb8ZCXuDEVIU8wqGmkGV40BaKeFYXMpG5Tvj58lz9
qQutw6oZCllD3WkKjWHedIX8wqrpC0Xypi00z1y30HXYR69C+8K5BQt9Npzp
2Qp5hEO9C1mJPbMUipg0TyFTsGfWQmOs6VNoHR7PVcgaHJq90BjmzVnIL6zq
WyiSN0eheeZmLuQm1567UA2uN1Oh/TK3UKH94s38hcziHCxQKHI/8xVyjbl5
C+2X/sKF1mHJ4oWcwp5FCo3h3GKFXMOnfoUieYsWmmeOM8DvlfyZZolCNXgP
jvMY39nLF/IIh5YpZBauLFso4spqhRzB2uUKjbFmhULr+OdSqxRyB59WLDSG
ef0LuYZhKxeK5K1UaJ65pQt5x7VXLVSD621cyBFsWKfQecKDNQuZi2FrFYqc
tzUK2c3c6oX2S3/dQuvwbKNC7lB3vUJjeLZBIZswbMNCkbz1C80zt1ShM8Re
Nym0L1wZUuhsc6a3LOQphg0oZBZWbV4o4tOOhRzhd5AtCo2xZqtC6/Bs+0Lu
4NPWhcbwbNtCNmHYdoUiedsUmmdus0KOc+0dCtXgepsW2i9zOxfaL94MKmQZ
hg0uFLmfnQp9ZzA3sNB+6e9SaB227V7IIOwZWmgMt3Yr5BQODXMkb1fPM8c/
N+ff7/H3C0b473JiYZ8mnNM6nMnQDihkClaNKeQRTowuZBAm7e0xDNunkEfY
s18hd/BmrOeZG+d57NnXkbw9XQ//9nLkevu7Bvs40HvBp4McOfcTChmEN+M9
hhOHegy33vW1uebEQh5hzxGFfMGeowq5g0+HeR15hzuXvCOdS97RzsWhYwrZ
hyXnFjrPnOMTCrmDo8d6HnuOc8SnMwpZgxPHe4w1J3odnp1WyB28OcljWHVK
IZuw51RH8k72PHMH+3lg9umuwfUmee/s+zzvF2POLnTesOEcR+7nrELfZ8yd
6f3SP9/r8OySQu7gzQUew6qLCtmEPRc7kneh55k7xHvks7zUNbDtMkd8eqDQ
OeT8XVPIIL7zryzkDg5d6zHcuspjuHV9IY+w58ZCvmDPg67Hub/O68i7wbnk
3eRcfHrIuZzvq12bfdxSyDjsvKuQOxhze6Hzjw13OOLT3Z7HrZtdm/X3eAyT
7itkEMbc6tr4d5sjde91Lnn3O5dn9F6h952z+LD3i3+vhDYytFGhPV/ICCx5
vJBHOPSIc7HnCY9h7aMew6enClmGSc8UMghjLvdnxXfXk15H3tPOJe9Z52LV
q94Lrjzm2uzjBe+Lv1f+oiN/9/w152LGSx7DsNc9hh/PuTb39mYhv7Dq7UIe
YdUV3iPvzRteR95bziXvHedix53+3Phc3/dzxaf5Sj0vns1HhQzizE0uZChu
feiIW18VcgdLPnYu7/6nhSzDrc8ccehzR9z6whGTprge1/vSY9T92rXx7LdC
RmDD94UMwp7/FfILA751xLBvvI65T7wv9vSD1+HTr4V8oe6PHsO5nwuZhU+/
OJL3k+eZm77U2eM8/e59YdufhWzCwr8cMeZvR+z5xxGf/nXEp6yUL7iSl4o4
FJVyDZ/iUhGTklIRe9JSkfX/uR5+f+fnwfMqStXDpG6pM489VSmbeN87pSLv
VF0qYlJTKuLQH75X7rMsVY/1U5Wqh1tTl4o4NE2piFvTloqY1Jaqxz6mKzXG
M52h1HPFko1KvSu8F71LGYQ9vUo5hSUzlYpY0reUHfg6c6kx1sxSah3v/hyl
rMGkWUuN4VyfUpbh1uylInmzlZpnbsZS++Lac5aqwfUWK2UHHsxf6gxhwDyl
nMWteUtFztjcpbxmbq5S+6W/QKl1GLZoKWuou2CpMQxbuJRHuLVIqUjeQqXm
mfug0Jnm3PYrtS8sWbPUeeYcL1vKUNxaspRT+LRUqYhJq5Syg987lgk/v1xo
zXKl1mFY/1LWYNLypcYwbMVSHuHWSqUieSuUmmduiVJ2c+2VS9XgeouX2i9z
a5XaL06sXsos7m+NUpH7Wa3U9wRzq5baL/21S63Dsw1KeYRD65Qaw631ShmB
W+uXiuStW2qeuQ1LreNd3LjU+4h/i1Th+fM5hbZ9KVOwavNSHnH+Ni1lGSZt
UWoMw7Yq5RH2bFvKHbzZstQ8c1uXmseebUpF8jYrVQ//BpSKXG+7UjXYxw6l
9oJPO5aKnN3BpTzCoYGlxnBrSKkxTLqv1LW55i6lTOF/dH7XUh7h0LBSBmHP
zqXWkTe0VC55uzmXvN2di3N7lDIOkw4qdZ45x6NLGYQ9IzyPMSMdsWrfUo5g
xiiPsWZPr8OqfUoZhD17eQxv9i5lH1aNdSRvjOeZ26nU88Dvca7B9YZ77+x7
vPeLMQeUMgsbDnTkfvYv9T3B3H7eL/2DvQ7PJpZyB28O8RhWHVrKJuw5zJG8
CZ5nblCpPfJZHu4a2HaEIz5dVOoccv6OLWUQ3/NHl3IHh47zGG5N8hhunVDK
I+w5qZQv2HOx63Huj/c68k50LnknOxefLnEu5/sY12Yfp5YyDjvPCW3pUsac
Uer8Y8OZjvh0rudx6xTXZv15HsOkC0oZhDGnuTb+ne5I3fOdS96FzuUZ3V/q
fecsXur94t+tpc78JqHdWMoILLmylEc4dJlzsecqj2Ht5R7Dp2tKWYZJ15Uy
CGOO9GfFd9fVXkfetc4l73rnYtVt3guuXOHa7OMm7wurbnbk+/N252LGLR7j
fu7wGH7c4Nrc212l/MKqe0p5hFVHeY+8N3d6HXl3O5e8e52LHQ/4WWLSg44Y
WVV6XjybR0sZxJl7yPO49bAjbj1byh0secRjrHnM6zgH+ItT2PO4x3DuyVKu
4dNTjuQ94Xnmfin1fvPOPuMaXO+tUl7gxMulPMKhF0pZhgcvOuLZ86VMZO45
75f+K16HVW+Wsoa6r3oM814v5RdWveFI3mueZ+4lX4d9vO194dw3/mw405NL
eYRD75WyEnved8Skz0uZgj0feIw1H3odHn9ayhocmuIxzPu4lF9Y9YkjeR95
nrl3S7nJtT9zDa73jvfL3P+8X7z5qpRZnIOvHbmfL0u5xtwX3i/9b70OS34q
5RT2fOcxnPuhlGv49KMjed97njm+o/gdmd+tf3YN3gPOFt/tfGf/VcojHPq9
lFm48ocjrqSVHMHaPz3Gmr+97qzQ4kru4NO/oZ1dyjz+D1xwDcOiSpG8/zzP
3G+lvOPaSaUaXG+aSo5gQ6fSecKDopK5GFZWipy3vJLdzGWV9ku/rrQOz6au
5A51m0pjeNatZBOGTVUpktdWmmfu11JniL1OW2lfuDJPpbPNmZ6pkqcYNkMl
s7BqxkoRn+ao5Ai/g/SqNMaamSutw7M+ldzBp96VxvBs1ko2YdhslSJ5s1Sa
Z276So5z7dkr1eB601XaL3PzVtov3sxVyTIMm7tS5H76VvrOYG7OSvulP1+l
ddi2cCWDsGf+SmO4tWAlp3BooUqRvAUqzTPX7QYnQhsT2qKVjMOnfpVMxJil
KhmEDYtXGsOhJSpFrFqpkjt4tnSlXDxbtpJNOLRcpYg3y1eKmLRCpYhJS1aq
x/VWrDRG3f6VamPSepVcwI/VK7mDMatUOv/YsGqliE8rV1rH3DKV9sWe1qi0
Ds/WreQOddesNIZVa1eyCXvWqRTJW6vSPHPnV7o37mn9SvvCpA0rOYgrG1WK
eLNxpYhJm1SKmLRppYi1W1cyBXu2qRTxY/NKNuHQFpUi3mxZKWLSVpUi6zer
VA8LV6v0PHhe21aqx/fSoEoGYcn2lc4YHuxQKWLSjpUiJg2sFHFog0r3yn1u
V6ke64eEn/8p5dDOlSLe7FIpYtLQShGTdqpUj33s6jE8280Rk4Y5YuHISu7w
PT+8kjXYs4cjPh1a6axyRkd4jDWjvA7P9q7kDt6M9hhW7VXJJuwZ40jenp5n
7jDXxomxroFt4yq5iU/7VTrzeLC/IyYd4IhJBzri0D6uwfqDPIZnEyr5wv3s
69rUPbiSWfh0iCN5472OuQGVPn/em4neLyadXumcc6aPrmQQ9hxRyUe8OdIR
h06q5AjeHOUx1kzyOgw+oZIv2HOMx3DuuEpm4dPxjuQd63nmDve+uPaJrsH1
dvdnzmd8hveLPadWMmux0E5z5H5OqfRnZuZO9n7pn+l1GHNeJZs4t2d5DOfO
qeQXTpzrSN7ZnmfugkpnHbcudMSqixyx8GJH3LrEEYcudcSqyxyx6tpK1mDM
dY6YdGUl47DqKkd8utoRh65xZP3lrsdZv8KR9de7HnbeVskdvLmxklmc45sc
cetmR9y6xRG37q7kDt7c4Hqsv9318OYOR967Ox1x6y5H1t/qeuzjjUrnjXP2
piPn8r5KDuLf/Y649YAj3jzoiFsPOeLWU5XcwZunHfHm0Up+4c1jjvj3RGiD
K7n1pCPrH3Y9/LvH942vz7geVr1cyRdMeq6SWVj1vCPv7wuOWPWiI1bd63rc
57Oux/pXXA+rXnXEp9ccceh1R57dS67HProdvR+8F2/5WeLTX5XOD+fgnUrW
YNW7jrjyniNuve+IW59U8gWHPnXE1w8r+YVVUxyx5yNHfPrYkfUfuB7+TXZk
/Weuh6n/q+QRrnxRySxs+NIRn75yxKevHTHpx0q+4NDnrsf6b10Pk75zxJ7v
HfHpB0fWf+N67GOqjp4lZ/RtP0ue3S+VTMSYXx2x5zdHfPrdEZ/+cMRd/g8V
8QWHoo4iv0f87c8Hk/5xxJ5/HfHpP0fW/+l6fK4/+b6xM+6oHlZVHVmDDWlH
ZmFV1lHEqryjiFVFRxGrfnY97jPpqB7rOx3Vw5i6o4hVTUcRq9qOIu9i2VE9
9sGfVfhnLfwz4Kk7eq6Yd1n4eZXQVg1tho48wqFpO/ILb6brKOLWbB2Zgkkz
dpSLVTN15AvOzdxRxKfeHUV8mqWjiE/Td1SP683a0Rh1+3RUm3O/UEdGYMNc
HRmEPXN0dIaxas6OIlbN3tE65np1tC/2NHdH67BqwfDz45XqztPRGN7MF35+
pJJV83cUsWrejuaZO7ije+OeFu5oX5i3aEfe4dNiHUVc6ddRxKfFO4r4tERH
EZ+W78gXXFmho4jNS3fkC84t01HEp2U7ivi0XEeR9Ut2VA/n+nb0PHheK3ZU
D+NX78gXPOjfkVOcrZU7ivjEu0DEJ94JIj4t0tG9cp8rdVSP9Wt0VA9X1uwo
4tNaHUV8WrujiE+rdVSPfazT0RhWrdtRxLz1OoqYt3FHBmHPBh2ZhTEbdhSx
akhH55bzulFHY6zZpKN1WLVFRwZhz6YdjeHNgI7sw6rNO4rkbdbRPHM7d1Qb
A7bsqAZubd2RfRiwbUfnFp+26yji0/YdRXzaoaOIT1t1VIP1O3Y0hlWDO/KI
+9mmo9rU3akjd/g+GdRRJG9gR+uYW6qjz5/3ZpeO9ot540KbpqMzvXtHHuHQ
rh05iFu7OeLNXh2ZgiXDPMaa4V6HW6M78giH9vAYho3syB38G+VI3gjPMze0
o31x7T1dg+ut39Fnzme8r/eLPWM7+j7ArX0cuZ+9O/reZW6M90t/P6/DmPEd
2cS53d9jOHdgR37hxEGO5B3geeYO6eis49YER6w61BELD3PErYmOOHS4I1Yd
4YhVx3VkDcacENoCHZl0dEfGYdUkR3w6xhGHjnVk/ZGux1k/ypH1J7oedp7R
kTt4c3JHZnGOT3HErVMdces0R9w6tyN38OYk12P9ma6HN2c58t6d7Yhb5ziy
/nTXYx93dnTeOGd3OXIuL+jIQfy70BG3LnLEm4sdcesSR9y6uiN38OYaR7y5
vCO/8OYKR/y70hG3rnJk/aWuh3/n+b7x9VrXw6pbOvIFk67vyCysusGR9/dG
R6y6yRGrznc97vM612P9ra6HVbc54tPtjjh0hyPP7mbXYx/82Yt/bsQ/M7rb
zxKf3uvo/HAO7u3IGqy6zxFX7nfErQcccevxjnzBoScc8fXhjvzCqkccsedR
R3x6zJH1D7oe/j3kyPonXQ9TX+jII1x5uiOzsOEZR3x61hGfnnPEpFc78gWH
nnI91r/oepj0kiP2vOyIT684sv5512MfmMLvRPzec4+fJc/ujY5MxJg3HbHn
LUd8etsRn95xxN0pHfmCQx858nvE+/58MOkDR+yZ7IhPHzqy/l3X43N9zfeN
nR+7HlZ91ZE12PBpR2Zh1WeOWPW5I1Z94YhVr7se9/mJ67H+a9fDmG8csep/
jlj1rSNWfel67IO/M1UV+ruY33kew34M7fiO/Pu9I4Ow57+O7MCe3zpyirk/
O3IEz/7pyB28+bsjj+gPqsN3osf+cD3W/OV15P3ckY949osjLv7qyPX+dW32
kddyB2+iWi5wjrNaNjFX1rKD36PbWqZgUl3LHbypas1jEv/H79wftZpa86wp
al2HWp1auayfqpZrODRHrfPMOZ691jtKf5ZaRuDrdLU8wqGpa63Dm+lrjWHS
NLXGMGzGWqZg20y1PMKhwbWeJc97hlrryOtVK5e8mWvlYlVc69lg+bS1arOP
WWvtC+9nqxWxas5a94FDfWqNcT99a41hUu9atbm3uWuZgiXz1vIIh7q1njfP
aK5a68ibp1YuefPVysWqpNYe+Z5Ja0U+y/lrzWNYv1ru4M0atc4n53KxWjYx
t0QtOzBs4Vqu4dDStdzBmyVrzWPSWrXOMx6sWase/cVrXYdaS9XKZf3atXIx
Y5FatTFymVq1MWzlWu7gTf9aHtFfodZ5xq1Vas3jx6K1anAPq9cyiHtbtdY8
3xvL1qqNr8vVinizfK1I3dVq5bJ+SK13hHOzTfj5p47O2Vbh5x86Ousb1DII
ewbUsgMz1q/lFHMb1fIIP9apdd/Ytmktg7Bn41rzOLdArc+K76sFa0W+rzas
dR1qbVIrl/Vb19oL+1u3Vm2c26xWbfa0XS0X8GCLWmZ9H9q2te6JuR1q2YRb
69WqwT3sVMspvNmx1jwObV7rXqm1UK098q5sX+s61BpYK5f1K9b63Pie2bnW
c8XFa2u9Ezyb0bWMwJjdap093utdauVizDCP8Y4Pr2UWno2sZRYm7e555vbw
PA6NcCRvaK16+LerI9cb5RrsY0/vBc/2csTCfWoZhDdjPMZ5HecxnDi71nvP
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
w4pWuZzL712bffzRyCxc/6+RLxjwdyNncesfR0zqaTWPVb+7NuujVmNYlbRy
B5/+dG2M/8uRunGrXPLSVrk8o76t3nfOYtlqvxg5U6vzz7mfvpUj2NC0MghT
q1a5uNW2GsO2TqsxDJuqlV9YNU0rd/DpG39WfA90W60jb+pWueRN2yoXn2Zu
tRdcqVvVZh8ztNoXf+6fsVXke7V3q1zM6NVqjPuZpdUYfkzXqjb3Nlsrv7Bq
9lYeYdX/vEfem1lbrSOvT6tc8uZolYsdc7V6lpg0d6uIkaNaPS+ezfytDOLM
zWNDcWveVhG3+rVyB0vmazXGmgVareMcLNrKKexZsNUYzi3cyjV8WqRVJG+h
VvPMbd/q/eadXaxVDa7Xv5UXOLFMK49waMlWluHBUq0ini3RykTmFm+1X/rL
tlqHVSu1soa6y7Uaw7wVWvmFVSu2iuQt32qeuaVbXYd9rNxqXzg3oNVnw5le
s5VHOLRaKyuxZ/VWEZM2amUK9qzRaow1a7Vah8cbtLIGh9ZuNYZ567byC6vW
Dz9/2ihvnVbzzK3ayk2uvWGrGlxvlVb7ZW7zVvvFm01bmcU52KxV5H42aeUa
cxu32i/9LVqtw5JtWzmFPVu2GsO5rVu5hk/btIrkbdVqnrl/G7mCO9u1qsF7
cGqr94l3YXArj3BoYCuzcGWnVhFXdm/lCNYOajXGmiGt1nGd3Vq5g087txrD
vKGtXMOwXR3J26XVPHM7tvKOaw9zDa43rpUj2DDa5wkPRrQyF8NGOnLe9mhl
N3PDvV/6e3odnu3Tyh3q7uUxPNu7lU0YNtaRvDGeZ26HVmeIve7rfeHKMa3O
Nmd6fCtPMYzfmzALqw50xKcjWjnC7yAHeYw1B3sdnk1s5Q4+HeIxPDu0lU0Y
dpgjeRM8z9z+rRzn2oe7Btfbz/tl7ljvF2+ObmUZhk1y5H6OavWdwdyR3i/9
47wO205uZRD2HO8x3DqxlVM4dJIjeSd4njn+XRT//py/Q3SKa/Be8u+0+Hfp
/Lvti1uZglVnt/IIJ85oZRAmneMxDDuvlUfYc2Erd/DmXM8zd77nsecCR/LO
dD38O8uR613kGuzjEu8Fny515Nxf2cogvLnMYzhxlcdwK+7q2lzzmlYeYc91
rXzBnhtbuYNPV3sdedc6l7wbQlvPeTc5F4duaWUfljza6jxzju9o5Q6O3up5
7LnNEZ8eaGUNTtzuMdbc6XV4dl8rd/DmLo9h1T2tbMKeex3Ju9vzzF3u54HZ
97sG17vZe2ffj3m/GPNwq/OGDY84cj8Ptfo+Y+5B75f+416HZ8+0cgdvnvAY
Vj3VyibsedqRvCc9z9wV3iOf5bOugW3POeLTZ63OIefvlVYG8Z3/Yit3cOhV
j+HWSx7DrddbeYQ9b7byBXs+dz3O/WteR94bziXvLefi0xfO5Xy/7Nrs451W
xmHnh63cwZj3W51/bPjAEZ+meB633nZt1n/kMUz6pJVBGPOua+Pfe47U/di5
5H3qXJ5R0tX7zln80vvFvz9COy2000P7pZURWPK/Vh7h0FfOxZ5vPYa1X3sM
n75vZRkm/djKIIx53p8V313feR15PziXvJ+ci1V/ei+48o1rs49fvS98+s2R
78+/nIsZv3uM+/nbY/jxs2tzb/+28gurerryCKte8B55b/7xOvL+cy55UVe5
2JF29SwxKesqYuQmXT0vnk3VlUGcubyredwquoq4NW34+fpWlpRdjbGm09U6
zsFUXTmFPXVXYzjXduUaPvHffhLJa7qaZ26lrt5v3tmpu6qBc7N35QVOzNSV
Rzg0Q1eW4cGMXUU8m74rE5mbrqv90p+5q3VY1acra6jbu6sxzJu1K7+warau
InmzdDXPXK+ursM+5uhqXzi3ZFefDWd63q48wqG5urISe+buKmLSol2Zgj3z
dDXGmvm6WofHC3dlDQ7N39UY5i3YlV9YtVBXkbwFuppnrm9XbnLtRbqqwfXm
7Gq/zC3V1X7xZvGuzOIcLNFV5H76deUac4t1tV/6S3e1DktW6Mop7FmmqzGc
W64r1/Bp+a4iect2Nc8cZ4DfK/kzzYpd1eA9ON1jfGev3pVHOLRKV2bhyqpd
RVxZvytHsHa1rsZYs0ZX6/jnUut25Q4+rdnVGOat3ZVrGLZOV5G8tbqaZ27l
rrzj2ut1VYPrbd2VI9iwaVfnCQ826spcDNu4q8h527Aru5nboKv90t+sq3V4
tlVX7lB3QFdjeLZFVzZh2JZdRfI272qeuf5dnSH2uk1X+8KVPbo625zpgV15
imHbd2UWVu3QVcSnXbtyhN9BduxqjDU7dbUOz3bpyh18GtTVGJ4N6comDNu5
q0je4K7mmduuK8e59tCuanC9bbvaL3MjvF+82b0ryzBsuCP3M6yr7wzmdvN+
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
uLO3+6XXUQuTxnpuOt/HvrG8G+1r4NG40PaJ5c6+7k/tMdbz/cf7wnuAQQd6
35zh40M7LpY1E0I7JJYv40M7KJY3B7uPH0eHdlQskw7xHFYd6vW4cmRoR8Ry
7TDP4dHhoU2M5c4R7vfxGHm9fE3219fXoRbfH3y2fPZYc4L3jVPHhnZMLKeO
c38ej02K5eIk7xtTTvR6DOK8nhrLm5M8hwunhHZyLCdOdX9hj5GHU2fEOvPY
dKb7WHWW+zh1tvu4c477OHSu+9h0nvuYcmlol8Qy5jL3senC0C6I5dFF7uPO
xe739zr6nO3zXXd5r6OPbZe7Lr5cF9q1sc7tlaFdEescX+U+Tl3tPk5d4z6+
3BzaTbGMu8J18eV61+U9u8F93rsb3d/A6+iv7etTl3P1QmjPxzpnL7qPd7eF
dmssp253H1/ucB9v7nQfp+5yH18eCu3BWL487D6+3BvaPbG8uc99nHogtPtj
OfWg+3h3t+vi6S2+f2x6xHVx5enQnopl02OhPRrrfX3cfd7fJ9zHpifd39j3
R92BXkddbHrGdfHoWfdx5zn3h/mZ0d/Z16cu70GeBLcSefSSnynv/U+h/RjL
mFdCezmWI6+6jyuvuY9Tr7uPK++F9m4sh953H5veCu3NWNa87T72vOP+OK+j
j3dvuO4Yr6OPoR+4Lo58GtonsSz4MLTJsWyY4j4efeQ+Bn3sPq58FdqXsYyb
7LoY9JnrYs3n7mPPF+4f7nX0D/H1qcvZKhI90xF+ZjxTTPlfaN/EMuZb97Hn
O/fx6Hv38ekH93Hl99B+i+XQH+5j0M/+nLDmF/ex51f3T/E6+sf786QuVn7t
+8emP10XCyL+RXQim/4O7a9YNv3jPjb96z42/ef+Ub4/6p7hddTFlDhRXYxJ
EvWxKU3UxybeQfoYx/Wpe1iIn4f2WSLjykTPd9nQziM3kTttiE0iXzohVom8
qRP1sWSGEKdPZFM30RpcmTrEqRJ5NE2iPh5Nm6iPR9Ml6uMd16EuNlGPOc75
jImugQVzhdg3kTWzhNg70dmdKcReiWyaOVGf88wY6zGOvbA/bJo10Xqsod6c
iXyZLdEcNs0eYp9ENs2RqI9DjM3mexgX2j6JrJo70f7waN4Q50nkyHyJ+rgy
f6I+Hi2QqI9HCybq48jiIfZL5MoSifq4skiICyfyaNFEfTxaLFEfj1hHH9cW
SlQXo3lOPBdMXzJRXc7/CiEun+gsLR3iUonO1jKJ+njEO0Efj5bzO4Lj3B/3
jGusoy6OrJioLq6slKiPR/0T9fFo5UR9XOP61MWmVRLNYdWqifoYt1qiPtas
HeJaiUxZI8TVExmzZqI+53O7ELdN5BS5zGHTOonWY82GIW6QyJd1E81h0/oh
rpfIJubp4xBj5HHmt090DZzaKFEtzvwmIW6c6LxuFuKmiTwakKiPR5sn6uPR
Fon6mMc6amHTlonmcIf72CbR+ace18CbrUPcKpFTzNPHIMZYz/cQ7wvvAVbt
kGjfnOFRoY1M5M7gEAclcmpgiDsm8mWnRH3s2D20YYnsIZc5nBqSaD3u7Bba
ronM2jnRHN4MDW2XRE7t6j4GMUYe5nJN9pf4OtTie4jPls8ea0Z73zg1IrQ9
Erk10v3cY8MTmTfc+8aUPb0egzivYxN5s5fncGHv0MYkcmKs+63HyMOpfROd
eWzaz32s2t99nDrAfdw50H0cOsh9bBrvPqYcHtrERAYdGdoRiWyaENohiTw6
1H3cOcz9Pl5Hn7N9sOv29jr62HaU6+LLCaEdn+jcTgrt6ETn+Bj3cepY93Hq
OPfx5dTQTklk3NGuiy8nui7v2Unu896d7P4iXkd/fl+fupyrG0O7IdE5u8l9
vDsjtNMTOXWm+/hylvt4c7b7OHWO+/hycWgXJfLlEvfx5fxE3214c4H7OHWh
+yt6HX28O9d18fQ03z82Xeq6uHJNaFcnsuny0C5L9L5e4T7v75XuY9NV7vfz
/VF3Fa+jLjZd67p4dJ37uHO9++v5mdFf09enLu/CF4m+1/HoZj9T3vvXQns1
kTG3hnZLIkducx9Xbncfp+5wH1fuD+2+RA494D423R3aXYmsucd97LnX/a29
jj7e3em6m3sdfQx90HVx5InQHk9kwcOhPZTIhkfcx6NH3cegx9zHlWdDeyaR
cQ+5LgY96bpY85T72PO0+0O9jv4gX5+6/DkNKzFmIz8znimmvBDa84mMedF9
7HnJfTx62X18esV9XHk7tLcSOfSO+xj0uj8nrHnDfex50/29vY7+KH+e1MXK
53z/2PSu62LBR6FNSWTT+6G9l8imD9zHpsnuY9OH7g/z/VF3X6+jLqZ87LoY
84n72PSp+9j0mfsH+frU/b+WzjJsq2rrwkfZHQ82BnYiioGo2NiJioXdCAgq
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
W6Ti12apcrxzAyJunuodJI+HR4wxDyayP/vBrK1TnY9nPiQ0OBWDdoi4fSpm
bRtxYCrWbJfKw5E9Iu6eikPMJQezdkxVD4N2i7hrKn7tlCoHe3aJuHMqZpHH
wyPGmAd/2XObVPxiH9aCtYxxbrgz1OeGU3uFBvndHWw/ncf2TMU4IueGTXu7
HsbsF9o3FbeGOQeb9gkNT8Wgfe0LjzGPf0bAd2u0GTbCa8Gm/UMjUzHo4NBB
qXgzKnRAKqYcaE9/nhQ6MRVvDnIOZh0aOiQVa8aEjkjFr8OcgzuHh0an4tAR
9t08xjwYcLL3gFtHei14OjZ0VCoWHB0al4oNx9jDo2PtYdBx9t1dx1rw6Xjn
FvV1nJCKfeO8B2yaEBqfikEn2C/kMepb3zPuIzya6HPTzxeGLkjFndNCp6Zi
zeTQpFTsOcUelpwTOjsVn051Dm6d7noYc1ZoairGTXEONp0ZOiMVg6baL+sx
5vX0npxvee/DWl39bHn2cOcinxsunB86LxUnLrDv67FzUzHyXJ8bNl3sehjD
7y6Xp+LWJc7BpstCl6Zi0OX2a3iMebDqqlS//8Cjq+3h0zX2cOeG0PWpWHOt
c7DnOntYckfo9lTsuNE18Ojm0E2pGHSLPay51R723Ga/ofdh3QFejxw8u9N7
wIJHQg+nYs19oXtT9fzdobtSMeAe+608Rv0mPgvng0f3u35nrzctFasecA4e
PRR6MBV3ptnv4LEHfA1zZNFnmVj1qM8Hkx4PPZaKKU/Yw5gn7WHPU/bw6Gl7
OPJS6MVUXHnZHh49F3o2FYOet4c1L9gPdx0ezj3jdQf6PnFfYNArXheWvB16
K1VvvRZ6NdU7+ro97+wb9vDoTfvdfH1c8wjXsS48ejf0TioGvWcPa963hz0f
2B/o/VkXNn3oHKz6yB4efWwPd74IfZ6KMZ+GPknFkc/s6cl/Qn+nYsznzsGp
L10PX74LfZuKWV85B2u+CX2dij3f2h/nMebR9/96D1j1vdeCoT+GfkjV/z+H
fkrFg1/sYdCv9nDnN/sTXcdaMOl3587wdfyVinc/eQ949Gfoj1Tc+cv+NI9R
z/eP94X3AAb953PTwzPGOztDJtYkEbtk4st0/IcoMvFm+kwefjQR60xMYi45
WJVmqocrVcQyE9eyTDl4VETMM3GHPB5+McY8GMmenA9OsQ9rHelny7OHNTNl
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
cOeE0IRcfXtO6Oxc7ybxrFxsOCM0JRd3JoZOzsWXE10PgyY5B3tOcg6WnBKa
nIs7p4VO9X19x/d0Ceep7+U8NbDpdNfAtiN8j3p4f/aA72f6fLBpqj3cOdfX
08fXQQ4GnefcMr4m9oAdF4TOz8Wdi0IX5mL9BN/3lZynfhXnqYFNF7uG78oY
n3UuP0M8zLrE8+DLNaGrc/Xh/aH7cjGIsatyMeO60LW5uHNF6PJcfLkxdEMu
Bl3vefTxg6EHcvXzA153fa/Bfhu5jhoY8ZBrYNuV3gNm3eQ94MtdoTtzcYd4
R64+vi10ay5e3O156/jsrLWtr+neXFy5x/Pg4s3eA77cYr+Z18MPdB019Mm7
ud4V+url0Euh4aEXQy/kYs1joUdzMeLZ0DO5eMTYI7l48UTo8Vwsm+brhzVP
h57KxZUnPY/vzKV+ZnyfLrPf3Wuw3yDXUbOPz8WZ4NrD3mOwz8Ie9P+roVdy
cer50HO5GPGKrw0mvR56LRcjH/Fa8AX2vJmLO2943lCvwTXzzbvcZx3pNdhv
lOuo4btyu58fHHrP95d7sWgRPCjEhq9CX+Z6jz8KfZiLKe+7hnf6Y+dg1aeh
T3Ix6IvQ57ne/U88D+585nnjnMfDqg+87uHeB3+M92ct+PW1zwTPvrGHLz+E
vs/Vn986Bxd+dI73fda4plkKsenn0E+5ePNr6JdcvPk99Fsurvzk+knOU3OK
89TAoz9cAz/+Cv3pe9/EPnUh3vwX+jcXm/72PNj0jz28yGNuVohN/zoHd/kP
P1MPX9L430khlk1XKAeDukScvhCTyOPhGmPMg1vf+b7AKvZhrdN9Xq6Bnm8L
nZv3u4pYFnqHuA48PcBYUYhfRM5Nn3cK1cOgmSPOVIgBXQvl4M6MEWcoxCHy
eDjHGPNO8DPkrLCJZ8VaMGi2Qs8PliwYcYFC7+5cEecsxI7ZI3Yr9F53L5SD
I3MUysGteSLOXYhB80WctxCDqGMPuEaeelhGnhoYNH+hGnp4mYhLF2IV+7MH
nF2o0Png7sKFPH3bI+JihThLb5GjpxcvlINzXBN7wJQlIvYsxKBeEZcsxBj2
XKoQz8hTD4fIUwODyFMDd9iTfoYLvSMuW6hv1464ViGWrBFx9ULcWjHiCoVY
slyhGnjUt1AOzi4fsU8hpqwccaVCDFo14iqch/OWcZ5SPCNPPRwiTw0MWq1Q
DT2/TqEzwU32Zw9+JuhX6Hxwf81CHi6sW6gGZnEd5GDGeoVycI5rYg+4s0HE
9QtxZ6OIGxbiMfeDZwm/yFMPq8hTA5s2LlTDz9+8H7xfcGuTQjnY1L+Qhw07
RNy+0Hu8JXWFOLV5xM0KveNbFcrBl20ibl2IMdtF3LYQsxhjHhwaWGgeDCKP
h3EDCq1Lb7MPHjaxP2vBph0LnYk+36mQhy+7Rdy1EAN2LpSDPbsXyrHHvbz7
hVizZ2iPQlzZKzSoEG+GhAYX4hR56qdznpouzlMDd4a6BnYMC+1dqD8PD40u
xJv9QvsWYsxwz4M9+9jDhYNDBxVi077Owa8RrocvB4ZGFWLTSOdgzQGh/Qux
Z5R9x2PMg9G7FLovM3kf1sp8Xq6Bnj/C54Ydh4UOLcSS0fazeuyQQjw7xOeG
GWNcD2OODo0rxKwjnYNDY0NHFWLQOPvuHmMe3w+eIWeFTcd4LThyrD09d2Ho
gkIsODF0QiE2jQ8dX4gTJzkHmyY4B18mhk4uxJfJoUmF+vYir9vDeep7Ok8N
TDrFNfThxa5ZxPuzB6w6LXRqoZ4/O3RWob48IzSlEIPOtIcN53heL9exB2w6
1zl4c37ovEK8PN17LOP18H2dp2Zl3xtq+NmCHt20ED8u8bnxt4RuLsSCG0LX
F2LPFaHLC3HqUtfAsiudg1mXOQebrg5dVYg314auKcT+4/zM1nGe+vWcpwYe
Xecaznirz7Sm92cPeHSjzwePbrKHEbe5pr+vgxy8uN25DX1N7AGb7gzdUYhD
d4fuKvRtO95n3cJ56rdynho4dY9rYNV9hTgCkx4I3e97UcX3oSzFhadDTxXq
t4dD0wox60HX8H4/4hz8esg5OPVY6NFC7Hmi0PdnO+/D3rs6T/3uzlMDm550
DQx4M/RGIQ5O8x5w6xmfD2Y9aw+DXgy9UIgFzzkHg15ybpCviT3g0Suhlwvx
5bXQq4W4w56vF2LYy64f4Tw1+ztPDex53vvBpLdDb/l5fB36qhAnPg99VohB
74feK8Sdd1wDnz5wDia96xw8+ij0YSG+fBL6uNDP4PQA787hzlM/xnlqYNKn
ruEd+cZnOtT7swds+sLng01f2sOab11zrK+DHIz4zrmxvib2gFM/hL4vxJ6f
Qj8WYvRbfpYnOE/9Sc5TA5t+dg3Pvlepn1eG+Xlyf2HWr6FfCvXfjJGfoRSD
/g79VYgpf4R+D00N/Rv6pxBf/nQOTvGXuvxXiDXTx/+erlQPz1RqXXj3n+vh
F3lq4FOXUjX05MylaqZ4f/aAW2mMJaX6vy7VVzCriJiX4hF9hocTTal58I46
9oBTbakc7OkasVOK71mpPWA36+FhE3lqYBP3hppJvmfcX1gyS6lz04sLRVyw
FBfmizhvKQ7NHrFbKWbNWqoGrs1RKge/ZiuVg1NzRZyzFHvmjti91DfgNz8z
GEeeethEnhrYNE+pGpiycKkzwUH2Zw+4NX+p88GsBUp5WLNIqRqYwnWQgxGL
lsrBP66JPeBUj4iLlWJPz4iLl/pe/e6zwhjy1MMm8tTAJn52pgZ2LFXqHYUl
S5fyv4a2r4JzlbiwSviVS3FhuYi9SzFrmVI1vNN9SuVg0woRly/Fl5Ui9i31
7jPGPBi0Yql5MIk8HvYtW2pdeMc+eFjF/qwFq1YtdSbYtlopD1/WjNivVH+u
XioHF9YqlWOPc0PnlGLTOhHXLsWb9SKuW4o3G0RcvxRXyFMPj8hTA4/IUwOP
NixVAz82jrhRqeewY8QdSvFms4iblmLTJqXmwab+pTy8GBhxm1JsYi45GLd5
qXr4snXErUqxbECpHAzaMuIWpZhEHg/XGGMe3Fqj1H2BVezDWvCO83INMGWn
UufmXd8+4nal3ieuA0//MbZtqT4kcm54sXOpeviyZ2iPUizZpVQOBu0ecbdS
TCKPh2uM7Vrq+8Ez5KywapDXglN72dNzR4WOLMWd4aFhpTgyNDSkFJP2cQ6m
7O0cbNovtG8pvowMjSjVt2O9buU89Y3z1MCk/V1DH45zTe792QNWjQodUKrn
DwsdWopTB4cOKsWgQ+xhw2jP6+o69oBNhzsHb8aEjijF9AO9x0xeDz+H89TM
5XtDDb11Xqn3Hn4c7XPT56eFTi3FgkmhiaXYc3zouFKcOsY1sGy8czDrWOdg
0wmhCaV4c1LoxFLcH+xntrDz1C/qPDXw6GTXwJHTfaYFvD97wKrJPh/f0VPs
YcQU1/TydZCDF2c4t7iviT1g09TQmaU4dHborFLfqCE+a2/nqe/jPDVw6hzX
wKDzfU9h0gX23IsvQ1+U6rFLQheX4tSFngenLrKHHdeEri7FqYud472/1PWw
5qrQlaV64jLn4NEVoctL8elK+zU9xjze0ddCr5bi1tVeCy7cGbqjFHduCt1Y
qv+vD11Xigc32G/gsWtLMe9anxs23ez6Lbze7aW4dYtzsOm20K2lGHS7/WYe
Y97G3p/94NZdPh/P5NnQM6W480Do/lKsuTd0Tyn23GcPS54IPV6KT/c7B7ce
dD2MeSz0aCnGPeQcbHo4NK0Ug8g/Uopl0zxvG+95dylmPe61tvYY54Yvz/nc
vPdPh54q9W49Yz/IY0+W4tqTPjfseN71sOaV0MuluPKCc/DopdCLpfj0sv1w
jzGPn2PgDXwZ4ef/ip991/iedypx553Q26U48mbojVIcecsefnwS+rgUY952
jnXfdT28+Sj0ofd8zzmY9UHo/VI8+tD+MI8x7wDv+XopTn3stWDBj6EfSvX/
V6X6CmZ9HvqsFI++sB/rsU9LsftTnxt+fO36E73e96X49Y1zMOm70LelePS9
/XiPMW9/n5FegiM/+Xz0cBb3Mq3ErD9Cv5diEz8//VKKR7/Zw4/p+MsVK7Hq
d+fg15+uhzf/hf4txa+/nINJ/4T+LsWjf+3P8BjzJnnPn0txin1Ya6LHODd8
ySudG2YlEbtUYhPXgYdrjE1f6ZtB5NzwqahUD2vaiE0lTpWVcnCnjlhV4hB5
PMxijHn8s92z/DsN3OJ9bP33q/P3rH9XiSVzR+xeiQuzRpylEntmijhjJWbM
VikHa2aP2K0SX+aKOGclNjHGPFgzR6V5sIc8HrbNXGldeMc+eFjF/qwFj+ap
dCb6fN5KHr4sGHGBSgyYr1IO9ixUKcceR4QOr8SaRSIuXIkri0VctBJvekZc
vBKnyFMPd8hTA4/I96jEnSUq1cCOXhGXrNS3q0dcrRJvlo24TCXGLFVpHuxZ
upKHCytF7FuJTcwlB796V6qHLytGXKESm5arlIM1y/M8K7GHPB5OMcY8eDl/
pfsCq9iHtWAn5+UaYMoalc5Nn60acZVKbOA68PQeYytX4hmRc8OkfpXq4cu6
EdepxKY1K+VgzdoR16rEHvJ4OMUY8/h+8Aw5K6xar9Ja8Gj9Sp5+2y3irpXY
0z/iJpV4s1HEDStxatNKOZi0caUcrNk84maVuLJFxAGV+nj3SuvCKfLUwx3y
1MCjLSvV0M97VKqBfezPHrBt64hbVWLKDpV+f6Pvt404sBIb+H0OD3t2rDQP
5lHHHjBop0o5mLJLxJ0r8W6bSnvAEdbDwyby1MAh7g019NYYv/dwaM9K554h
NCp0QCU2jAjtV4k7Q0KDK7FmkGtg0lDn4NBezsGgYaG9KzFln9DwSt+QDSo9
s8x56gvnqYFD+7oGjhzoM3Xx/uwBj0b6fPBpf3sYcZBruvo6yMGLg52rfU3s
AZsODR1SiUOjQ4dV+j7xvnDWWZynfjbnqYFTh7sGBh3pewqTjrLnXjwVerJS
jx0TOroSp8Z6HpwaZw87Tg6dVIlTRzvHe3+s62ENLJ5QqSeOcw4ejQ8dX4lP
E+wX9BjzeEfvCN1eiVsnei24cHborErcOS10aqX+nxyaVIkHp9j39NjESsyb
6HPDptNd38frTa3ErSnOwaYzQ2dUYtBU+2U9xrxe3p/94NY5Ph/P5PrQdZW4
c1HowkqsOT90XiX2XGAPS64KXVmJTxc6B7cudj2MuSJ0eSXGXeIcbLosdGkl
Bl1uv4bHmNfXe55biVlXeq0VPca54csNPjfv/bWhayq9W9fZr+exqytx7Wqf
G3bc6HpYc1vo1kpcuck5eHRL6OZKfLrVvr/HmMfvFvQ2PTHAz5+1+D2BHiMH
d+4L3VuJI3eH7qrEkXvs4cejoUcqMeZe5+DW/a6HNw+HplVi3APOwayHQg9W
4tE0+x08xrytvOedlTj1iNeCBS+FXqzU/09X6iuY9UTo8Uo8etJ+d489Vond
j/nc8OMZ1w/3ei9U4tezzsGk50PPVeLRC/ZDPca8LX1GegmOvOzz0cOfhT6t
xKw3Q29UYtNroVcr8eh1e/jxYeiDSqx6wzn49Zbr4c37ofcq8ett52DSu6F3
KvHoPfuDPca8Ed7zlUqc+sBr7ecxzg1fPve5YdYnoY8rselT+zEe+6jSN+Mj
nxs+feF6WPNt6JtKnPrSObjzdeirShz6xv5YjzEPVn3netj3Y+iHSn9mnT9T
xZ/zgiX/hf6txIXfQr9WYs/PoZ8qMeN352DNn6E/KvHln9Dfldj0h+fBmr88
7wzn8bDtF6872fvgp3p/1oJH/AXsnIk+n66Why9pxKQWA6avlYM9Wa0ce+wS
cedarCki5rW4UkUsa/GmiVjX4hR56uEOeWrgEXlq4E5bqwZ2dI3YqdW380Wc
txZvZo44Uy3GzFBrHuyZsZaHC3NFnLMWm5hLDn7NUqsevswRcfZabJq1Vg7W
dIs4Wy32kMfDKcaYBy+71LovsIp9WAt2cl6uAabMX+vc9Nk8EeeuxQauA0/v
Mda9Fs+InBsmLVCrHr4sGnGRWmxasFYO1iwccaFa7CGPh1OMMY/vB8+Qs8Kq
xWqtBY961PL021oR16zFnqUi9qrFmyUi9qzFqaVr5WDSkrVysGbZiMvU4spy
EXvX6uO1a60Lp8hTD3fIUwOP+tSqoZ/XqVUD+9ifPWDbChGXr8WUVSOuUqvv
V4rYtxYbVq7lYc9qtebBPOrYAwatXisHU/pFXKMW71astQccYT08bCJPDRzi
3lBDb+1a672HQ+vWOje9vk3ErWuxYUDEzWtxZ8OIG9RizXq1amDSRrVycGj9
WjkYtEnEjWsxZdOI/Wt9Qxav9cxgHHnqYRN5auDQZrVq4MjAWmeCeezPHrBp
i1rng1Vb1vIwYttaNTCL69iqFi+2q5WDd1wTe8CmHSJuX4tDO0Xcsdb3ifeF
s8Ib8tTDKfLUwCmYQQ0M2q3WPYVJu9fy3ItrQlfX6rG9QoNqcWqPWvPg1J61
POzYN7RPLU4Nco73frDrYc3w0LBaPTHEOXi0d2hoLT4Ns089NsTv6NTQmbW4
tY/XggujQ4fV4s6o0AG1+n9kaEQtHuxv33hsv1rM28/nhk0Hun42r3doLW4d
5BxsOiR0cC0GHWo/s8eY19X7sx/cOtzn45lMCk2sxZ1xobG1WHNkaEwt9hxl
D0tOCE2oxaexzsGto10PY8aHjq/FuGOcg03HhY6txaDj7ef3GPPm9J5H1GLW
BK81h8c4N3yZ7HPz3p8cOqnWuzXRfjGPnViLayf63LDjFNfDmjNCU2px5VTn
4NHpodNq8WmK/VIeYx4/38Ab+NLbz5+1Nm7iexC6oRF3zg+dV4sj54TOrsWR
c+3hx+Why2ox5jznWPcC18ObS0OX1NrzQudg1sWhi2rx6BL7VT3GvOW951m1
OHWZ14IFt4RurtX/19bqK5h1VejKWjy62n5tj11Ri91X+Nzw4zrX9/d6N9Xi
1/XOwaQbQzfU4tFN9ht5jHl9fEZ6CY7c6vPRw0+EHq/FrHtCd9di0x2h22vx
6K7QnbX48XBoWi1W3e0c/LrX9fDmodCDtfh1n3Mw6YHQ/bV49KD9dh5j3gDv
eVstTk3zWpt7jHPDlyd9bpj1WOjRWmx63H5Xjz1S65vxiM8Nn55yPax5PvRc
LU497RzceTb0TC0OPWc/2GPM2yTev5v8LsKtF7wWfHop9GItFrweeq0Wb14J
vVyLQ6/aw5v3Q+/V4scbroE7b4XerMWXt+3hzTv2MOhd+5Heh3UP9XrkYNAH
3gMefBP6uhZTPg19UqvvPwp9WIsNH9sf7jHqR/ksnA8mfeb647zeV7XY9Llz
sObL0Be12POV/dEe+9zX0C/u3xqNGPStzwdHvg99V4srP9jDmx/tYdBP9jDp
Z3tY8lfoz1q8+Nse7vwW+rUWX363hzd/2J/uOjzs+8XrHun7xH2BQ/94XdiR
xNm7NOqt/0L/1uLB/xp5GDRdIw93pm/kJ/j6uOaprmNduJM2Whe+ZI08vMkb
eRhUNPLwjP1ZFz6VjXIwqGrkYVLdyMObGSJ2bcSYNmLTiD2dRp6eXDjiQo3Y
xFxy8GvGRvXwZbaIszZi00yNcrBmlogzN2IPeTycYox59P0ijfaAVd0arQWP
5og4e6NenyvinI140L2Rh0HzRJy7EXfmbeThInWsBZPma5SDK1zHgo3YwXrs
AY8WiDh/I+6Qx8Mvxqif7PeF9wAGLdro3PRw34grNmLNEhF7NuJLj4iLNeLN
4o08/FguYu9GTGIuOVi1ZKN6uLJsxGUaca1Xoxw8WjriUo24Qx4PvxhjHoxk
T84Hp9iHtfh+8Gx59rBmpUbnhk0rRFy+Eau4DjwMY6xPI5YROTdMWblRPQyi
X1dvxJtVGuXgwmoRV23ECfJ4WMYY8/h5i3vHnjBrzUb9D6vWjrhWI+6sH3G9
Rsxap1EOBq3byMOSzSJu2ohPzCVHf27QqB7G9G/EaXp3w0Y52MTPEBs1YhB5
PCxjjHlwk7NwPpjFPqwFI3aMuEMjBm0dcatGPbxFxAGNenrLRh6WMbZ5I0YS
OTfM2qZRPQxive0b8Wtgoxzv3HYRt230DpLHwyPGmAcT2Z/9YNZOjc7HMx8R
2q8Rg/aIuHsjZu0acZdGrNmtkYcjw0J7N+IQc8nBrD0b1cOgoaEhjfg1yDnY
Mzi0VyNmDbGf3mPMg7/suXMjfu3ttWAtY5wb7oz0ueHUvqF9/O7uZ196bHgj
xg33uWHT/q6HMQeHDmrErQOcg00HhkY1YtBB9jN4jHn8XkFvvGCGHeK1YNNh
oUMbMejI0JhGvDk8NLoRU46wpz9PD53WiDdjnINZY0NHNWLNcaFjG/FrnHNw
55jQ0Y04dKz9vB5jHgyY4j3g1vFeC55OCI1vxIITQyc0YsNJ9vDoZHsYNNF+
IdexFnya5NxSvo5TG7HvBO8Bm04JTW7EoFPtl/AY9bP6nnEf4dEZPjf9fGXo
ikbcOSd0diPWTA2d2Yg9Z9nDkktCFzfi09nOwa1zXQ9jLgpd2Ihx5zkHmy4I
nd+IQRfar+Qx5vX2npxvNe/DWt38bHn2cOcqnxsuXB66rBEnrrDv57FLGzHy
Up8bNl3tehjD7y7XN+LWNc7BputC1zZi0PX263uMefz7Yv5cC39uBR7d3Ohn
0EPbYGjo3VaceCB0fyMG3RG6vRF3bg3d0ogXdzoHg+4O3dWIK/eF7m3Elbs8
Dx7d43kDncfDs9u87gDvg9/O+7MWbHvQZ4JND9nDnUdDjzTq/2nOwZ3HnGOP
+eOa5mvFoCdCjzdiylOhJxux5pnQ04249bjr93Semr2cpwY+PesaOPR86Dk/
5w9C7zdizcuhlxrx5QXPgzcv2sOPt0NvNWLSS87BqldcD1feDL3RiGuvOgeP
Xg+91og7b9iP9Bjz4OLDvi8Heh/WGurzcg2w5kOfmz57L/Ruo/f1fftDPPZO
I5a943PDo49cD1e+CH3eiFUfOwePPgt92og7n9sf5bFPGnH9EZ8VTn3pteDW
V/b0WxrPMGnFoB9C3zfizbehbxrx6Efn4Mt3zsGgn0M/NeLKr6FfGvVx1mrd
k52nfpLz1MCj31xDP+etak7w/uwB2/4I/d6IKf+F/m3Egr9DfzViwz/2sOd/
read6jr2gEHTtcrBlC4Rp2/F6D+9xxSvh4dN5KmBQ9wbauitBVq993CoaHVu
en32iN1asWGWiDO34k4TsW7FmrJVDUxqW+XgUNUqB4O6Ruy0YsqMEWdo9f34
2s8MxpGnHjaRpwYOzdSqBo7M0epMMI/92QO2zdrqfPxuPFsrDyPmbFUDs7gO
cvBirlY5eMc1sQdsmjti91YcmjfiPK2+T9/4rPCGPPVwijw1cApmUAODFmx1
T2HSQq0892Kf0PBWPbZYxEVbcWrhVvPg1CKtPOxYOuJSrTjFXHK89z1a1cOa
XhGXbNUTi7fKwaMlIvZsxSfyeBjHGPN4R7ePuF0rbrEPa8GFVSOu0oo7y0fs
06r/e0dcthUPlmvl4Rpjy7RiHpFzw6YVWtXDGNZbuRW3VmyVg00rRezbikHk
8bCMMebBQfZnP7i1Wqvz8UwGRNy8FXfWjrhWK9b0i7hGK/as2crDkk0ibtyK
T8wlB7fWaVUPYzaKuGErxq3bKgeb1o+4XisGkd+gFcsYYx68ZM/VWzGLfVgL
hjLGueHLFq3OzXu/WcRNW71bXAcefjHWvxXXiJwbdmzZqh7WbBtxYCuubNUq
B4+2ibh1Kz6Rx8M4xpg31bz5x9zi+W/rZ39q6JRW3Nk14i6tOLJTxB1bcWTn
Vh5+DAkNbsUY5pJj3d1a1cObvUKDWu25e6sczNoztEcrHg2yh3GMMQ/OsecO
rTg12GvBggNDo1r1/76t+gpmDQvt3YpHw+0zjw1txe6hPjf82M/1M3i9A1rx
a4RzMGn/0MhWPDrAvvUY82AxZ6SX4MhBPh89PCE0vhWzDg+NbsUmfn46pBWP
DrOHH8eEjm7FqtHOwa8jXA9vxoXGtuLXGOdg0lGhI1vxaKz9XB5j3ize8+BW
nDraa83sMc4NX07wuWHW8aHjWrFpvP0CHju21TfjWJ8bPp3oelgzOTSpFadO
cg7uTAyd3IpDk+x7eIx5/O4L6282t07xWvx5Hf5dF//+DZZcGLqgFRemhs5s
xZ4podNbMeMs52DNOaGzW/Hl/NB5rdh0tufBmnM9r6/zeNh2htft7X3wK3t/
1oJHF/lM9PnF9vDl8tBlrRhwiXOw5wrn2GP6TvRBR6y5KnRlK65cE7q6FW+u
D13XilNXun5d56nZwPlrW3HnBtfAjptCN7bq22mhh1rx5rbQra0Yc7PnwZ5b
7OHCfaF7W7HpVufg1+2uhy/3hO5uxaY7nIM1d4XubMWeu+239Bjz4OWlvi8D
vQ9rbezzcg0w5WGfmz57MPRAKzY8ZL+9x+5vxbP7fW6Y9Ijr4cuToSdaselR
52DN46HHWrHnCfvdPMa8fn6GnBVWPeW14NHT9vTbp6FPWrHnxdALrXjzXOjZ
Vpx6yTmY9LxzsOaV0MutuPJa6NVWffyZ193XeepHOE8NPHrdNfTz564Z5v3Z
A7a9GXqjFVPeb/X7G33/TujtVmx41x72fOB5B7iOPWDQh87BlI9DH7Xi3Vve
4yCvhz/CeWqO9L2hht7q0tF7D4e+8LlPC/0R+r0VG34J/dyKO9+Evm7Fmi9d
A5O+dQ4OfeUcDPo+9F0rpvwY+qHVN+QZP7MJzlN/ovPUwKGfXANH/vSZjvP+
7AGPfvX54NNv9jDiL9ec6usgBy/+dm6ir4k9YNO/oX9aceh/cT/+a/V9etZn
PdN56uHUf66BUzCDGhiUdHRPYVLakedebBqxf0c9VkYsOuJU1tE8OJV35GHH
TBFn7IhTzCXHe191VA9rukbsdNQTdUc5eNRGbDriE3k8jGOMebyjq0RcuSNu
zdDRWnBh3ojzdMSd2SN266j/Z404S0c8mK0jD9cYm7kj5hE5N2yao6N6GMN6
c3fErTk7ysGm7hHn6ohB5PGwjDHmwUH2Zz+4NV9H5+OZ9I64bEfcWSTiwh2x
ZsGIC3TEnoU68rCkV8QlO+ITc8nBrUU7qocxS0Ts2RHjFusoB5sWj9ijIwaR
x8MyxpgHL9lz/o6YxT6sBUMZ49zwZbmOzs17v0zEpTt6t7gOPPxibKmOuEbk
3LCjT0f1sGaliH074sryHeXg0YoRV+iIT+TxMI4x5vG7xWnuCbjF82etpd1j
5ODOmjHWryOOrB5xtY44skZHHn5sGHGDjhjDXHJwa62O6uHN+hHX64hxa3eU
g1nrRlynIx6Rx8M4xpgH59hz1Y44xT6sBQu2ibh1R/2/WUd9BbM2ibhxRzyi
z/Dwl7GNOmI3kXPDj807qoc3rLdVR/wa0FEOJm0ZcYuOeEQeD6cYYx4s5oz0
EhwZ2NH56OG9Q0M7YtZOEXfsiE3bR9yuIx7t0JGHH4NCe3bEKuaSg187d1QP
b/aIuHtH/NqloxxM2i3irh3xiDweTjHGPPjIntt2xCn2YS34xxjnhi/DfG6Y
NSQ0uCM2DbXv4rG9Ovpm7OVzw6fhroc1I0MjOuLUPs7Bnf1C+3bEoRH2lceY
B4MOCO0f+j8g3bYU
          "]]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwd1EdsiHEcx+GfrWan0aGttjqUVnWjG63u3ZptqdlhHbiRcCPhxp0bCTcS
biTcuHMj4UbCjcRTh+cdeY+f7/vPnZofmFsUEetdFrsvPE/znh1e7vObcR9f
k7sk4jbf6V4a8Zy0ZRHX+Uzz8ojHJKyImOUjVSsjHvKXyYSItxSvirjLT4ZX
R7wka03ETb7SsTbiKUnrIpJJIZU0NrCRTWwmnQwyyWIL2eSQy1byyKeAbRRS
RDElbKeUHeykjHJ2UcFuKqmimhpqqaOePexlHw000kQzLbTSxn4OcJB2OjhE
J11000MvffQzwCBDDDPCKGOMc5gjHOUYxznBBJNMcZJTTHOaM5zlHOe5wAyz
zDHPRS5xmStcJZEnurTzRacbZPJCvyF+6HmHIt7oPMEf3R9QyQd7mGElj+yk
iU92c41UntlTF9/s6xY5vLK7MX7Z4T1KeWefpzjJFJNMcILjHOMoRzjMOGOM
MsIwQwwyQD999NJDN110cogO2jnIAfbTRistNNNEIw3sYy97qKeOWmqopopK
dlPBLsopY+fCv0cp2ymhmCIK2UYB+eSxlVxyyGYLWWSSQTqb2cRGNpBGKikk
k0TiwjmAxCFvyBqShpQhY8gXsoVkIVXIFPL8Pzf+Ad40Wsc=
       "]]}},
    VertexNormals->CompressedData["
1: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
B1UUoT592CPOmy9/SzRDikP2VhqueRD1RXq5FXvJltT74GAzVEF1RnX1dh5o
Pou5X499lUc6qt3ZDM2D5qXZijw4nS3dWIi9yzh5uNnADD1YlBU+/RL7XqG1
JOxZLkNCznJmqD5YiqJtMg8MPY4HhWN/ljZf8VHIDM3KisXWbubBlEL7FR/s
zLPx6zTsZujgk4nQVfp8cON5qmqPfXL7eTL1fjO05JYdl382H9In7mYYYvfr
/Zb16a8pqhrLunpXIR/WPY5wqmDXXuD+6Olihu5nc5nFjuTDy3thskSf/+/W
M/9dnPQO6hagrpWse07tHSLU2HKgb/tfR2mu72Mwnn4jSR9CnqY9MtISMbz+
z8mCP8lVLk5LDrqVldL7L7XwoE//3IFNWfOVzoqkbM0VDy3GPdBia/DPh/zP
7uC5sxMtkHx4Wn+IDq7teLRJ+IOLyUfyhqlQ/VDRilf/MZBriVgl/Pmr+8Z9
sXSorobq3PNbp6Gdz3iB8IsVdm9eH2dFhobCLhytwvDxb/4nwicXH1k9jT6O
hkBkTcFbEn7R2QHhGblPtWjYeRCjJelBjusyUDDpfYtw87FHG0rs/Oj9IWvt
vEIFyH+rIUl4kIMfU5qTIGqV1DhdOKQKadrXu4hOW3/A4Moyew6VN6uORrzV
BMOQ9NOEf9h4eKI7VgyNO5lcDBbRg3fP+3SIfqOqLv+zT10ShcUNbjqRGYPT
TXLpDeLxdhVLe9NKoztT0uo8mWZwIolnjFg/Tcyb7TxGdgl98zo58dbUEh6V
OXMTXafkdIfCdE0GHW561/ZI1Qa+ud05RHQdSZZyw9y8LHI9HTmlYmMPeu+X
U4mueyE8pvPzoxza3TaVRpLvBOe/fa0i5nU6zadMf71UQHkhKiJsAa6gP5iu
/AM7ufKesg/lisT3uUrXeXfgdpHxJI6je/rmJPN4sDI6qFjwfnDLAy6g00xE
7y27qW9f4VJFrw+8GC594wUSgWXiE9irn9syGuxRQ7T3BtwaKq/Bz0+0QyNE
n6xWateMqyHHE570sXd84Vjw2/n32MsTu05+qVdHauTrfkPXrsPg4XN+xPVJ
HBfWTzwK0EB7bT69VLEOgN8CvoHE3M+368bCipQm+iDwKKZN9wY03CtbJzrQ
tyzLNmhDE/GKc3NTlQaB11T874fYw3isuWVrtdD7b/KBlQXB8IS6xraWeN2D
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
     "]], {}, {{}, {}}},
  AspectRatio->1,
  Axes->True,
  AxesEdge->{{-1, -1}, {1, -1}, {1, 1}},
  AxesLabel->{
    FormBox["\"k\"", TraditionalForm], 
    FormBox["\"j\"", TraditionalForm], 
    FormBox["\"  c\"", TraditionalForm]},
  AxesStyle->AbsoluteThickness[1],
  BoxRatios->{1, 1, 0.7},
  BoxStyle->AbsoluteDashing[{2.5, 2.5}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->288,
  LabelStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.2, -1.2, 1}]], "Output",
 CellLabel->
  "Out[50]=",ExpressionUUID->"761518cc-f411-4452-9f4b-4cc96fba8ef8"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Fig. ",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["Chapter"],
  FontWeight->"Bold"],
 StyleBox[".",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["FigureCaption"],
  FontWeight->"Bold"],
 " ",
 " Plot of dimensionless concentration versus ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]],ExpressionUUID->
  "3443af98-9874-4d72-ac36-8347b32820c4"],
 " and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "a43b43f6-105a-4d99-ae72-224732c62ebe"],
 "."
}], "FigureCaption",
 CellTags->"fig4",ExpressionUUID->"da137280-8e3d-4e3c-80ef-194d3d08e10e"],

Cell["\<\
Having simulated the concentration profile the current can be calculated and \
compared to the analytical solution. First the analytical solution is \
converted into a dimensionless form. The current for a potential step to the \
limiting current region is given by the Cottrell equation\
\>", "Text",ExpressionUUID->"034fe2f6-ee27-4355-846e-85dcc4e79dc1"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"i", "(", "t", ")"}], "=", 
   RowBox[{"n", " ", "F", " ", "A", " ", 
    SuperscriptBox[
     RowBox[{
      SuperscriptBox["c", "*"], "(", 
      FractionBox["D", 
       RowBox[{"\[Pi]", "t"}]], ")"}], 
     RowBox[{"1", "/", "2"}]]}]}], 
  TraditionalForm]],ExpressionUUID->"ba8cdc72-1916-4892-bb66-966663365f39"]], \
"EquationNumbered",
 CellTags->"tag21",ExpressionUUID->"429d3bf1-871b-471e-980a-0d365fb64ac2"],

Cell[TextData[{
 "Using the definition of the dimensionless current given in eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag16"],
 "), eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag21"],
 ") in dimensionless form is"
}], "Text",ExpressionUUID->"2b535e78-6a14-464e-aae3-efc1fbfc17ea"],

Cell[TextData[Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"i", "(", "k", ")"}], " ", "=", "\[AlignmentMarker]", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"i", "(", "k", ")"}], " "}], 
      RowBox[{"n", " ", "F", " ", "A", " ", 
       SuperscriptBox["c", "*"]}]], 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SubscriptBox["t", "n"], "D"], ")"}], 
      RowBox[{"1", "/", "2"}]]}], "=", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       SubscriptBox["t", "n"], 
       RowBox[{"\[Pi]", "t"}]], ")"}], 
     RowBox[{"1", "/", "2"}]]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"=", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], 
      RowBox[{"\[Pi]", "(", 
       RowBox[{"k", "-", "1"}], ")"}]], ")"}], 
    RowBox[{"1", "/", "2"}]]}], TraditionalForm]}],
 TextAlignment->
  AlignmentMarker,ExpressionUUID->"1c059b75-6458-41e9-9952-356da13117e5"]], \
"EquationNumbered",ExpressionUUID->"3d8b795b-5c14-424d-b105-2c05eb27304d"],

Cell[TextData[{
 "The ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code to plot the simulated current is shown below. ",
 StyleBox["i1", "MB"],
 " is the simulated current, ",
 StyleBox["z", "MB"],
 " is the analytical current and ",
 StyleBox["optionA", "MB"],
 " and ",
 StyleBox["optionB", "MB"],
 " are a list of graphics options defined at the beginning of the notebook \
version of this chapter."
}], "Text",ExpressionUUID->"0c2c116e-9673-4b05-b02d-8ebcdad7a4c2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"i1", ",", "z"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"i1", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"c", "\[LeftDoubleBracket]", 
        RowBox[{"2", ",", "k"}], "\[RightDoubleBracket]"}]}], "*", 
      SqrtBox[
       RowBox[{"\[DoubleStruckCapitalD]", "*", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}], " "}]]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "2", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1."}], "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Pi", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"n", "-", "1"}], ")"}]}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "2", ",", 
        RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"i1", ",", "z"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "->", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{"Inherited", ",", "Red"}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"67b3cf85-674d-4e44-befa-f10630a556e5"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.009166666666666668], AbsoluteThickness[
      1.6], 
      StyleBox[LineBox[CompressedData["
1:eJw11A1MlHUcB/BHR8QYZS2UtpTxJqAigSQB8vKVF/EE5e457o5KDzs1Z4zT
MZhgRA/LpW253WzquriJMjITw6BEJOXNhg0iamahzUQQQbo0zQtWSRbf37Pd
nn32fb7bc//n9/8H27arW2YrirLx0e+/uyPqm1l9O/yg/H/5dMzcn8LlzHqX
pdSb9sfmIEdqxVwv+lkcXlhRpplm0/PRojU6zVMKHQSf8PpYW+d0+4xDEPhZ
7Peld/+hw/Bk09LssK1/0+EIG9802eX/Fx0J6xcjES73FL0YQQnfOeLHJ+ko
LBttrE6eJY5GY+H5rp9j/qRj+P4eOhavHPPzO33xAb0Mp+zdvQeXiONwaSTl
Nd8P/6Bf4P8VL4fRvqLa8cF9Oh7nIn8ZjQsXv4ijxa1jJWfv0QlcH3EiTgws
qGrw/E4nobvzxLDVJV6BtH739md04mSu5106BRfUGHfXSXEqQhxJQw+3iNOw
r/9McFuwGFz/OzPWAGeppTwji1ZWosNaM+94/2/MVyI0+nTx0g20ks7v5Wae
jsSHbmPUXlrJwKIyZ7NPmOQZaFJ9q77q/pV5Jr8vrWUiaWfd9MQTkmfBcbV9
41jLBPMs2Da5isY308oqzoPkq3D1h9eNuT23mWfj44rU0cJKWsuGxzJ0+0qc
5Ks5P+PMV2Pg0OLP9x6nFR0SJ/Sd1Vsl16HPOlFkj5B8DedtjPkajN269lF3
A63k4K09R2qUEslzEKQrax1MkDyX8yl5Lk41vekK6L3FfC2qD4V2vXyQ1tbi
ZIjN5bFJvo7zLPk6tFZWOqenR5nnwX9/oKoO0FoedOa0/otHJNdz/mnoET1o
d9/Pluf18PJPrnp/Pt2hx6LaZGfUvZvsG7hfaBjwXF/uvIhaWjPgkx+Hi3aW
0x0GlO6+EnnYIH2V+0v6KrbVH33e4i19FU/X6N4ZHBphX8XNDQuMAedpxcj9
SMOItpe8f2oopzUjHvv2mteUWfpGjLQVvDu+XPr53L/Sz8e23t74ugfD7Odj
xznLWdtluiMfWsCBzOYWWjFxv9Mw4XpLj87zhvRNyLfOrbtulb4Jk3mBbTnp
0jfzfJC+GfaB9bUHfKVvRmHw17uL79xg34xXrRfUM5doxcLzhIYFcybVDGct
rVmwq/nxyiV7pG/BPnzZE2qXfgHPH+kXoOS9OHdqivQf+e1jn65feKP9XwJ6
BMQ=
        "]],
       FontFamily->"Arial"]}}, {
     {GrayLevel[0.2], PointSize[0.009166666666666668], AbsoluteThickness[1.6], 
      StyleBox[PointBox[CompressedData["
1:eJw1ywkwnGccx/G3zigSdFOpqkhUVIm4Iojj58qude3lSJRFJyo2qlJHQ6Wb
xDRqQzFIM1QbM6U1ihnBVCZIUi2VSUaD6agyla6Io4lNxFHpNf7PO/PMO5/n
+/z2pGRKjmtxHPf2f+f//9b32N/adVqrQ2XeTxdYLS0WadVtJ28Dz33AzaXZ
gGyCXnuT9Ep7PTIPyfv0NDmz2uRdcDPIS/rESYtsiayfk1Q/THBka1iOpmdJ
yv7p2/JeLF4dS1MOPCe/jvzN30f3B26S98HMK960+ukG+Q3ElVmF+Y+sk99E
Z/uVk2t318iOcHe2vFk1v0p2QuH1kMlkS2ZnHLXlDXcmPyO7YPezQUFz9wrZ
FeH8wMvzrzK7oeOAH1dx8SnZHacEL+Yab2M+iMv1mQ4vlT4he6BIqGgusWA+
hM6dvtILbRqyJwb2G4b4hzF7QbSww0x3aZnsjewbt38KrGI+DHnMKeNcMPsg
paF60nH5MdkXHyWHm2g3MvuhVK6HLxOZ/dH1WrthlwUzEOEpTn7e8WjLSoCv
2t6d50nmAtCTqxujuPkn9QDUmNR2vi8mc4EY1JVYeaiXqAdidvdIblIhmQtC
tbrY9+tXWA9CpFzZNPTdIvVgqAy9pj5OICuDMWnZHdukw3oIvvCrD15tXaAe
ghUHA1P+W2TuCDjb6JV0I9aPwManosq7b546H2JZQ2N5NlnJx/UnBS1CR9YF
OB2w41vB7EPqAgwn/rh+soHMhaJ6tWa9Non1UIya969fs2ZdiPKMeu3OmTnq
Qox6jHe910jmwmC/M8luQsF6GKorNnt/c2U9HMKJb/ac+OsB9XBkNd7iKQbI
XAR8PlOm3StnPQI93iX3KxNYj8SgRY5zrQPrkZhrV9+e2pilHoUJg4MbomGy
Mgo+hRlt6jrWRbiR/uHFikwyRDDVyb8TGsTei3CufSFYZxe5XwRJyxy/e0lN
ezG6PQzbjn5Phhilf1sMzdSSlWIklMtlwmxyvxjN8aq84gi2lyD1rMu1aju2
l0Bm0KOt0GJ7CfQTh1QvTP1Bewl6jEynJT1kToqiW8qxuEtkSKE+cbfMOIes
lOLcmuxdhZTtpfj1HSfzDFe2l4HX+lWasRnbyzAv+SWfr7lPexnOXLlU+/I9
cr8MTZrCsNyrZC4a9hr3wyk1ZETDxuqhYPwDto+GHe9B4Z14to+GpkRuxPdn
+xjwLaMifGzYPgY2uNDbrM/2MagzG+c+XZyhfQyS2oXj6hEyF4tlmyrrlm4y
YnFW//T01OdkZSzktqkHCorYPhaV580EZxRsH4fB1EMFagnbx0G1csyt1Zvt
47Dp16IZ28v2cTiufCQ+ZjjT9y+YegKI
        "]],
       FontFamily->"Arial"]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{1.0000000000000022`, 0},
  BaseStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{
    GrayLevel[0], 
    AbsoluteThickness[0.5]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->288,
  LabelStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{1., 100.}, {-3., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->
  "Out[54]=",ExpressionUUID->"4a65a2c8-f21d-4332-ab27-9ad04dc86993"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Fig. ",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["Chapter"],
  FontWeight->"Bold"],
 StyleBox[".",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["FigureCaption"],
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold"],
 "Plot of analytical (line) and simulated (points) dimensionless currents."
}], "FigureCaption",
 CellTags->"fig5",ExpressionUUID->"c86a8c62-31b7-4828-ab66-a473b903d5d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Functional methods"
}], "Subsection",
 CellTags->"s3.5.2",ExpressionUUID->"ffbfad89-0333-48e6-a89b-06a731ec95b5"],

Cell[TextData[{
 "Functional methods in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " offer significant computational speed improvements over procedural methods \
as we shall see below. An example of a functional version of the explicit \
solve method is:"
}], "Text",
 CellTags->"i:8",ExpressionUUID->"bd930fd1-52c3-4d87-a20c-e68ddd3d66f3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "explicitSolve2", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"explicitSolve2", "[", 
   RowBox[{"m_Integer", ",", "n_Integer", ",", " ", "d_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[DoubleStruckCapitalD]", "=", "d"}], ",", "c"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", " ", "=", 
      RowBox[{"makeGrid", "[", 
       RowBox[{"m", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Set", "[", 
         RowBox[{
          RowBox[{"c", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", "#"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{"ListCorrelate", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[DoubleStruckCapitalD]", ",", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", " ", 
                   RowBox[{"2", "*", "\[DoubleStruckCapitalD]"}]}], ")"}], 
                 ",", "\[DoubleStruckCapitalD]"}], "}"}], ",", 
               RowBox[{"c", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", 
                 RowBox[{"#", "-", "1"}]}], "\[RightDoubleBracket]"}]}], 
              "]"}], ",", 
             RowBox[{"c", "\[LeftDoubleBracket]", 
              RowBox[{"m", ",", "#"}], "\[RightDoubleBracket]"}]}], "}"}], 
           "]"}]}], "]"}], "&"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{"2", ",", "n"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "InputOnly",
 CellLabel->"In[55]:=",ExpressionUUID->"873cd8c0-403b-436c-8e7d-f323c0264114"],

Cell[TextData[{
 "In order to visualize how this works imagine that you had the following \
list ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     FormBox[
      SubsuperscriptBox[
       StyleBox["c", "dv"], "1", "k"],
      TraditionalForm], ",", " ", 
     FormBox[
      SubsuperscriptBox[
       StyleBox["c", "dv"], "2", "k"],
      TraditionalForm], ",", " ", 
     FormBox[
      SubsuperscriptBox[
       StyleBox["c", "dv"], "3", "k"],
      TraditionalForm], ",", " ", 
     FormBox[
      SubsuperscriptBox[
       StyleBox["c", "dv"], "4", "k"],
      TraditionalForm], ",", " ", 
     FormBox[
      SubsuperscriptBox[
       StyleBox["c", "dv"], "5", "k"],
      TraditionalForm], ",", " ", 
     FormBox[
      SubsuperscriptBox[
       StyleBox["c", "dv"], "6", "k"],
      TraditionalForm]}], "}"}], TraditionalForm]],ExpressionUUID->
  "d7780e33-0003-4c27-a0ce-7adba85f65e4"],
 " representing the concentrations at points on a grid. The calculation \
performed in the ",
 StyleBox["For", "MB"],
 " loop in the earlier procedural method can be performed functionally using ",
 ButtonBox["ListCorrelate",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/ListCorrelate"],
 "."
}], "Text",
 CellTags->"i:21",ExpressionUUID->"d8ab756e-5bb8-4d15-83e7-092ff8916b50"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"\[DoubleStruckCapitalD]", ",", "c", ",", "list", ",", "k"}], 
   "]"}], ";"}], "\n", 
 RowBox[{}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     SubsuperscriptBox["c", "j", "k"], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ListCorrelate", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[DoubleStruckCapitalD]", ",", 
      RowBox[{"(", 
       RowBox[{"1", "-", " ", 
        RowBox[{"2", "*", "\[DoubleStruckCapitalD]"}]}], ")"}], ",", 
      "\[DoubleStruckCapitalD]"}], "}"}], ",", "list"}], "]"}], "//", 
  "TableForm"}]}], "Input",
 CellLabel->"In[57]:=",ExpressionUUID->"b4eed635-af26-4d66-a345-af2190a3b13b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "1", "k"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[DoubleStruckCapitalD]"}]}], ")"}], " ", 
        SubsuperscriptBox["c", "2", "k"]}], "+", 
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "3", "k"]}]}]},
     {
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "2", "k"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[DoubleStruckCapitalD]"}]}], ")"}], " ", 
        SubsuperscriptBox["c", "3", "k"]}], "+", 
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "4", "k"]}]}]},
     {
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "3", "k"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[DoubleStruckCapitalD]"}]}], ")"}], " ", 
        SubsuperscriptBox["c", "4", "k"]}], "+", 
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "5", "k"]}]}]},
     {
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "4", "k"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[DoubleStruckCapitalD]"}]}], ")"}], " ", 
        SubsuperscriptBox["c", "5", "k"]}], "+", 
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "6", "k"]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[59]//TableForm=",ExpressionUUID->"3817084a-54be-46bf-844a-b60f7728f98f"]
}, Open  ]],

Cell[TextData[{
 "We can immediately see that the output, shown here in ",
 ButtonBox["TableForm",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/TableForm"],
 ", is the explicit finite difference solution for ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], "2", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "af6cfaaf-ac15-448a-8dc3-8eeb2cd0b93a"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], "3", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "2134a59a-d187-40f5-ac45-4f48ee157385"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], "4", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "a113547d-c0ec-4e1e-83f3-2bab09dc0cbb"],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], "5", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "ed1b4eb2-4082-4691-bebd-de90a8fe243c"],
 ". We could then add the boundary conditions eg. ",
 StyleBox["b1", "MB"],
 " and ",
 StyleBox["b2", "MB"],
 ", on either side of the output and ",
 ButtonBox["Flatten",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Flatten"],
 " the list to create a single list of concentrations for the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"k", "+", "1"}], ")"}], TraditionalForm]],ExpressionUUID->
  "155390f0-81f5-41d7-afba-a880a696d7be"],
 "th time increment."
}], "Text",
 CellTags->"i:9",ExpressionUUID->"7b7e8f6e-130e-4bef-8b12-645cc9b9c9f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{"b1", ",", 
     RowBox[{"ListCorrelate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[DoubleStruckCapitalD]", ",", 
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           RowBox[{"2", "*", "\[DoubleStruckCapitalD]"}]}], ")"}], ",", 
         "\[DoubleStruckCapitalD]"}], "}"}], ",", "list"}], "]"}], ",", 
     "b2"}], "}"}], "]"}], "//", "TableForm"}]], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"55cdedb1-2cb3-472c-8377-4410cf8dad7b"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"b1"},
     {
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "1", "k"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[DoubleStruckCapitalD]"}]}], ")"}], " ", 
        SubsuperscriptBox["c", "2", "k"]}], "+", 
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "3", "k"]}]}]},
     {
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "2", "k"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[DoubleStruckCapitalD]"}]}], ")"}], " ", 
        SubsuperscriptBox["c", "3", "k"]}], "+", 
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "4", "k"]}]}]},
     {
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "3", "k"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[DoubleStruckCapitalD]"}]}], ")"}], " ", 
        SubsuperscriptBox["c", "4", "k"]}], "+", 
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "5", "k"]}]}]},
     {
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "4", "k"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "\[DoubleStruckCapitalD]"}]}], ")"}], " ", 
        SubsuperscriptBox["c", "5", "k"]}], "+", 
       RowBox[{"\[DoubleStruckCapitalD]", " ", 
        SubsuperscriptBox["c", "6", "k"]}]}]},
     {"b2"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[60]//TableForm=",ExpressionUUID->"894682dd-32fb-4be3-87fb-0edc4c7cb525"]
}, Open  ]],

Cell[TextData[{
 "The output gives the concentration values ",
 Cell[BoxData[Cell[TextData[Cell[BoxData[
   FormBox[
    SubsuperscriptBox[
     StyleBox["c", "dv"], "1", 
     RowBox[{"k", "+", "1"}]], TraditionalForm]],ExpressionUUID->
   "7c70f568-94b5-4fcc-ad50-66d8a95d359e"]],ExpressionUUID->
   "e3f26bf5-e9cc-4952-9fa1-1a21c8b43019"]],ExpressionUUID->
  "98c3b5ae-70c5-4089-94d7-b7f56f9429a3"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], "2", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "fbd1eca1-25ec-48eb-9a9a-027cb398b5e0"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], "3", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "aec8b47d-22c9-41c4-a125-95588c2a13bc"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], "4", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "d6b36c59-0bf9-4372-9ccb-a083bf68b824"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], "5", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "36c9579a-e602-4d0c-b0ef-e16966658baf"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], "6", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "e0f47d2a-7164-4910-92b3-40ef7cfe3170"],
 "at the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "+", "1"}], TraditionalForm]],ExpressionUUID->
  "09c4e547-fcbc-4645-90b5-dd13d74974fd"],
 " time increment from the ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "5514d604-40a5-4cc8-b786-5bec23bcbbbb"],
 " time increment values used as input. The ",
 StyleBox["Set", "MB"],
 " command is used to set the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "+", "1"}], TraditionalForm]],ExpressionUUID->
  "d1aa616c-acd8-46de-a66b-fbdf9b3270e5"],
 " row on the grid as equal to the output. Next we want to look for an \
analogy to the ",
 StyleBox["For", "MB"],
 " loop to do these steps for each value of ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "d59f159a-a188-4e3c-9860-8b2d7f4b9e3c"],
 ". In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " this can be done with the ",
 ButtonBox["Map",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Map"],
 " function.\nPlacing the ",
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{"pure", " ", "function"}],
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Function"], TraditionalForm]],ExpressionUUID->
  "803b7858-536c-445a-a0c1-8bfef63be0dc"],
 " ",
 StyleBox["Set[ \[Ellipsis] ]&", "MB"],
 " in ",
 StyleBox["Map[\[Ellipsis], Range[2, n]]", "MB"],
 " is the functional equivalent to ",
 StyleBox["For[k = 2, k \[LessEqual] n, k++, \[Ellipsis] ]", "MB"],
 ". ",
 Cell[BoxData[
  FormBox[
   ButtonBox["Range",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Range"], TraditionalForm]],ExpressionUUID->
  "807feee8-e9f2-4851-bdbe-a1daf055c02b"],
 StyleBox["[2, n]", "MB"],
 " produces a list of values from ",
 Cell[BoxData[
  FormBox["2", TraditionalForm]],ExpressionUUID->
  "ba25333e-f40f-44df-9b17-65864c2509c4"],
 " to ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "abca7351-6d28-4cb0-b3ff-3c83febb556e"],
 " that are the values of ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "a1d1e754-6918-426f-b5f8-edce45ec176f"],
 ". Each successive value of ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "b384f046-d18f-45ba-b515-eb4b12d2cba0"],
 " is mapped onto the function thereby producing the required output. ",
 StyleBox["Map", "MB"],
 " is a short way of performing the following series of steps:"
}], "Text",
 CellTags->"i:22",ExpressionUUID->"4e424949-264b-42eb-a4e9-a5ab47c5df91"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "\[Equal]", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"ListCorrelate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[DoubleStruckCapitalD]", ",", 
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           RowBox[{"2", "*", "\[DoubleStruckCapitalD]"}]}], ")"}], ",", 
         "\[DoubleStruckCapitalD]"}], "}"}], ",", 
       RowBox[{"c", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
     RowBox[{"c", "\[LeftDoubleBracket]", 
      RowBox[{"m", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
   "]"}]}], "\n", 
 RowBox[{}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "\[Equal]", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"ListCorrelate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[DoubleStruckCapitalD]", ",", 
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           RowBox[{"2", "*", "\[DoubleStruckCapitalD]"}]}], ")"}], ",", 
         "\[DoubleStruckCapitalD]"}], "}"}], ",", 
       RowBox[{"c", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
     RowBox[{"c", "\[LeftDoubleBracket]", 
      RowBox[{"m", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
   "]"}]}], "\n", 
 RowBox[{}], "\[IndentingNewLine]", "\[VerticalEllipsis]", "\n", 
 RowBox[{}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "n"}], "\[RightDoubleBracket]"}], "\[Equal]", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "n"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"ListCorrelate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[DoubleStruckCapitalD]", ",", 
         RowBox[{"(", 
          RowBox[{"1", "-", " ", 
           RowBox[{"2", "*", "\[DoubleStruckCapitalD]"}]}], ")"}], ",", 
         "\[DoubleStruckCapitalD]"}], "}"}], ",", 
       RowBox[{"c", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{"n", "-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
     RowBox[{"c", "\[LeftDoubleBracket]", 
      RowBox[{"m", ",", "n"}], "\[RightDoubleBracket]"}]}], "}"}], 
   "]"}]}]}], \
"Program",ExpressionUUID->"f2566d7e-697c-4aeb-b989-0340e277a7c2"],

Cell[TextData[{
 "As we",
 "\[CloseCurlyQuote]",
 "ll see below the speed improvement in going from the procedural ",
 StyleBox["explicitSolve", "MB"],
 " to the functional ",
 StyleBox["explicitSolve2", "MB"],
 " is not as great as we\[CloseCurlyQuote]d hoped. Below is a faster method \
called ",
 StyleBox["explicitSolve3", "MB"],
 "."
}], "Text",ExpressionUUID->"cd2b7492-2799-4904-8fd4-89e2760672da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "explicitSolve3", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"explicitSolve3", "[", 
   RowBox[{"m_Integer", ",", "n_Integer", ",", " ", "d_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"solveNext", ",", 
      RowBox[{"\[DoubleStruckCapitalD]", "=", "d"}], ",", "c"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", " ", "=", 
      RowBox[{"makeGrid", "[", 
       RowBox[{"m", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Transpose", "[", "c", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"solveNext", "[", 
       RowBox[{"start_", ",", 
        RowBox[{"{", 
         RowBox[{"b1_", ",", "___", ",", "b2_"}], "}"}]}], "]"}], ":=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"b1", ",", 
         RowBox[{"ListCorrelate", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[DoubleStruckCapitalD]", ",", 
             RowBox[{"(", 
              RowBox[{"1", "-", " ", 
               RowBox[{"2", "*", "\[DoubleStruckCapitalD]"}]}], ")"}], ",", 
             "\[DoubleStruckCapitalD]"}], "}"}], ",", "start"}], "]"}], ",", 
         "b2"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"FoldList", "[", 
       RowBox[{"solveNext", ",", 
        RowBox[{"First", "[", "c", "]"}], ",", 
        RowBox[{"Rest", "[", "c", "]"}]}], "]"}]}], ";", 
     RowBox[{"Rest", "[", "c", "]"}]}]}], "]"}]}]}], "InputOnly",
 CellLabel->"In[61]:=",ExpressionUUID->"7f8bb1a5-0cad-4690-ae1f-b5ce2d6cec31"],

Cell[TextData[{
 StyleBox["explicitSolve3", "MB"],
 " contains a function, ",
 StyleBox["solveNext", "MB"],
 ". The function ",
 StyleBox["solveNext", "MB"],
 " takes two lists as input variables. The variable ",
 StyleBox["start_", "MB"],
 " is a list of concentrations at a given value of ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "2788f424-dea2-482f-84c2-ff5e424f4e9c"],
 ". The second variable, ",
 StyleBox["{b1_, ___, b2_}", "MB"],
 ", is the row of grid points representing concentrations at a given value of \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "+", "1"}], TraditionalForm]],ExpressionUUID->
  "b2330f11-9b3e-48ca-9ead-2fc39964eddc"],
 ". The values ",
 StyleBox["b1", "MB"],
 " and ",
 StyleBox["b2", "MB"],
 " correspond to the first and last elements of the list that are in fact the \
boundaries of the grid at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "+", "1"}], TraditionalForm]],ExpressionUUID->
  "ece2757c-02f4-48a0-9746-ca13ce45f9d0"],
 ". The three successive underscores, ___, stand for any sequence. All we are \
really interested in here is taking the first and last terms (the boundary \
values) at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "+", "1"}], TraditionalForm]],ExpressionUUID->
  "eb779cb8-be35-4c2a-8627-9f49f5e87c64"],
 " to use in the function. Using ",
 Cell[BoxData[
  FormBox[
   ButtonBox["FoldList",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/FoldList"], TraditionalForm]],ExpressionUUID->
  "cee22401-02d5-4533-99cb-b55461c17705"],
 ", ",
 StyleBox["solveNext", "MB"],
 " is repeatedly applied to each element in the list ",
 Cell[BoxData[
  FormBox[
   ButtonBox["Rest",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Rest"], TraditionalForm]],ExpressionUUID->
  "da4f2a44-7ab1-4f6d-b234-f760369efe7c"],
 StyleBox["[c]", "MB"],
 " beginning with the first row of concentrations (",
 Cell[BoxData[
  FormBox[
   ButtonBox["First",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/First"], TraditionalForm]],ExpressionUUID->
  "d0ac3006-411a-4911-bbd8-4bae9faeeb5a"],
 StyleBox["[c]", "MB"],
 "). For example for a list ",
 StyleBox["c={rowk1,rowk2,rowk3,rowk4}", "MB"],
 " the function ",
 StyleBox["FoldList[solveNext,", "MB"],
 " ",
 Cell[BoxData[
  FormBox[
   ButtonBox["First",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/First"], TraditionalForm]],ExpressionUUID->
  "899ea51f-de6b-40cb-a865-881bd7139fa1"],
 StyleBox["[c],", "MB"],
 " ",
 Cell[BoxData[
  FormBox[
   ButtonBox["Rest",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Rest"], TraditionalForm]],ExpressionUUID->
  "c21c720f-012e-4e0a-8aee-1c05877e9bdd"],
 StyleBox["[c]]", "MB"],
 " is an abbreviated way of writing ",
 StyleBox["FoldList[solveNext, rowk1,{rowk2,rowk3,rowk4}]", "MB"],
 "."
}], "Text",
 CellTags->"i:23",ExpressionUUID->"a2ba68e5-456b-4be3-a140-9dc431bf6800"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FoldList", "[", 
  RowBox[{"solveNext", ",", " ", "rowk1", ",", 
   RowBox[{"{", " ", 
    RowBox[{"rowk2", ",", " ", "rowk3", ",", " ", "rowk3"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[63]:=",ExpressionUUID->"183c5b1a-08c4-4b8e-b303-e1cb794a0221"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"rowk1", ",", 
   RowBox[{"solveNext", "[", 
    RowBox[{"rowk1", ",", "rowk2"}], "]"}], ",", 
   RowBox[{"solveNext", "[", 
    RowBox[{
     RowBox[{"solveNext", "[", 
      RowBox[{"rowk1", ",", "rowk2"}], "]"}], ",", "rowk3"}], "]"}], ",", 
   RowBox[{"solveNext", "[", 
    RowBox[{
     RowBox[{"solveNext", "[", 
      RowBox[{
       RowBox[{"solveNext", "[", 
        RowBox[{"rowk1", ",", "rowk2"}], "]"}], ",", "rowk3"}], "]"}], ",", 
     "rowk3"}], "]"}]}], "}"}]], "Output",
 CellLabel->
  "Out[63]=",ExpressionUUID->"d405df43-27aa-420a-b3e8-ccd54747ccd6"]
}, Open  ]],

Cell[TextData[{
 "Applying ",
 StyleBox["solveNext", "MB"],
 " to the initial concentrations at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "a7ccf5fd-142d-4245-9160-7368ad9465ba"],
 " will return the concentrations at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "fcc9d8da-725f-4ae6-a03c-4381e3ab0277"],
 ". This output is then used as input for the next increment and the \
concentrations at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "3"}], TraditionalForm]],ExpressionUUID->
  "48ddc085-3aa0-4ab3-ad6a-ef01d562bb0e"],
 " are returned and so on until ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "n"}], TraditionalForm]],ExpressionUUID->
  "3c33e7e4-21a5-44f9-8d61-521f8b20d52a"],
 ". We ",
 Cell[BoxData[
  FormBox[
   ButtonBox["Transpose",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Transpose"], TraditionalForm]],ExpressionUUID->
  "556a41a5-3f1d-4bb9-8cf9-2b0fad1d10d8"],
 " the list at the beginning and end of ",
 StyleBox["explicitSolve3", "MB"],
 " solely to return output that has the same form in previous two ",
 StyleBox["explicitSolve", "MB"],
 " methods.",
 " ",
 "The final method, ",
 StyleBox["explicitSolve3", "MB"],
 " is considerably faster than the other two (Fig ",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["FigureCaption", "fig6"],
 "). The relative computation times for the procedural and functional methods \
can be compared by wrapping the ",
 Cell[BoxData[
  FormBox[
   ButtonBox["Timing",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Timing"], TraditionalForm]],ExpressionUUID->
  "87c7913f-ec4f-4a7c-a1cf-7d73d873b9e9"],
 " command around the evaluation and executing the ",
 StyleBox["explicitSolve", "MB"],
 " functions for list of ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "611464fa-a728-4460-867a-b1df22ac592f"],
 " values. Below ",
 StyleBox["Map", "MB"],
 " is used to insert successive n values from a list of values into the ",
 StyleBox["explicitSolve", "MB"],
 " function."
}], "Text",
 CellTags->"i:24",ExpressionUUID->"83726ff5-42cb-4890-ad1f-b647ebe1aec8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "\[DoubleStruckCapitalD]", ",", "nValues", ",", "res1", ",", "res2"}], 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalD]", "=", "0.4"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"nValues", "=", 
    RowBox[{"{", 
     RowBox[{
     "100", ",", "200", ",", "400", ",", "600", ",", "800", ",", "1000"}], 
     "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"number", " ", "of", " ", "time", " ", "increments"}], 
   "*)"}]}], "\n", 
 RowBox[{"res1", "=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Timing", "[", 
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"m", "=", 
         RowBox[{"1", "+", 
          RowBox[{"Ceiling", "[", 
           RowBox[{"6", "*", 
            SqrtBox[
             RowBox[{"\[DoubleStruckCapitalD]", "*", 
              RowBox[{"(", 
               RowBox[{"#", "-", "1"}], ")"}]}]]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"makeGrid", "[", 
         RowBox[{"m", ",", "#"}], "]"}], ";", 
        RowBox[{"explicitSolve", "[", 
         RowBox[{"m", ",", " ", "#"}], "]"}], ";"}], ")"}], "]"}], "&"}], ",",
     "nValues"}], "]"}]}]}], "Input",
 CellLabel->"In[64]:=",ExpressionUUID->"7eb67c56-db07-4df9-8639-f61783592b1f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.002922`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.005951`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.009739`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.012004`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.023421`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.02079`", ",", "Null"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[67]=",ExpressionUUID->"7bfd4715-e3e1-4122-bcfb-ae5125c5bb7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"res2", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Timing", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"m", "=", 
          RowBox[{"1", "+", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"6", "*", 
             SqrtBox[
              RowBox[{"\[DoubleStruckCapitalD]", "*", 
               RowBox[{"(", 
                RowBox[{"#", "-", "1"}], ")"}]}]]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"makeGrid", "[", 
          RowBox[{"m", ",", "#"}], "]"}], ";", 
         RowBox[{"explicitSolve3", "[", 
          RowBox[{"m", ",", " ", "#"}], "]"}], ";"}], ")"}], "]"}], "&"}], 
     ",", "nValues"}], "]"}]}]}]], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"788cb6e3-c5b3-4f96-9cc8-7aacca7f2e26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.003564`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.003855`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.007105`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.016535`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.018472`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.020334`", ",", "Null"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[68]=",ExpressionUUID->"827899fe-22e0-4089-88ef-9436273aa7f3"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Null", "MR"],
 " elements appear in the lists because a semicolon was placed after the ",
 StyleBox["explicitSolve", "MB"],
 " functions to suppress the display of output (the complete list of \
concentrations on the grid). The output can be turned into a usable list for \
plotting by firstly flattening the list, then deleting all the ",
 StyleBox["Null", "MR"],
 " elements and finally removing the units."
}], "Text",ExpressionUUID->"165068b0-64b9-4a4e-9a0a-d37513b6bc01"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"res1a", ",", "res1b", ",", "res2a", ",", "res2b"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res1a", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "res1", "]"}], ",", "Null"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"res2a", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", "res2", "]"}], ",", "Null"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{}], "\n", 
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"make", " ", "an", " ", "x"}], "-", 
   RowBox[{
   "y", " ", "list", " ", "containing", " ", "timings", " ", "and", " ", 
    "values", " ", "of", " ", "n"}]}], "*)"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res1b", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"nValues", ",", "res1a"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res2b", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"nValues", ",", "res2a"}], "}"}]}], "]"}]}], 
  ";"}]}], "InputOnly",
 CellLabel->"In[69]:=",ExpressionUUID->"1be1277d-409f-4d48-8a83-e77449448dd0"],

Cell["\<\
Alternatively the all of the first elements can be chosen from the list:\
\>", "Text",ExpressionUUID->"dde07ba7-f4bb-4e1b-8de7-fb2071b51fb3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"res1a", "=", 
   RowBox[{"res1", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res2a", "=", 
   RowBox[{"res2", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{}], "\[IndentingNewLine]", 
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"make", " ", "an", " ", "x"}], "-", 
   RowBox[{
   "y", " ", "list", " ", "containing", " ", "timings", " ", "and", " ", 
    "values", " ", "of", " ", "n"}]}], "*)"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res1b", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"nValues", ",", "res1a"}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"res2b", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{"nValues", ",", "res2a"}], "}"}]}]}], ";"}]}], "Input",
 CellLabel->"In[74]:=",ExpressionUUID->"73f12043-645a-4369-85a6-5a50d6d9b9fc"],

Cell[TextData[{
 "Once the list of",
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "-", "y"}], TraditionalForm]],ExpressionUUID->
  "64701930-c5e3-4633-9a98-d44b5eca5a4f"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "timing"}], "}"}], TraditionalForm]],
  ExpressionUUID->"6c0c4d1d-bdb5-4e43-9593-0d186b5400f6"],
 " points have been formed they can be plotted on a log plot."
}], "Text",ExpressionUUID->"8bc6ba99-8196-445d-8683-68cd3941f2d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"res1b", ",", "res2b"}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", 
        RowBox[{"AbsolutePointSize", "[", "7", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", 
        RowBox[{"AbsolutePointSize", "[", "7", "]"}]}], "]"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellLabel->"In[78]:=",ExpressionUUID->"590ec03c-a314-4df9-b31d-43c4b8befd11"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[1, 0, 0], AbsolutePointSize[7], AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{100., -5.8354869656536295`}, {200., -5.124196006319422}, {
       400., -4.631616836003075}, {600., -4.422515351404017}, {
       800., -3.7541222231758735`}, {1000., -3.8732831771122154`}}],
      FontFamily->"Arial"]}, 
    {RGBColor[0, 0, 1], AbsolutePointSize[7], AbsoluteThickness[1.6], 
     StyleBox[
      PointBox[{{100., -5.636871769373574}, {200., -5.558384271966844}, {
       400., -4.946956517433073}, {600., -4.102275932548381}, {
       800., -3.991499206929943}, {1000., -3.8954609171291676`}}],
      FontFamily->"Arial"]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -5.998365568559583},
  BaseStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  LabelStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1000.}, {-5.998365568559583, -3.7541222231758735`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0]}, {
    Automatic, {{-5.298317366548036, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.005\"", ShowStringCharacters -> False], 
          0.005`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.010\"", ShowStringCharacters -> False], 
          0.01`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.020\"", ShowStringCharacters -> False], 
          0.02`15.954589770191003, AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
       0.}}, {-6.907755278982137, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-6.502290170873972, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-6.214608098422191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.809142990314028, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.521460917862246, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.115995809754082, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.961845129926823, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.8283137373023015`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.710530701645918, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.199705077879927, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.900422093749666, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.7333680090865, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellLabel->
  "Out[78]=",ExpressionUUID->"4cdeb666-c0fd-41a7-a7b1-8ad51823df83"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Fig. ",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["Chapter"],
  FontWeight->"Bold"],
 StyleBox[".",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["FigureCaption"],
  FontWeight->"Bold"],
 StyleBox["  ",
  FontWeight->"Bold"],
 "Plot of log of computation time versus ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "ae8218c8-cb97-4f79-8477-d9c68d2f6c85"],
 ". Upper points are procedural timings and lower points are functional \
timings."
}], "FigureCaption",
 CellTags->"fig6",ExpressionUUID->"8c9877a1-d6e8-4d96-9b63-1e93e1b88f13"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["Section"],
 " Implicit Finite Difference Methods"
}], "Section",
 CellTags->{
  "s3.6", "i:10"},ExpressionUUID->"01d970ad-c553-49cd-abfb-1ed6cebbea20"],

Cell[TextData[{
 "We can re-write eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag22"],
 ") in a slightly different form so that the flux is calculated at the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", " ", "+", " ", 
    StyleBox[
     RowBox[{"\[CapitalDelta]", 
      StyleBox["t",
       FontSlant->"Italic"]}]]}], TraditionalForm]],ExpressionUUID->
  "8b78320a-efc5-47dc-9171-b7fdb657fc78"],
 " time interval (Fig. ",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["FigureCaption", "fig7"],
 ")."
}], "Text",ExpressionUUID->"fe0271b1-71cb-4e76-bd4d-819615d31e42"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"c", "(", 
     RowBox[{"x", ",", " ", 
      RowBox[{"t", "+", 
       RowBox[{"\[CapitalDelta]", "t"}]}]}], ")"}], "-", 
    RowBox[{"c", "(", 
     RowBox[{"x", ",", " ", "t"}], ")"}]}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"D", "\[CapitalDelta]", "t"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]", "x"}], ")"}], "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"c", "(", 
       RowBox[{
        RowBox[{"x", "+", 
         RowBox[{"\[CapitalDelta]", "x"}]}], ",", " ", 
        RowBox[{"t", "+", 
         RowBox[{"\[CapitalDelta]", "t"}]}]}], ")"}], "-", 
      RowBox[{"2", 
       RowBox[{"c", "(", 
        RowBox[{"x", ",", " ", 
         RowBox[{"t", "+", 
          RowBox[{"\[CapitalDelta]", "t"}]}]}], ")"}]}], "+", 
      RowBox[{"c", "(", 
       RowBox[{
        RowBox[{"x", "-", 
         RowBox[{"\[CapitalDelta]", "x"}]}], ",", " ", 
        RowBox[{"t", "+", 
         RowBox[{"\[CapitalDelta]", "t"}]}]}], ")"}]}], ")"}]}]}], 
  TraditionalForm]],ExpressionUUID->"b2b7d79e-749a-432f-b8ec-3a807b5b053d"]], \
"EquationNumbered",
 CellTags->"tag23a",ExpressionUUID->"f94c9177-edba-4169-8ed8-1549a997efe7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "vert", ",", "horiz", ",", "option4", ",", "k", ",", "j", ",", "c"}], 
    "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"vert", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "10"}], "}"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"horiz", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "i"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"10", ",", "i"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"option4", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "5"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Prolog", "\[Rule]", " ", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"TraditionalForm", "[", "k", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "5."}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"TraditionalForm", "[", "j", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5.", ",", "0.5"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubsuperscriptBox["c", "j", "k"], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5.5", ",", "5.4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubsuperscriptBox["c", "j", 
             RowBox[{"k", "+", "1"}]], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5.6", ",", "6.4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubsuperscriptBox["c", 
             RowBox[{"j", "-", "1"}], 
             RowBox[{"k", "+", "1"}]], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"4.6", ",", "6.4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"label", "[", 
            SubsuperscriptBox["c", 
             RowBox[{"j", "+", "1"}], 
             RowBox[{"k", "+", "1"}]], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"6.6", ",", "6.4"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"4", ",", "6"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"5", ",", "5"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"6", ",", "6"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"5", ",", "6"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"Arrowheads", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.03"}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.5", ",", "5.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "7.5"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"5.5", ",", "0.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"7.5", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "}"}]}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vert", ",", "horiz"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}], ",", "option4"}], "]"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"SelectionMove", "[", 
   RowBox[{
    RowBox[{"EvaluationNotebook", "[", "]"}], ",", "Previous", ",", "Cell"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEndToken", "[", "\"\<OpenCloseGroup\>\"", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SelectionMove", "[", 
   RowBox[{
    RowBox[{"EvaluationNotebook", "[", "]"}], ",", "After", ",", "Cell"}], 
   "]"}], ";"}]}], "Input",
 CellLabel->
  "In[153]:=",ExpressionUUID->"c1342ebe-1f8a-4ced-9903-77ddbbeb4d4b"],

Cell[BoxData[
 GraphicsBox[{{LineBox[{{1, 1}, {1, 10}}], LineBox[{{2, 1}, {2, 10}}], 
    LineBox[{{3, 1}, {3, 10}}], LineBox[{{4, 1}, {4, 10}}], 
    LineBox[{{5, 1}, {5, 10}}], LineBox[{{6, 1}, {6, 10}}], 
    LineBox[{{7, 1}, {7, 10}}], LineBox[{{8, 1}, {8, 10}}], 
    LineBox[{{9, 1}, {9, 10}}], LineBox[{{10, 1}, {10, 10}}]}, {
    LineBox[{{1, 1}, {10, 1}}], LineBox[{{1, 2}, {10, 2}}], 
    LineBox[{{1, 3}, {10, 3}}], LineBox[{{1, 4}, {10, 4}}], 
    LineBox[{{1, 5}, {10, 5}}], LineBox[{{1, 6}, {10, 6}}], 
    LineBox[{{1, 7}, {10, 7}}], LineBox[{{1, 8}, {10, 8}}], 
    LineBox[{{1, 9}, {10, 9}}], LineBox[{{1, 10}, {10, 10}}]}},
  AspectRatio->1,
  ImagePadding->{{5, 5}, {5, 5}},
  PlotRange->{{0, 10}, {0, 10}},
  Prolog->{
    InsetBox[
     FormBox["k", TraditionalForm], {0.5, 5.}], 
    InsetBox[
     FormBox["j", TraditionalForm], {5., 0.5}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubsuperscriptBox["c", "j", "k"], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {5.5, 5.4}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubsuperscriptBox["c", "j", 
           RowBox[{"k", "+", "1"}]], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {5.6, 6.4}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubsuperscriptBox["c", 
           RowBox[{"j", "-", "1"}], 
           RowBox[{"k", "+", "1"}]], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {4.6, 6.4}], 
    InsetBox[
     FormBox[
      TagBox[
       TagBox[
        FormBox[
         StyleBox[
          SubsuperscriptBox["c", 
           RowBox[{"j", "+", "1"}], 
           RowBox[{"k", "+", "1"}]], 14, StripOnInput -> False], 
         TraditionalForm], TraditionalForm, Editable -> True], DisplayForm], 
      TraditionalForm], {6.6, 6.4}], 
    PointSize[0.02], 
    PointBox[{4, 6}], 
    PointBox[{5, 5}], 
    PointBox[{6, 6}], 
    PointBox[{5, 6}], 
    Arrowheads[{0, 0.03}], 
    ArrowBox[{{0.5, 5.5}, {0.5, 7.5}}], 
    ArrowBox[{{5.5, 0.5}, {7.5, 0.5}}]}]], "Output",
 CellLabel->"Out[157]=",ExpressionUUID->"ec0787b7-a2c6-4133-b4bb-e0968953297e"]
}, {2}]],

Cell[TextData[{
 StyleBox["Fig. ",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["Chapter"],
  FontWeight->"Bold"],
 StyleBox[".",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["FigureCaption"],
  FontWeight->"Bold"],
 " ",
 " For the fully implicit method the concentration at time increment ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "7b331994-66b7-44cf-9db6-42d0e9177ff7"],
 " is calculated from the concentration at time increment ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "+", "1"}], TraditionalForm]],ExpressionUUID->
  "ccc90745-cfb3-428c-89c0-4357d676929a"],
 "."
}], "FigureCaption",
 CellTags->"fig7",ExpressionUUID->"ec52f3d2-28de-4d6e-84d5-8e264a418b21"],

Cell[TextData[{
 "Written in the coordinates of the grid eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag23a"],
 ") becomes"
}], "Text",ExpressionUUID->"789f770a-3e86-4b07-98f0-e8be15508023"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"c", "(", 
     RowBox[{"j", ",", " ", 
      RowBox[{"k", "+", "1"}]}], ")"}], "-", 
    RowBox[{"c", "(", 
     RowBox[{"j", ",", " ", "k"}], ")"}]}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"D", "\[CapitalDelta]", "t"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"\[CapitalDelta]", "x"}], ")"}], "2"]], "[", 
    RowBox[{
     RowBox[{"c", "(", 
      RowBox[{
       RowBox[{"j", "+", "1"}], ",", " ", 
       RowBox[{"k", "+", "1"}]}], ")"}], "-", 
     RowBox[{"2", 
      RowBox[{"c", "(", 
       RowBox[{"j", ",", 
        RowBox[{"k", "+", "1"}]}], ")"}]}], "+", 
     RowBox[{"c", "(", 
      RowBox[{
       RowBox[{"j", "-", "1"}], ",", " ", 
       RowBox[{"k", "+", "1"}]}], ")"}]}], "]"}]}], 
  TraditionalForm]],ExpressionUUID->"92f4090c-c4fe-4a53-9be4-44a4867e387a"]], \
"EquationNumbered",
 CellTags->"tag23",ExpressionUUID->"e88369a8-f961-429b-91c9-9d6a2893cb11"],

Cell[TextData[{
 "Using this equation the concentration at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", "k"}], TraditionalForm]],ExpressionUUID->
  "f750ee87-9dda-495c-8a4f-e34437ce96c7"],
 " can be determined from the concentration at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", "=", 
    RowBox[{"k", "+", "1"}]}], TraditionalForm]],ExpressionUUID->
  "6f740bba-9a86-4ebf-8de3-136a8c7f18aa"],
 ". This form of finite difference method is called a fully implicit or \
backward difference scheme. It is stable for all values of ",
 StyleBox["D", "dv"],
 ". Written in dimensionless form eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag23"],
 ") becomes"
}], "Text",ExpressionUUID->"0c2f2870-c486-453b-ab8a-5ac5e0a214ca"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      StyleBox["D", "dv"]}], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"j", "-", "1"}], 
      RowBox[{"k", "+", "1"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        StyleBox["D", "dv"]}]}], ")"}], 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "j", 
      RowBox[{"k", "+", "1"}]]}], "-", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"j", "+", "1"}], 
      RowBox[{"k", "+", "1"}]]}]}], "=", "\[AlignmentMarker]", 
   SubsuperscriptBox[
    StyleBox["c", "dv"], "j", "k"]}], 
  TraditionalForm]],ExpressionUUID->"cc41e469-7a52-4f44-9633-9c2339ff636f"]], \
"EquationNumbered",
 CellTags->"tag24",ExpressionUUID->"ded1ccf5-788a-4bb6-8708-1f43a6438081"],

Cell[TextData[{
 "Equation (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag24"],
 ") can be written as a system of linear equations"
}], "Text",ExpressionUUID->"056452d9-17aa-405f-aec2-3f98e7383870"],

Cell[TextData[Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      StyleBox["D", "dv"]}], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "1", 
      RowBox[{"k", "+", "1"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        StyleBox["D", "dv"]}]}], ")"}], 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "2", 
      RowBox[{"k", "+", "1"}]]}], "-", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "3", 
      RowBox[{"k", "+", "1"}]]}]}], "=", "\[AlignmentMarker]", 
   SubsuperscriptBox[
    StyleBox["c", "dv"], "2", "k"]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      StyleBox["D", "dv"]}], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "2", 
      RowBox[{"k", "+", "1"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        StyleBox["D", "dv"]}]}], ")"}], 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "3", 
      RowBox[{"k", "+", "1"}]]}], "-", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "4", 
      RowBox[{"k", "+", "1"}]]}]}], "=", "\[AlignmentMarker]", 
   SubsuperscriptBox[
    StyleBox["c", "dv"], "3", "k"]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      StyleBox["D", "dv"]}], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "3", 
      RowBox[{"k", "+", "1"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        StyleBox["D", "dv"]}]}], ")"}], 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "4", 
      RowBox[{"k", "+", "1"}]]}], "-", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "5", 
      RowBox[{"k", "+", "1"}]]}]}], "=", "\[AlignmentMarker]", 
   SubsuperscriptBox[
    StyleBox["c", "dv"], "4", "k"]}], TraditionalForm], "\n", 
 FormBox["\[VerticalEllipsis]", TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      StyleBox["D", "dv"]}], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"j", "-", "1"}], 
      RowBox[{"k", "+", "1"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        StyleBox["D", "dv"]}]}], ")"}], 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "j", 
      RowBox[{"k", "+", "1"}]]}], "-", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"j", "+", "1"}], 
      RowBox[{"k", "+", "1"}]]}]}], "=", "\[AlignmentMarker]", 
   SubsuperscriptBox[
    StyleBox["c", "dv"], "j", "k"]}], TraditionalForm], "\n", 
 FormBox["\[VerticalEllipsis]", TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      StyleBox["D", "dv"]}], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"m", "-", "2"}], 
      RowBox[{"k", "+", "1"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        StyleBox["D", "dv"]}]}], ")"}], 
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"m", "-", "1"}], 
      RowBox[{"k", "+", "1"}]]}], "-", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "m", 
      RowBox[{"k", "+", "1"}]]}]}], "=", "\[AlignmentMarker]", 
   SubsuperscriptBox[
    StyleBox["c", "dv"], 
    RowBox[{"m", "-", "1"}], "k"]}], TraditionalForm]}],
 TextAlignment->
  AlignmentMarker,ExpressionUUID->"e52cd6a9-13b9-42de-89d5-4a21fe387c78"]], \
"EquationNumbered",ExpressionUUID->"af6cc8cf-2049-415c-a38a-586fb3c0b61d"],

Cell["that can be rearranged to give", \
"Text",ExpressionUUID->"fedeceea-fd9f-4d89-a54f-966b9d51daa1"],

Cell[TextData[Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        StyleBox["D", "dv"]}]}], ")"}], 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "2", 
      RowBox[{"k", "+", "1"}]]}], "-", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "3", 
      RowBox[{"k", "+", "1"}]]}]}], "=", "\[AlignmentMarker]", 
   RowBox[{
    SubsuperscriptBox[
     StyleBox["c", "dv"], "2", "k"], "+", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "1", 
      RowBox[{"k", "+", "1"}]]}]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      StyleBox["D", "dv"]}], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "2", 
      RowBox[{"k", "+", "1"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        StyleBox["D", "dv"]}]}], ")"}], 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "3", 
      RowBox[{"k", "+", "1"}]]}], "-", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "4", 
      RowBox[{"k", "+", "1"}]]}]}], "=", "\[AlignmentMarker]", 
   SubsuperscriptBox[
    StyleBox["c", "dv"], "3", "k"]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      StyleBox["D", "dv"]}], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "3", 
      RowBox[{"k", "+", "1"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        StyleBox["D", "dv"]}]}], ")"}], 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "4", 
      RowBox[{"k", "+", "1"}]]}], "-", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "5", 
      RowBox[{"k", "+", "1"}]]}]}], "=", "\[AlignmentMarker]", 
   SubsuperscriptBox[
    StyleBox["c", "dv"], "4", "k"]}], TraditionalForm], "\n", 
 FormBox["\[VerticalEllipsis]", TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      StyleBox["D", "dv"]}], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"j", "-", "1"}], 
      RowBox[{"k", "+", "1"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        StyleBox["D", "dv"]}]}], ")"}], 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "j", 
      RowBox[{"k", "+", "1"}]]}], "-", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"j", "+", "1"}], 
      RowBox[{"k", "+", "1"}]]}]}], "=", "\[AlignmentMarker]", 
   SubsuperscriptBox[
    StyleBox["c", "dv"], "j", "k"]}], TraditionalForm], "\n", 
 FormBox["\[VerticalEllipsis]", TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      StyleBox["D", "dv"]}], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"m", "-", "2"}], 
      RowBox[{"k", "+", "1"}]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", 
        StyleBox["D", "dv"]}]}], ")"}], 
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"m", "-", "1"}], 
      RowBox[{"k", "+", "1"}]]}]}], "=", "\[AlignmentMarker]", 
   RowBox[{
    SubsuperscriptBox[
     StyleBox["c", "dv"], 
     RowBox[{"m", "-", "1"}], "k"], "+", 
    RowBox[{
     StyleBox["D", "dv"], "\[VeryThinSpace]", 
     SubsuperscriptBox[
      StyleBox["c", "dv"], "m", 
      RowBox[{"k", "+", "1"}]]}]}]}], TraditionalForm]}],
 TextAlignment->
  AlignmentMarker,ExpressionUUID->"08f201ef-61cd-4b5e-acdf-ca29b5e7d60a"]], \
"EquationNumbered",
 CellTags->"tag27",ExpressionUUID->"cb091cea-0715-4e6d-b4ad-7ebe15830012"],

Cell[TextData[{
 "where the reader is reminded that ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c",
     FontWeight->"Bold",
     FontSlant->"Plain"], "1", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],
  TextAlignment->AlignmentMarker,ExpressionUUID->
  "5d60a3da-7c46-4552-82b2-cb586a93fb78"],
 "and ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c",
     FontWeight->"Bold",
     FontSlant->"Plain"], "m", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],
  TextAlignment->AlignmentMarker,ExpressionUUID->
  "308d98ea-ed37-402d-a4fe-e0ec09a7ee7e"],
 "are boundary values. In matrix form the system of equations shown in (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag27"],
 ") is written as"
}], "Text",ExpressionUUID->"09a55954-88fe-42f6-9bbe-f7eb170fb05f"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", GridBox[{
       {
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", 
           StyleBox["D", "dv"]}]}], ")"}], 
        RowBox[{"-", 
         StyleBox["D", "dv"]}], " ", " ", " ", "0"},
       {
        RowBox[{"-", 
         StyleBox["D", "dv"]}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", 
           StyleBox["D", "dv"]}]}], ")"}], 
        RowBox[{"-", 
         StyleBox["D", "dv"]}], " ", " ", " "},
       {" ", 
        RowBox[{"-", 
         StyleBox["D", "dv"]}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", 
           StyleBox["D", "dv"]}]}], ")"}], 
        RowBox[{"-", 
         StyleBox["D", "dv"]}], " ", " "},
       {" ", " ", "\[DescendingEllipsis]", "\[DescendingEllipsis]", 
        "\[DescendingEllipsis]", " "},
       {" ", " ", " ", 
        RowBox[{"-", 
         StyleBox["D", "dv"]}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", 
           StyleBox["D", "dv"]}]}], ")"}], 
        RowBox[{"-", 
         StyleBox["D", "dv"]}]},
       {"0", " ", " ", " ", 
        RowBox[{"-", 
         StyleBox["D", "dv"]}], 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", 
           StyleBox["D", "dv"]}]}], ")"}]}
      }], ")"}], "\[CenterDot]", 
    RowBox[{"(", GridBox[{
       {
        SubsuperscriptBox[
         StyleBox["c", "dv"], "2", 
         RowBox[{"k", "+", "1"}]]},
       {
        SubsuperscriptBox[
         StyleBox["c", "dv"], "3", 
         RowBox[{"k", "+", "1"}]]},
       {"\[VerticalEllipsis]"},
       {
        SubsuperscriptBox[
         StyleBox["c", "dv"], "j", 
         RowBox[{"k", "+", "1"}]]},
       {"\[VerticalEllipsis]"},
       {
        SubsuperscriptBox[
         StyleBox["c", "dv"], 
         RowBox[{"m", "-", "1"}], 
         RowBox[{"k", "+", "1"}]]}
      }], ")"}]}], "=", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        SubsuperscriptBox[
         StyleBox["c", "dv"], "2", "k"], "+", 
        RowBox[{
         StyleBox["D", "dv"], "\[VeryThinSpace]", 
         SubsuperscriptBox[
          StyleBox["c", "dv"], "1", 
          RowBox[{"k", "+", "1"}]]}]}]},
      {
       SubsuperscriptBox[
        StyleBox["c", "dv"], "3", "k"]},
      {"\[VerticalEllipsis]"},
      {
       SubsuperscriptBox[
        StyleBox["c", "dv"], "j", "k"]},
      {"\[VerticalEllipsis]"},
      {
       RowBox[{
        SubsuperscriptBox[
         StyleBox["c", "dv"], 
         RowBox[{"m", "-", "1"}], "k"], "+", 
        RowBox[{
         StyleBox["D", "dv"], "\[VeryThinSpace]", 
         SubsuperscriptBox[
          StyleBox["c", "dv"], "m", 
          RowBox[{"k", "+", "1"}]]}]}]}
     }], ")"}]}], 
  TraditionalForm]],ExpressionUUID->"e540dae3-39bf-4944-8004-7d78e580cc08"]], \
"EquationNumbered",
 CellTags->"tag26",ExpressionUUID->"4e63a7c8-1300-4ee2-9c4d-740da6b49338"],

Cell[TextData[{
 "Equation (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag26"],
 ") is of the general form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["A", "Matrix"], "\[CenterDot]", 
     StyleBox["u", "Matrix"]}], "=", 
    StyleBox["b", "Matrix"]}], TraditionalForm]],ExpressionUUID->
  "0f1045c1-3082-45a4-9304-6ca3f5ba427f"],
 ". Matrix ",
 StyleBox["A", "Matrix"],
 " has all its elements as zero except for elements on the main, super and \
subdiagonal and is known as a tridiagonal matrix, while ",
 StyleBox["u", "Matrix"],
 " and ",
 StyleBox["b", "Matrix"],
 " are referred to as column vectors."
}], "Text",
 CellTags->"i:13",ExpressionUUID->"38c8c0f8-3e30-4282-b279-3d99bb4a11a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["Section"],
 " Implicit Solution with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Section",
 CellTags->"s3.7",ExpressionUUID->"e500ff53-eb91-4e44-b13d-6515fb74c9b7"],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Procedural method"
}], "SubsectionOpener",
 CellTags->{
  "s3.7.1", "i:14"},ExpressionUUID->"10c4e1df-12ed-4cd2-9e60-a474afb4a8c2"],

Cell[TextData[{
 "To solve eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag26"],
 ") in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " we begin by making the diagonal, sub-diagonal, and super-diagonal elements \
of the matrix ",
 StyleBox["A", "Matrix"],
 ". For a series of ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],ExpressionUUID->
  "285c2dc1-82d0-403a-b11e-820c0777180f"],
 " distance points on a grid the resulting tridiagonal matrix is formed with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "-", "2"}], TraditionalForm]],ExpressionUUID->
  "d50ef0e1-01e7-4892-8a49-07cdd75cd80c"],
 " rows."
}], "Text",
 CellTags->"i:13",ExpressionUUID->"3fc5b54a-794c-4f09-9bd4-fda7e4080067"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{"makeDiagonals", ",", "m", ",", "\[Alpha]"}], "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"makeDiagonals", "[", 
   RowBox[{"m_Integer", ",", "\[Alpha]_"}], "]"}], ":=", "\n", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{
     RowBox[{"x", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"-", "\[Alpha]"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", "-", "3"}], "}"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"z", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"-", "\[Alpha]"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", "-", "3"}], "}"}]}], "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"y", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"1.", "+", 
         RowBox[{"2.", "*", "\[Alpha]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", "-", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "InputOnly",
 CellLabel->"In[87]:=",ExpressionUUID->"67fcb6d9-afa8-4f5f-9a5c-25376569c8ac"],

Cell["We can check that we have made the correct matrix", \
"Text",ExpressionUUID->"9e9af830-2120-48e2-adda-f3179675350f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "makeMatrix", ",", "x", ",", "y", ",", "z", ",", 
    "\[DoubleStruckCapitalD]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"makeMatrix", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", "y", "]"}]}], "}"}], ",", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}], "]"}], "\[Rule]", "x"}], ",", 
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", "y"}], ",", 
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "z"}]}], "}"}], 
       ",", "n"}], "]"}]}], "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
   RowBox[{"makeDiagonals", "[", 
    RowBox[{"7", ",", "\[DoubleStruckCapitalD]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"makeMatrix", "[", 
   RowBox[{"x", ",", "y", ",", "z"}], "]"}], "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[89]:=",ExpressionUUID->"e24d71e7-da31-4cd5-9674-6e8a01f737c8"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.`", " ", "\[DoubleStruckCapitalD]"}]}], 
      RowBox[{"-", "\[DoubleStruckCapitalD]"}], "0", "0", "0"},
     {
      RowBox[{"-", "\[DoubleStruckCapitalD]"}], 
      RowBox[{"1.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.`", " ", "\[DoubleStruckCapitalD]"}]}], 
      RowBox[{"-", "\[DoubleStruckCapitalD]"}], "0", "0"},
     {"0", 
      RowBox[{"-", "\[DoubleStruckCapitalD]"}], 
      RowBox[{"1.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.`", " ", "\[DoubleStruckCapitalD]"}]}], 
      RowBox[{"-", "\[DoubleStruckCapitalD]"}], "0"},
     {"0", "0", 
      RowBox[{"-", "\[DoubleStruckCapitalD]"}], 
      RowBox[{"1.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.`", " ", "\[DoubleStruckCapitalD]"}]}], 
      RowBox[{"-", "\[DoubleStruckCapitalD]"}]},
     {"0", "0", "0", 
      RowBox[{"-", "\[DoubleStruckCapitalD]"}], 
      RowBox[{"1.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.`", " ", "\[DoubleStruckCapitalD]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {5, 5}, 0, {
     1, {{0, 2, 5, 8, 11, 13}, {{2}, {1}, {1}, {2}, {3}, {4}, {3}, {2}, {3}, {
       5}, {4}, {4}, {5}}}, {-$CellContext`\[DoubleStruckCapitalD], 1. + 
       2. $CellContext`\[DoubleStruckCapitalD], -$CellContext`\
\[DoubleStruckCapitalD], 1. + 
       2. $CellContext`\[DoubleStruckCapitalD], -$CellContext`\
\[DoubleStruckCapitalD], -$CellContext`\[DoubleStruckCapitalD], 1. + 
       2. $CellContext`\[DoubleStruckCapitalD], -$CellContext`\
\[DoubleStruckCapitalD], -$CellContext`\[DoubleStruckCapitalD], \
-$CellContext`\[DoubleStruckCapitalD], 1. + 
       2. $CellContext`\[DoubleStruckCapitalD], -$CellContext`\
\[DoubleStruckCapitalD], 1. + 
       2. $CellContext`\[DoubleStruckCapitalD]}}]]]]], "Output",
 CellLabel->
  "Out[92]//MatrixForm=",ExpressionUUID->"34f3498d-2af8-4ff4-9858-\
f91aaa4f7cfe"]
}, Open  ]],

Cell[TextData[{
 "Next step is to generate the vector ",
 StyleBox["b", "Matrix"],
 ", which is the vector on the right hand side of eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag26"],
 "), containing the concentrations at the ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],ExpressionUUID->
  "876f7f30-88bb-4aef-8c71-1087c19e1571"],
 "th time step. Here is a procedural method for implementing the solution."
}], "Text",ExpressionUUID->"b298b69d-11bb-4a21-83ee-379d021ebb4f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "implicitSolve1", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"implicitSolve1", "[", 
   RowBox[{"m_Integer", ",", "n_Integer", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "k", ",", "j", ",", "b", ",", "x", ",", "y", ",", "z", ",", "soln", ",", 
      "mat", ",", "c"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
      RowBox[{"makeDiagonals", "[", 
       RowBox[{"m", ",", "\[Alpha]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mat", "=", 
      RowBox[{"makeMatrix", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"1.", ",", 
        RowBox[{"{", "m", "}"}], ",", 
        RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"1.", ",", 
        RowBox[{"{", 
         RowBox[{"m", "-", "2"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "2"}], ",", 
       RowBox[{"k", "\[LessEqual]", "n"}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "2"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"m", "-", "1"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"c", "\[LeftDoubleBracket]", 
               RowBox[{"1", ",", "k"}], "\[RightDoubleBracket]"}], "=", 
              "0."}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"b", "\[LeftDoubleBracket]", 
               RowBox[{"j", "-", "1"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"c", "\[LeftDoubleBracket]", 
               RowBox[{"j", ",", 
                RowBox[{"k", "-", "1"}]}], "\[RightDoubleBracket]"}]}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"b", "\[LeftDoubleBracket]", 
            RowBox[{"m", "-", "2"}], "\[RightDoubleBracket]"}], "=", 
           RowBox[{
            RowBox[{"b", "\[LeftDoubleBracket]", 
             RowBox[{"m", "-", "2"}], "\[RightDoubleBracket]"}], "+", 
            "\[Alpha]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"soln", "=", 
           RowBox[{"LinearSolve", "[", 
            RowBox[{"mat", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "2"}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{"m", "-", "1"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{
             RowBox[{"c", "\[LeftDoubleBracket]", 
              RowBox[{"j", ",", "k"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"soln", "\[LeftDoubleBracket]", 
              RowBox[{"j", "-", "1"}], "\[RightDoubleBracket]"}]}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "c"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "InputOnly",
 CellLabel->"In[93]:=",ExpressionUUID->"eea3364f-d42c-4fdd-8d3e-5e090334f6c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"soln1", "=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", "=", "20"}], ",", 
        RowBox[{"n", "=", "10"}], ",", 
        RowBox[{"\[DoubleStruckCapitalD]", "=", "1.5"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"implicitSolve1", "[", 
       RowBox[{"m", ",", "n", ",", "\[DoubleStruckCapitalD]"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"soln1", ",", "\[IndentingNewLine]", 
   RowBox[{"AxesEdge", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->"In[95]:=",ExpressionUUID->"e1066b0c-4f0a-42a2-ab8b-3333a1de2153"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
zNElHF3K6v8Cn0aGNg==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBEwTs+yFib1JiAgAAAFYBAAADAAAADAECDwQFEAUGDgMEEQYHEwgJEgcI
IBUWDQIDFAkKFgsMGg8QGA0OGxARHRITHhMUIRYXFwwNHBESGQ4PIhcYMCUm
JRobJhscJBkaJxwdLSIjKyAhKB0eLCEiLiMkOS4vMSYnMicoNCkqNSorLyQl
IxgZNissNywtOC0uOi8waF1ePzQ1QDU2PjM0QTY3Qzg5Qjc4T0RFPDEyRDk6
RTo7Sj9ASD0+S0BBTUJDTkNEUEVGRjs8TEFCUkdIU0hJYFVWVUpLVktMV0xN
WE1OXVJTVElKWU5PWk9QKh8gXFFSOzAxYVZXYldYY1hZZFlaX1RVXlNUZltc
Z1xdvMfGaV5fa2BhbWJjbmNkbGFicGVmf3R1c2hpcWZndGlqdWprdmtseG1u
em9wd2xte3BxfXJzcmdofHFyfnN0gHV2gXZ3gnd4hHl6hXp7hnt8h3x9iH1+
i4CBin+AjIGCmI2OjoOElYqLkIWGkYaHkoeIk4iJlImKmY6PlouMj4SFST4/
mo+Qua6vnZKTnpOUnJGSn5SVr6Slo5iZoJWWpJmapZqbppucqJ2eqZ6fp5yd
qp+graKjopeYrKGirqOksKWmsaansqeos6iptKmqtqust6ytuK2uu7Cxuq+w
vLGyal9gvbKzxbq7wLW2wba3wre4w7i5xLm6m5CRxru8vrO0x7y9yL2+AQwL
BRAPBhEQBA8OBxIRCRQTCBMSFiEgAw4NCxYVDBcWEBsaDhkYERwbEx4dFSAf
FyIhDRgXEh0cGCMiGSQjJjEwGyYlHCcmHSgnHyopIy4tGiUkICsqISwrDxoZ
Ii0sXWhnJzIxKTQzKjU0KzY1JTAvJC8uLDc2LTg3XmloLjk4MDs6ND8+NUA/
Mz49NkFARVBPOURDN0JBOkVEO0ZFPUhHP0pJQEtKPklIQUxLQ05NOENCQk1M
RE9OMTw7R1JRSVRTS1ZVTFdWTVhXTllYSFNSSlVUT1pZUVxbLzo5Ul1cVF9e
VmFgV2JhVWBfWGNiW2ZlU15dWWRjXGdmiX5/X2ppnainY25tZXBvYm1sZnFw
aHNyZ3JxdH9+YWxraXRzanV0b3p5bHd2cHt6cn18c359dYB/a3Z1cXx7doGA
d4KBhZCPeoWEe4aFfIeGfYiHgYyLeYSDfomIf4qJbXh3gIuKjpmYhpGQh5KR
iJOSiZSThI+Og46NipWUi5aVYGtqjZiXAg0Mk56dlJ+ekp2claCfmKOil6Kh
pK+ukZybmaSjmqWknqmonKemn6qpoq2so66tpbCvm6aloayrprGwp7KxtcC/
qbSzq7a1rLe2rbi3sby7qLOyrrm4r7q5j5qZsLu6kJuatsHAt8LBuMPCucTD
s769sr28usXEu8bFvcjHKwGU2w==
          "]]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{2, 1, 11, 21, 31, 41, 51, 61, 71, 81, 91, 101, 111, 121, 131,
        141, 151, 161, 171, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 
       200, 190, 180, 170, 160, 150, 140, 130, 120, 110, 100, 90, 80, 70, 60, 
       50, 40, 30, 20, 10, 9, 8, 7, 6, 5, 4, 3, 2}]}},
    VertexNormals->CompressedData["
1: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
     "]], {}, {{}, {}}},
  AspectRatio->1,
  Axes->True,
  AxesEdge->{{-1, -1}, {1, -1}, {1, 1}},
  AxesLabel->{
    FormBox["\"k\"", TraditionalForm], 
    FormBox["\"j\"", TraditionalForm], 
    FormBox["\"  c\"", TraditionalForm]},
  AxesStyle->AbsoluteThickness[1],
  BoxRatios->{1, 1, 0.7},
  BoxStyle->AbsoluteDashing[{2.5, 2.5}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->288,
  LabelStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2, -0.5, 1}]], "Output",
 CellLabel->
  "Out[96]=",ExpressionUUID->"28be38e4-8b9b-490c-a54f-0b22f861d2a8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Functional methods"
}], "Subsection",
 CellTags->{
  "s3.7.2", "i:15"},ExpressionUUID->"d55a12fa-8319-4bad-88e4-3ea88c5dc33d"],

Cell[TextData[{
 "The first step in writing an implicit method is to write a function called ",
 StyleBox["SolveNext", "MB"],
 " to solve eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag26"],
 ") at each time step."
}], "Text",ExpressionUUID->"553ff774-5984-4224-bdec-e380278c73f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "solveNext", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solveNext", "[", 
   RowBox[{"mat_", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tmp", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tmp", "=", 
       RowBox[{"#", "\[LeftDoubleBracket]", 
        RowBox[{"2", ";;", 
         RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"tmp", "\[LeftDoubleBracket]", 
           RowBox[{"1", ";;", 
            RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{
           RowBox[{"Last", "[", "tmp", "]"}], "+", "\[Alpha]"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"0.", ",", 
         RowBox[{"LinearSolve", "[", 
          RowBox[{"mat", ",", "b"}], "]"}], ",", "1."}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], "&"}]}]}], "InputOnly",
 CellLabel->"In[97]:=",ExpressionUUID->"60138868-5fb2-4a6a-9e77-128bb18bf1f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mat", "=", 
      RowBox[{"makeMatrix", "[", 
       RowBox[{"20", ",", "1.5"}], "]"}]}], ",", 
     RowBox[{"b", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"1.", ",", 
        RowBox[{"{", "20", "}"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"solveNext", "[", 
     RowBox[{"mat", ",", "1.5"}], "]"}], "[", "b", "]"}]}], "]"}]], "Input",
 CellLabel->"In[99]:=",ExpressionUUID->"f0159f1c-77c2-4f2e-8ee0-0946237cdb5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.`", ",", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{
     RowBox[{"makeMatrix", "[", 
      RowBox[{"20", ",", "1.5`"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", 
       "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",",
        "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "2.5`"}], 
      "}"}]}], "]"}], ",", "1.`"}], "}"}]], "Output",
 CellLabel->
  "Out[99]=",ExpressionUUID->"74cf3d3d-ac6a-47e1-9089-32b6cd36841a"]
}, Open  ]],

Cell[TextData[{
 StyleBox["solveNext", "MB"],
 " begins by making a list, called ",
 StyleBox["tmp", "MB"],
 ", by dropping the first and last terms, which are the boundary values, from \
a list of concentrations. The first and last values of list ",
 StyleBox["tmp", "MB"],
 " now correspond to ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], "2", 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "b830ec4d-2a72-4341-9542-32977104e3ce"],
 "and ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox[
    StyleBox["c", "dv"], 
    RowBox[{"m", "-", "1"}], 
    RowBox[{"k", "+", "1"}]], TraditionalForm]],ExpressionUUID->
  "eb998d7b-b431-45d2-aa13-11536bb3a930"],
 "respectively. In this example, for a potential step to the limiting current \
region, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     StyleBox["c", "dv"], "1", 
     RowBox[{"k", "+", "1"}]], "=", "0"}], TraditionalForm]],ExpressionUUID->
  "74e40e71-ea43-4f10-8c05-d5281f191acc"],
 " so that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox[
      StyleBox["c", "dv"], "2", "k"], "+", 
     RowBox[{
      StyleBox["D", "dv"], "\[VeryThinSpace]", 
      SubsuperscriptBox[
       StyleBox["c", "dv"], "1", 
       RowBox[{"k", "+", "1"}]]}]}], "=", 
    SubsuperscriptBox[
     StyleBox["c", "dv"], "2", "k"]}], TraditionalForm]],ExpressionUUID->
  "aadd423d-b304-4e0c-b940-3ea9ea0df61d"],
 ". Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox[
     StyleBox["c", "dv"], "m", 
     RowBox[{"k", "+", "1"}]], "=", "1"}], TraditionalForm]],ExpressionUUID->
  "e81ffd8e-8f09-4977-8271-9be5c6a23c5d"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"m", "-", "1"}], "k"], "+", 
     RowBox[{
      StyleBox["D", "dv"], "\[VeryThinSpace]", 
      SubsuperscriptBox[
       StyleBox["c", "dv"], "m", 
       RowBox[{"k", "+", "1"}]]}]}], "=", 
    RowBox[{
     SubsuperscriptBox[
      StyleBox["c", "dv"], 
      RowBox[{"m", "-", "1"}], "k"], "+", 
     StyleBox["D", "dv"]}]}], TraditionalForm]],ExpressionUUID->
  "00e39ba6-07f4-492b-9add-f0d4839c5477"],
 " which is written as ",
 Cell[BoxData[
  FormBox[
   ButtonBox["Last",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Last"], TraditionalForm]],ExpressionUUID->
  "f2b0506a-ce4b-45bf-9963-5453efee5bb4"],
 StyleBox["[tmp]+\[DoubleStruckCapitalD]", "MB"],
 ". A new list, ",
 StyleBox["b", "MB"],
 ", is thus created that corresponds to the vector ",
 StyleBox["b", "Matrix"],
 " in eqn (",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["EquationNumbered", "tag26"],
 "). The final step in ",
 StyleBox["solveNext", "MB"],
 " is to solve the tridiagonal matrix using the matrix solver ",
 ButtonBox["LinearSolve",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/LinearSolve"],
 ", and add the new boundary values to produce a list of concentrations at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "+", "1"}], TraditionalForm]],ExpressionUUID->
  "dfbbf602-92bc-4dea-9ab0-3599f5eda302"],
 ". ",
 StyleBox["LinearSolve[A,b]", "MB"],
 " solves a system of linear equations of the form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox["A", "Matrix"], "\[CenterDot]", 
     StyleBox["u", "Matrix"]}], "=", 
    StyleBox["b", "Matrix"]}], TraditionalForm]],ExpressionUUID->
  "eccf86d8-68f8-44eb-804f-65b51eb4d09d"],
 ". ",
 Cell[BoxData[
  FormBox[
   ButtonBox["NestList",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/NestList"], TraditionalForm]],ExpressionUUID->
  "bec5946f-8fa6-4ad3-9e25-c2f8c2fef6ca"],
 " is used to apply ",
 StyleBox["solveNext", "MB"],
 " to successive rows of concentrations beginning with the initial \
concentrations."
}], "Text",
 CellTags->"i:26",ExpressionUUID->"03595820-c14a-4749-ae7c-49ba0d610630"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "implicitSolve2", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"implicitSolve2", "[", 
   RowBox[{"m_Integer", ",", "n_Integer", ",", "\[Alpha]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", "y", ",", "z", ",", "solveNext", ",", "mat", ",", "b1"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
      RowBox[{"makeDiagonals", "[", 
       RowBox[{"m", ",", "\[Alpha]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mat", "=", 
      RowBox[{"makeMatrix", "[", 
       RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b1", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"1.", ",", 
        RowBox[{"{", "m", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"solveNext", "[", 
       RowBox[{"mat1_", ",", "\[Alpha]1_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"tmp", ",", "b"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tmp", "=", 
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"2", ";;", 
             RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tmp", "\[LeftDoubleBracket]", 
               RowBox[{"1", ";;", 
                RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{"Last", "[", "tmp", "]"}], "+", "\[Alpha]1"}]}], "}"}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{"0.", ",", 
             RowBox[{"LinearSolve", "[", 
              RowBox[{"mat1", ",", "b"}], "]"}], ",", "1."}], "}"}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], "&"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "@", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{"solveNext", "[", 
         RowBox[{"mat", ",", "\[Alpha]"}], "]"}], ",", "b1", ",", 
        RowBox[{"n", "-", "1"}]}], "]"}]}]}]}], "\n", "]"}]}]}], "InputOnly",
 CellLabel->
  "In[100]:=",ExpressionUUID->"db4346b5-76b3-4fed-902c-ec439e4007d2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"soln2", "=", 
   RowBox[{"implicitSolve2", "[", 
    RowBox[{"20", ",", "10", ",", "1.5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"soln2", ",", 
   RowBox[{"AxesEdge", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellLabel->
  "In[102]:=",ExpressionUUID->"486df1c8-a6a9-4473-8270-87efbaa8a64c"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx11X1QFHUcx/ETy85BmdWuOuDA6zzO67yue0goBe4T9OCQkPlEoigShxAi
JkaIVqb4mGieGT2gYFkBgjliAqKlYl6SPdiJiAWIPHrcA6EQp3DUHxwzfrfd
mZ2dfc8+/F6zu799PD5tjsGDx+P99N86mudeuvX/v+WB7A8vfI7OcHQBRxdy
dBFHF3N0CUeXcnROH9zbrbO9c4Zymoc7f6QHv1/Yvkd9bbgzI927N3Ra7ijz
cBeM9L5VE71f9fx9uAtH+rQJU+KmTr803EUj/UDx7XqvrIv6+708uJjZaycb
TPr7vTzMvJdjevjMj/r7vTxIM1XGkqTz5HmynhvcPen98MyirFvkOD4KMrJq
z+1sJV4+xr954VD4S83Ey8eV7Ysn+fs1Ei8f/eJ30o50XydePs42BJXG7L5G
vHxcbFh55L2yq8TLh+edfwIrdbXEy0fqrMrap/vMxMt6H+HuOfxufpqXjXgZ
rPnK5+X+8lvkfAbKypqWxKZ24mVg1VVnz8lrJV4G8a3yY3PNN4mXQezWKM8q
QzPxMripenLdJzNuEC+DCKeqbdfWRuJlcDxXc8nQ+hfxsr4zuDuDjjvmw3bi
FSDQqAzbXmQlXgFWezkazHss5LoC/LhGbuAXdhKvAGGj6yK+HmwnXgGUQT5f
j/+wjXgF2LWkPPnbBa3EK4CpwRm+fmYL8QoQKTs8em/sTeJlzR9w95lfZNav
SnQQrxDL4x47F/K8nXiFCFxm0fs1WYlXiFpnWX5gahe5nxA1Uw+tL/e0EK8Q
n4xNkn91oZN4hZDPLb7+V0EH8QqREKob8Pq0nXiFWDlm7MHokjbiZc2LcPfF
vg++cuQk9YoQU/poQ5afg3hF2HTc1Ds71E68Itx91tfn5xk24hWh4K0Juf4q
KxmHCDt9WkybpV3EK8Ljv/qnPjXFQrwimGf4iaufvUW8Ijx3NqJkVmwn8bLm
e7i7x8BHUd/doF4xIsa8Paorh3rFsCxbNeF7voN4xfAxJ0SPWWInXjGCOyQx
p/NsxCuG//P6hvmXrWR8YrybwlTvf8BKvGKcrDvKPBXcRbxiLFHwHpm5zkK8
7vOoV4Li7Ia6pr+pV4KUKuH+J0zUK8Gpg4Kc+CzqlSAm/tXqN70cxCuBjSm7
uGGHnXgl6OYtzP+gz0a8Eph+ubl4z0IbGbcEaxK/bbpXYSVeCTon7dtQJLQS
L+v/DHf3rqr8PN9JvVJU6INO2VuoV4oLAScK6yqoV4oHVifO7cigXilKFmaH
RIkdxCvF+dhmh1+lnXilKKiomtT4gp14peiPCVx0ssZGPFK80Z4a/cTLNuKV
cXhlCF95SjRpkHpl8DW5ukN6qFeGetuCcuN16pVBsfTF+cvLqFcGrTE5Mm49
9cpQPHFwWVugg3hliJ8mK53fRr3/9cQEV9zIeyId6buOp1zdL7cTr5zDK8dn
jxgXlbmoV46K7T2xs5zUK8cbWdqILVbqlWNLmG9KTS31yrE8t8qjuox65di2
+vfmmC3UK0eef8mK1CgH8cqRYUzcmDDeQbxyBIzz/rDtPPUqOLwKLPg5vS55
iHoVmOBYd+nMAPUq4DOn5bfeXupV4MXDNz5+8Bb1KpCtmOyXcYV6FchMWNy3
o5x6FQgKSNMFG6lXgZUndv8wzkC9CmxaGlJ4Te0gXiWHVwlnbOQzp1heJYJX
fKdLc1GvEtKzmzwa71KvEuteOZRXcJt6lciYWD5jTQf1KnFiSuXn6bXUq0Th
qI9+mXqaepVoapscs+8A9Srx2eQNi1xrqVfF4VUhNzsmuZnlVcHa05irH6Je
FcTflyYbBqlXhY/nyMcmOalXhdfXR5+f10O9KtR8ueLqog7qVSEprXdbVx31
qpBReu6bymrqVUGVyDP8UEy9ag6vGo7XnNN6WF41rqZ6+h5iedXYFzbu2FEX
9apRVFG4Y8sA9aqh9jh38Z1+6lUjc/em1bf/pl412hMeSozrpF41VhzQL13+
J/WqEbJ2Xm59DfVqOLwaGJNCLztZXg1K+sJ3XmF5NWicl3J84RD1apCeuidP
56JeDTwqjVF996hXg7n1q66o+qlXg+i9F6an91CvBoa4oIlpFurVYGP6iU8t
TdSr5fBqYT0dHTnI8mrRua1WamV5tcifvfvyUZZXi96tew+IhqhXi8ZZCfnd
g9SrBbPrpelt96hXi0shgqKyfurVIpkXUOx/h3q1qP/tsYP9NurVcXh1eKaD
N+hieXUIiGQi+1leHTZfrl92g+XVIdZkM3/B8upQ7HW2WzJEvTp0Cz2Phbqo
V4fkWIuneYB6ddj49k9hZ+5Srw5/ePpG2v6h3qc5vLTzOTrD0QUcXcjRRRxd
zNElHF3K6v8Cn0aGNg==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBEwTs+yFib1JiAgAAAFYBAAADAAAADAECDwQFEAUGDgMEEQYHEwgJEgcI
IBUWDQIDFAkKFgsMGg8QGA0OGxARHRITHhMUIRYXFwwNHBESGQ4PIhcYMCUm
JRobJhscJBkaJxwdLSIjKyAhKB0eLCEiLiMkOS4vMSYnMicoNCkqNSorLyQl
IxgZNissNywtOC0uOi8waF1ePzQ1QDU2PjM0QTY3Qzg5Qjc4T0RFPDEyRDk6
RTo7Sj9ASD0+S0BBTUJDTkNEUEVGRjs8TEFCUkdIU0hJYFVWVUpLVktMV0xN
WE1OXVJTVElKWU5PWk9QKh8gXFFSOzAxYVZXYldYY1hZZFlaX1RVXlNUZltc
Z1xdvMfGaV5fa2BhbWJjbmNkbGFicGVmf3R1c2hpcWZndGlqdWprdmtseG1u
em9wd2xte3BxfXJzcmdofHFyfnN0gHV2gXZ3gnd4hHl6hXp7hnt8h3x9iH1+
i4CBin+AjIGCmI2OjoOElYqLkIWGkYaHkoeIk4iJlImKmY6PlouMj4SFST4/
mo+Qua6vnZKTnpOUnJGSn5SVr6Slo5iZoJWWpJmapZqbppucqJ2eqZ6fp5yd
qp+graKjopeYrKGirqOksKWmsaansqeos6iptKmqtqust6ytuK2uu7Cxuq+w
vLGyal9gvbKzxbq7wLW2wba3wre4w7i5xLm6m5CRxru8vrO0x7y9yL2+AQwL
BRAPBhEQBA8OBxIRCRQTCBMSFiEgAw4NCxYVDBcWEBsaDhkYERwbEx4dFSAf
FyIhDRgXEh0cGCMiGSQjJjEwGyYlHCcmHSgnHyopIy4tGiUkICsqISwrDxoZ
Ii0sXWhnJzIxKTQzKjU0KzY1JTAvJC8uLDc2LTg3XmloLjk4MDs6ND8+NUA/
Mz49NkFARVBPOURDN0JBOkVEO0ZFPUhHP0pJQEtKPklIQUxLQ05NOENCQk1M
RE9OMTw7R1JRSVRTS1ZVTFdWTVhXTllYSFNSSlVUT1pZUVxbLzo5Ul1cVF9e
VmFgV2JhVWBfWGNiW2ZlU15dWWRjXGdmiX5/X2ppnainY25tZXBvYm1sZnFw
aHNyZ3JxdH9+YWxraXRzanV0b3p5bHd2cHt6cn18c359dYB/a3Z1cXx7doGA
d4KBhZCPeoWEe4aFfIeGfYiHgYyLeYSDfomIf4qJbXh3gIuKjpmYhpGQh5KR
iJOSiZSThI+Og46NipWUi5aVYGtqjZiXAg0Mk56dlJ+ekp2claCfmKOil6Kh
pK+ukZybmaSjmqWknqmonKemn6qpoq2so66tpbCvm6aloayrprGwp7KxtcC/
qbSzq7a1rLe2rbi3sby7qLOyrrm4r7q5j5qZsLu6kJuatsHAt8LBuMPCucTD
s769sr28usXEu8bFvcjHKwGU2w==
          "]]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, 
     {GrayLevel[0], 
      Line3DBox[{2, 1, 11, 21, 31, 41, 51, 61, 71, 81, 91, 101, 111, 121, 131,
        141, 151, 161, 171, 181, 191, 192, 193, 194, 195, 196, 197, 198, 199, 
       200, 190, 180, 170, 160, 150, 140, 130, 120, 110, 100, 90, 80, 70, 60, 
       50, 40, 30, 20, 10, 9, 8, 7, 6, 5, 4, 3, 2}]}},
    VertexNormals->CompressedData["
1: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
     "]], {}, {{}, {}}},
  AspectRatio->1,
  Axes->True,
  AxesEdge->{{-1, -1}, {1, -1}, {1, 1}},
  AxesLabel->{
    FormBox["\"k\"", TraditionalForm], 
    FormBox["\"j\"", TraditionalForm], 
    FormBox["\"  c\"", TraditionalForm]},
  AxesStyle->AbsoluteThickness[1],
  BoxRatios->{1, 1, 0.7},
  BoxStyle->AbsoluteDashing[{2.5, 2.5}],
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->288,
  LabelStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2, -0.5, 1}]], "Output",
 CellLabel->"Out[103]=",ExpressionUUID->"c06a5d65-b37f-4800-9b77-3380f02da310"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   ButtonBox["NestList",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/NestList"], TraditionalForm]],ExpressionUUID->
  "f7dff775-1f96-49ba-87ca-c6da012b4c84"],
 " is a function that applies ",
 StyleBox["solveNext", "MB"],
 " repeatedly with the output from the kth step becoming the input for the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"k", "+", "1"}], ")"}], TraditionalForm]],ExpressionUUID->
  "5531607c-4e09-46e6-9a9a-20a88430ac5c"],
 "th step. Applying ",
 StyleBox["solveNext", "MB"],
 " to the initial concentrations at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "1"}], TraditionalForm]],ExpressionUUID->
  "a4590362-3ac2-45ba-8350-ff9c82d5ba6c"],
 " will return the concentrations at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "2"}], TraditionalForm]],ExpressionUUID->
  "350502a4-40fb-4994-bbe3-a5a35811f089"],
 ". This output is then used as input for the next increment and the \
concentrations at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "3"}], TraditionalForm]],ExpressionUUID->
  "6e1c7f21-4cea-44cf-a828-93b9b058090f"],
 " are returned and so on until ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "=", "n"}], TraditionalForm]],ExpressionUUID->
  "743d6966-2a8f-48f7-abca-c2359e71e5db"],
 ". Finally the list of concentrations are transposed to allow comparison \
with the procedural method."
}], "Text",
 CellTags->{
  "i:27", "i:16", 
   "LU"},ExpressionUUID->"786e8dcb-a38b-4a31-9e1b-72477fe86a6e"],

Cell[TextData[{
 "Typical computation times for the four implicit methods can be determined \
and plotted in the same way as described in ",
 ButtonBox["\[Section]2.5.2",
  BaseStyle->"Hyperlink",
  ButtonData:>"s3.5.2"],
 "."
}], "Text",ExpressionUUID->"55641cb8-9ca5-4a1d-94eb-36110fea22de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "n", ",", "m", ",", "\[DoubleStruckCapitalD]", ",", "c", ",", "initial", 
     ",", "nValues"}], "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckCapitalD]", "=", "1.5"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"model", " ", "diffusion", " ", "coefficient"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"nValues", "=", 
   RowBox[{"{", 
    RowBox[{
    "100", ",", "200", ",", "400", ",", "600", ",", "800", ",", "1000"}], 
    "}"}]}], ";"}]}], "InputOnly",
 CellLabel->
  "In[104]:=",ExpressionUUID->"c4881b00-dd23-47b8-8f93-72091eb826bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"procedural", " ", "method"}], "*)"}], "\n", 
  RowBox[{"res3", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Timing", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"m", "=", 
          RowBox[{"1", "+", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"6", "*", 
             SqrtBox[
              RowBox[{"\[DoubleStruckCapitalD]", "*", 
               RowBox[{"(", 
                RowBox[{"#", "-", "1"}], ")"}]}]]}], "]"}]}]}], ";", 
         RowBox[{"implicitSolve1", "[", 
          RowBox[{"m", ",", " ", "#", ",", "\[DoubleStruckCapitalD]"}], "]"}],
          ";"}], ")"}], "]"}], "&"}], ",", "nValues"}], "]"}]}]}]], "Input",
 CellLabel->
  "In[107]:=",ExpressionUUID->"78c88db3-df0a-4f7e-a277-868cc1619bd2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.239309`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.626406`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.027352`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.419423`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.906566`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.415837`", ",", "Null"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[107]=",ExpressionUUID->"e349af42-53dc-4a60-b8b5-4468ad8b6dd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"LinearSolve", " ", "method"}], "*)"}], "\n", 
  RowBox[{"res4", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Timing", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"m", "=", 
          RowBox[{"1", "+", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"6", "*", 
             SqrtBox[
              RowBox[{"\[DoubleStruckCapitalD]", "*", 
               RowBox[{"(", 
                RowBox[{"#", "-", "1"}], ")"}]}]]}], "]"}]}]}], ";", 
         RowBox[{"implicitSolve2", "[", 
          RowBox[{"m", ",", " ", "#", ",", "\[DoubleStruckCapitalD]"}], "]"}],
          ";"}], ")"}], "]"}], "&"}], ",", "nValues"}], "]"}]}]}]], "Input",
 CellLabel->
  "In[108]:=",ExpressionUUID->"ad7e4ca3-9178-4e03-9246-857420098cff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.010744`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.113012`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.234266`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.409977`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.719134`", ",", "Null"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.78652`", ",", "Null"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[108]=",ExpressionUUID->"d628dd7b-c894-445c-b865-86c5f2c0d0a2"]
}, Open  ]],

Cell[TextData[{
 "The timings are converted into a plotable list by firstly flattening the \
list, then deleting all the ",
 StyleBox["Null", "MR"],
 " elements and finally removing the units."
}], "Text",ExpressionUUID->"0543499f-cf35-44c2-921a-1b0d69141b3c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"res3a", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{"nValues", ",", 
       RowBox[{"res3", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"res4a", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"nValues", ",", 
      RowBox[{"res4", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}]}],
   ";"}]}], "InputOnly",
 CellLabel->
  "In[109]:=",ExpressionUUID->"1ca700f9-fdbf-4639-ba47-077b6c63fe52"],

Cell[TextData[{
 "The relative calculation times are shown in Fig. ",
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["FigureCaption", "fig8"],
 ". The sharp increase in computation time when using ",
 StyleBox["LinearSolve", "MB"],
 " is due to the increasing computation time with increasing matrix size. The \
size of the matrix diagonals is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"m", "-", "2"}], TraditionalForm]],ExpressionUUID->
  "b2ea84ad-67e2-4d80-a399-a88a82594a6d"],
 " whereas the matrix size is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"m", "-", "2"}], ")"}], "2"], TraditionalForm]],ExpressionUUID->
  "cb3f0fc7-e4cb-4855-a991-0d2b40f0e0a4"],
 ". This is not such a problem when using ",
 StyleBox["LUDecomposition", "MB"],
 " since the matrix decomposition is performed only once."
}], "Text",ExpressionUUID->"77119317-6a8b-4a1e-9759-bd90f6489d3a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"res3a", ",", "res4a"}], "}"}], ",", "options2"}], "]"}]], "Input",
 CellLabel->
  "In[111]:=",ExpressionUUID->"da2de589-dd4d-4dc1-8286-af73e6fbb3f0"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {GrayLevel[0.2], AbsolutePointSize[7], AbsoluteThickness[1.6], 
     StyleBox[GeometricTransformationBox[InsetBox[
        StyleBox["\[FivePointedStar]",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], FontFamily -> "Arial", 
           GrayLevel[0.2], 
           AbsolutePointSize[7]]}], {0., 0.}], {{{
       100., -1.4299996750800927`}}, {{200., -0.4677565558073563}}, {{400., 
       0.026984618084209433`}}, {{600., 0.3502504510073335}}, {{800., 
       0.6453037181269783}}, {{1000., 0.8820458109091583}}}],
      FontFamily->"Arial"]}, 
    {GrayLevel[0.2], AbsolutePointSize[7], AbsoluteThickness[1.6], 
     StyleBox[GeometricTransformationBox[InsetBox[
        StyleBox["\[FilledSmallCircle]",
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], FontFamily -> "Arial", 
           GrayLevel[0.2], 
           AbsolutePointSize[7]]}], {0., 0.}], {{{
       100., -4.533407819761201}}, {{200., -2.180261271217788}}, {{
       400., -1.4512980571011718`}}, {{600., -0.8916542184182863}}, {{
       800., -0.3297075686675381}}, {{1000., -0.24013712769078083`}}}],
      FontFamily->"Arial"]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -4.957197799222252},
  BaseStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      TagBox["\"t\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"n\"", HoldForm], TraditionalForm], None}},
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
       15.954589770191003`, RotateLabel -> 0], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Automatic, Automatic}}, {{{{-4.605170185988091, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.01\"", ShowStringCharacters -> False], 
           0.01`15.954589770191003, AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
        0.}}, {-2.995732273553991, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.05\"", ShowStringCharacters -> False], 
           0.05`15.954589770191003, AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
        0.}}, {-2.3025850929940455`, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.10\"", ShowStringCharacters -> False], 
           0.1`15.954589770191003, AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
        0.}}, {-0.6931471805599453, 
        FormBox[
         TagBox[
          InterpretationBox[
           StyleBox["\"0.50\"", ShowStringCharacters -> False], 
           0.5`15.954589770191003, AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {0., 
        FormBox["1", TraditionalForm], {0.01, 0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.912023005428146, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6094379124341003`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0.6931471805599453, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.0986122886681098`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.3862943611198906`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.6094379124341003`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.791759469228055, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.9459101490553132`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.0794415416798357`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.1972245773362196`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.302585092994046, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.3978952727983707`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.4849066497880004`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}}, {{-4.605170185988091, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-2.995732273553991, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-2.3025850929940455`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-0.6931471805599453, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {0., 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
        0.}}, {-5.521460917862246, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.298317366548036, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-5.115995809754082, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.961845129926823, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.8283137373023015`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-4.710530701645918, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.912023005428146, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.506557897319982, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-3.2188758248682006`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.8134107167600364`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.659260036932778, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.5257286443082556`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-2.4079456086518722`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.6094379124341003`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-1.2039728043259361`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.916290731874155, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.5108256237659907, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.35667494393873245`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.2231435513142097, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
        0.}}, {-0.10536051565782628`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       0.6931471805599453, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.0986122886681098`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.3862943611198906`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.6094379124341003`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.791759469228055, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       1.9459101490553132`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.0794415416798357`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.1972245773362196`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.302585092994046, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.3978952727983707`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
       2.4849066497880004`, 
        FormBox[
         TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}, {
     Automatic, Automatic}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  LabelStyle->Directive[FontFamily -> "Arial", 11, Plain, 
    GrayLevel[0.2]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1000.}, {-4.957197799222252, 0.8820458109091583}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
     15.954589770191003`, RotateLabel -> 0]}]], "Output",
 CellLabel->"Out[111]=",ExpressionUUID->"99194ecd-0972-4d21-b20d-15ece5e38cbd"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Fig. ",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["Chapter"],
  FontWeight->"Bold"],
 StyleBox[".",
  FontWeight->"Bold"],
 StyleBox[
 CounterBox["FigureCaption"],
  FontWeight->"Bold"],
 "  Plot of computation time versus ",
 StyleBox["n", "PI"],
 " for a potential step to the limiting current region. implicitSolve1(",
 Cell[BoxData[
 "\[FivePointedStar]"],ExpressionUUID->"9ed27d58-c95f-4e6c-a6fb-69404028865d"],
 "),",
 Cell[BoxData[
  InterpretationBox[
   StyleBox[
    GraphicsBox[{},
     BaselinePosition->Baseline,
     ImageSize->{5, 0}],
    CacheGraphics->False],
   Spacer[5]]],ExpressionUUID->"315c887a-a81b-4528-9077-6c114eef716b"],
 "implicitSolve2(",
 Cell[BoxData[
 "\[FilledSmallCircle]"],ExpressionUUID->
  "b63038f2-6d08-48c3-9c4f-fc51879fb94d"],
 ")."
}], "FigureCaption",
 CellTags->"fig8",ExpressionUUID->"91e24030-6d68-40c5-975b-bd066828c071"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Chapter"],
 ".",
 
 CounterBox["Section"],
 " Summary"
}], "Section",
 CellTags->"s3.8",ExpressionUUID->"7be97e0f-b5dc-4a75-9ec9-c85a53e64bf0"],

Cell[TextData[{
 "In this chapter explicit and implicit finite difference methods were \
introduced and examples of the use of",
 " ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to solve the finite difference equations for a potential to a limiting \
current region were given. In the next chapter methods to improve the \
accuracy of the results by combining both the explicit and implicit methods \
and enhance the computation speed by using an expanding grid are examined."
}], "Text",ExpressionUUID->"9e965463-aa11-4858-a97f-7b7fab098c6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Further Reading", "Section",
 CellTags->"refs",ExpressionUUID->"4021f2c0-a2b8-48e0-ad3e-a941522a639b"],

Cell[TextData[{
 "Britz, D. (1988). ",
 StyleBox["Digital Simulation in Electrochemistry", "PI"],
 ", Springer-Verlag, Berlin.\nFeldberg, S. W. (1969). Digital Simulation: A \
General Method for Solving Electrochemical Diffusion-Kinetic Problems. In ",
 StyleBox["Electroanalytical Chemistry", "PI"],
 ", Vol. 3. (ed. A. J. Bard), pp. 199-296. Marcel Dekker, New York.\nPress, \
W. H., Teukolsky, S. A., Vetterling, W. T., and Flannery, B. P. (1992). ",
 StyleBox["Numerical Recipes in C", "PI"],
 ", (2nd edn). Chapter 19. Cambridge University Press, New York.\nRichtmyer, \
R. D. and Morton, K. W. (1967). ",
 StyleBox["Difference Methods for Initial Value Problems", "PI"],
 ", (2nd edn) Wiley, New York.\nSpeiser, B. (1996). Numerical Simulation of \
Electroanalytical Experiments: Recent Advances in Methodology. In ",
 StyleBox["Electroanalytical Chemistry", "PI"],
 ", Vol. 19. (ed. A. J. Bard and I. Rubenstein), pp. 1-109. Marcel Dekker, \
New York.\nWolfram, S. (1999). ",
 StyleBox["The Mathematica Book", "PI"],
 ", (4th edn) Cambridge University Press/Wolfram Media, New York/Champaign.\n\
Wolfram Research (1999). ",
 StyleBox["Mathematica 4 Standard Add-on Packages", "PI"],
 ", (4th edn). Wolfram Media, Champaign."
}], "Reference",ExpressionUUID->"0af42cb0-b9a8-4e8f-91b0-42dac7f457f6"]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
PrintingStyleEnvironment->"Printout",
WindowToolbars->"EditBar",
WindowSize->{1253, 979},
WindowMargins->{{Automatic, 148}, {Automatic, 0}},
WindowElements->{
 "StatusArea", "MemoryMonitor", "MagnificationPopUp", "HorizontalScrollBar", 
  "VerticalScrollBar", "MenuBar"},
WindowFloating->False,
PrintingCopies->1,
PrintingStartingPageNumber->17,
PrintingPageRange->{1, Automatic},
PageHeaders->{{
   Cell[
    TextData[{
      CounterBox["Page"]}], FontFamily -> "Arial", FontSize -> 12], 
   Cell[
    TextData[{"Finite Difference Methods"}], FontFamily -> "Arial", FontSize -> 
    12], None}, {None, 
   Cell[
    TextData[
     CounterBox[
     "Section", 
      CounterFunction :> (
       Part[{"Introduction", "Explicit Finite Difference Methods", 
         "Dimensionless variables", 
         "Initial condition and boundary conditions", 
         "Explicit Solution with Mathematica", 
         "Implicit Finite Difference Methods", 
         "Implicit Solution with Mathematica", "Summary", 
         "Further Reading"}, #]& )]], FontFamily -> "Arial", FontSize -> 12], 
   
   Cell[
    TextData[{
      CounterBox["Page"]}], FontFamily -> "Arial", FontSize -> 12]}},
PageFooters->{{None, None, None}, {None, None, None}},
PrintingOptions->{"FirstPageFace"->Right,
"FirstPageFooter"->False,
"FirstPageHeader"->False,
"GraphicsPrintingFormat"->"RenderInFrontEnd",
"PageFooterMargins"->{30, 30},
"PageHeaderMargins"->{60, 60},
"PageSize"->{596, 794},
"PaperSize"->{596, 794},
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintingMargins"->{{90, 90}, {60, 90}}},
ShowSelection->True,
TaggingRules->{
 "NextIndexingNumber" -> 29, 
  "IndexEntries" -> {{"i:11", "Dimensionless variables"}, {
    "i:13", "Tridiagonal matrix"}, {"i:16", "LU decomposition"}, {
    "i:2", "Taylor series expansion"}, {"i:6", "\[DoubleStruckCapitalD]"}, {
    "i:28", 
     StyleBox["NDSolve", FontFamily -> "Courier", FontWeight -> "Bold"], 
     "chronoamperometry solution"}, {
    "i:1", "Explicit finite difference methods", "", ""}, {
    "i:10", "Implicit finite difference methods", " ", ""}, {
    "i:12", "Explicit finite difference methods", "chronoamperometry", ""}, {
    "i:12", "Explicit finite difference methods", "procedural solution", 
     ""}, {"i:13", "Packages", 
     Cell[
     "LinearAlgebra`Tridiagonal", FontFamily -> "Courier", FontWeight -> 
      "Bold"], ""}, {
    "i:14", "Implicit finite difference methods", "procedural solution", 
     ""}, {"i:15", "Implicit finite difference methods", 
     "functional solution", ""}, {"i:17", 
     StyleBox["Normal", FontFamily -> "Courier", FontWeight -> "Bold"], "", 
     ""}, {"i:18", 
     StyleBox["Table", FontFamily -> "Courier", FontWeight -> "Bold"], "", 
     ""}, {"i:19", 
     StyleBox["Module", FontFamily -> "Courier", FontWeight -> "Bold"], "", 
     ""}, {"i:20", 
     StyleBox["Ceiling", FontFamily -> "Courier", FontWeight -> "Bold"], "", 
     ""}, {"i:21", 
     StyleBox["ListCorrelate", FontFamily -> "Courier", FontWeight -> "Bold"],
      "", ""}, {"i:22", 
     StyleBox["Map", FontFamily -> "Courier", FontWeight -> "Bold"], "", 
     ""}, {"i:22", 
     StyleBox["Range", FontFamily -> "Courier", FontWeight -> "Bold"], "", 
     ""}, {"i:23", 
     StyleBox["First", FontFamily -> "Courier", FontWeight -> "Bold"], "", 
     ""}, {"i:23", 
     StyleBox["FoldList", FontFamily -> "Courier", FontWeight -> "Bold"], "", 
     ""}, {"i:23", 
     StyleBox["Rest", FontFamily -> "Courier", FontWeight -> "Bold"], "", 
     ""}, {"i:24", 
     StyleBox["Transpose", FontFamily -> "Courier", FontWeight -> "Bold"], "",
      ""}, {"i:25", "Packages", 
     StyleBox[
     "Electrochem`Tridiagonal`", FontFamily -> "Courier", FontWeight -> 
      "Bold"], ""}, {"i:26", 
     StyleBox["Last", FontFamily -> "Courier", FontWeight -> "Bold"], "", 
     ""}, {"i:26", 
     StyleBox["NestList", FontFamily -> "Courier", FontWeight -> "Bold"], "", 
     ""}, {"i:27", 
     StyleBox["LinearSolve", FontFamily -> "Courier", FontWeight -> "Bold"], 
     "", ""}, {
    "i:5", "Finite difference methods", "boundary conditions", ""}, {
    "i:6", "Diffusion coefficient", "", ""}, {"i:6", 
     StyleBox["D", FontFamily -> "Courier", FontWeight -> "Bold"], "", ""}, {
    "i:7", "Model diffusion coefficient", "", ""}, {
    "i:8", "Explicit finite difference methods", "functional solution", ""}, {
    "i:9", 
     StyleBox["Flatten", FontFamily -> "Courier", FontWeight -> "Bold"], "", 
     ""}, {"i:9", 
     StyleBox["TableForm", FontFamily -> "Courier", FontWeight -> "Bold"], "",
      ""}}},
ShowCellTags->False,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->"SERM.nb",
ExpressionUUID->"4a4fcf56-7acc-4999-b10c-36bdb9046b87"
]

